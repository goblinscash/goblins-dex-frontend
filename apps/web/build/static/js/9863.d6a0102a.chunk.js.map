{"version":3,"file":"static/js/9863.d6a0102a.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/pages/staking/staking.module.scss?3ef3","pages/staking/components/Rewards.js","pages/staking/components/Staking.js","pages/staking/components/Withdraw.js","webpack://@uniswap/interface/./src/components/Modals/MigrationPop/migrationPop.module.scss?6e84","components/Modals/MigrationPop/index.jsx","pages/staking/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"stakingSec\":\"staking_stakingSec__naatj\",\"cardCstm\":\"staking_cardCstm__RvlOo\",\"InputWrp\":\"staking_InputWrp__bsBMf\"};","import { useState } from \"react\";\n\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n\n//css\nimport styles from \"../staking.module.scss\";\n\n// image\nimport wbchlogo from \"assets/farmingAssets/Images/wbchlogo.png\";\nimport bchlogo from \"assets/farmingAssets/Images/bchlogo.png\";\n// import logo from \"components/Logo/ChainSymbols/sbch.svg\";\n\n//hooks && helpers\nimport { toCommas } from \"helpers/utils\";\nimport { useWallet } from \"hooks/useWallet\";\nimport Web3Intraction from \"utils/web3Intraction\";\n\nfunction Rewards({ details, getDetails, isBlocked, apr }) {\n  const { currentNetwork } = useSelector((state) => state.dashboard);\n  const wallet = useWallet();\n  const [loading, setLoading] = useState(false);\n\n  const getRewards = async (e) => {\n    try {\n      e.preventDefault();\n      if (isBlocked)\n        return toast.error(\" Our Product is unavailable in your location\");\n      setLoading(true);\n      const web3 = new Web3Intraction(currentNetwork, wallet.provider);\n      await web3.getTokenRewards();\n      setLoading(false);\n      getDetails();\n      toast.success(\"Reward Claimed\");\n    } catch (error) {\n      setLoading(false);\n      toast.error(error);\n      console.log(error, \"<====error\");\n    }\n  };\n\n  console.log(apr, \"apr\")\n  return (\n    <div className=\"lg:col-span-4 sm:col-span-6 col-span-12\">\n      <div\n        className={`${styles?.cardCstm} cardCstm p-4 h-full  rounded-xl flex items-center justify-between flex-col`}\n      >\n        <div className=\"top pb-3 text-center lg:mb-3 border-b-2 border-white w-full\">\n          <h4 className=\"m-0 text-3xl font-extrabold text-white\">REWARDS</h4>\n          <div className=\"pt-3\">\n            <h6 className=\"m-0 font-extrabold py-2 text-lg flex items-center justify-center\">\n              {toCommas(Number(details?.earnedAmount || 0).toFixed(4)) + \" \"}\n              {details?.rewardSymbol ? details.rewardSymbol : \"\"}\n              <img\n                src={details?.rewardSymbol === \"WBCH\" ? wbchlogo : bchlogo}\n                height={100}\n                className=\"max-w-full flex-shrink-0 object-contain ms-2\"\n                width={100}\n                style={{ height: 20, width: 20 }}\n                alt=\"\"\n              />\n            </h6>\n          </div>\n        </div>\n\n        <div className=\"contentBody lg:px-4 w-full\">\n          <div className=\"claimInput mt-4 my-2 text-center\">\n            <h6 className=\"m-0 font-extrabold py-2 text-lg \">APR: </h6>\n            <h6 className=\"m-0 font-extrabold py-2 text-lg \">{apr}%</h6>\n          </div>\n\n          <div className=\"btnWrpper text-center mt-3\">\n            <div className=\"py-2\">\n              <button\n                type=\"button\"\n                onClick={getRewards}\n                disabled={isBlocked || loading || !details?.earnedAmount}\n                className=\"inline-flex items-center justify-center commonBtn font-bold btn px-4\"\n              >\n                {loading ? (\n                  <div className=\"spinner\">\n                    <span className=\"\"> Please wait...</span>\n                  </div>\n                ) : (\n                  \"CLAIM\"\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Rewards;\n","import React, { useState, useEffect } from \"react\";\n\n\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n\n// image\nimport logo from \"assets/farmingAssets/Images/logoIcn.png\";\n\n//css\nimport styles from \"../staking.module.scss\";\n\n//hooks\nimport Web3Intraction from \"utils/web3Intraction\";\nimport {useWallet} from \"hooks/useWallet\";\nimport { toCommas } from \"helpers/utils\";\n\nfunction Staking({ getDetails, isBlocked, details }) {\n  const { currentNetwork } = useSelector((state) => state.dashboard);\n  const wallet = useWallet();\n\n  const [amount, setAmount] = useState(\"\");\n  const [percentage, setPercentage] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      if (isBlocked)\n        return toast.error(\" Our Product is unavailable in your location\");\n      if (amount <= 0) return toast.error(\"Amount Must be greater then zero\");\n\n      setLoading(true);\n      const web3 = new Web3Intraction(currentNetwork, wallet.provider);\n      await web3.tokenStake(amount);\n      setLoading(false);\n      setAmount(0);\n      toast.success(\"Amount Staked\");\n      getDetails();\n    } catch (error) {\n      setLoading(false);\n      toast.error(error);\n\n      console.log(error, \"<====error\");\n    }\n  };\n\n\n\n\n  \n\n  const handleChange = (e) => {\n    let { value } = e.target;\n    value = value.replace(/[^\\d.]/g, '');\n    if (isNaN(Number(value.replace(/,/g, '')))) {\n      return;\n    }\n    const formattedValue = value.replace(/,/g, '');\n    setAmount(formattedValue);\n  };\n\n\n\n\n  const handlePercentage = async (e, value) => {\n    try {\n      setPercentage(value);\n      const amount =\n        (parseFloat(value) / 100) * parseFloat(details?.unStakedAmount);\n      setAmount(amount);\n    } catch (error) {\n      console.log(error, \"<====error\");\n    }\n  };\n\n\n\n\n  return (\n    <div className=\"lg:col-span-4 sm:col-span-6 col-span-12\">\n      <div\n        className={`${styles?.cardCstm} cardCstm p-4 h-full  rounded-xl flex items-center justify-between flex-col`}\n      >\n        <div className=\"top pb-3 text-center lg:mb-3 border-b-2 border-white w-full\">\n          <h4 className=\"m-0 text-3xl font-extrabold text-white\">UNSTAKED</h4>\n          <div className=\"pt-3\">\n            <h6 className=\"m-0 font-extrabold py-2 text-lg flex items-center justify-center\">\n              {toCommas(Number(details?.unStakedAmount || 0).toFixed(2) || 0)} {details?.stakeSymbol}\n              <img\n                src={logo}\n                height={100}\n                className=\"max-w-full flex-shrink-0 object-contain ms-2\"\n                width={100}\n                style={{ height: 20, width: 20 }}\n                alt=\"\"\n              />\n            </h6>\n          </div>\n        </div>\n        <form onSubmit={handleSubmit}>\n          <div className=\"contentBody lg:px-4 w-full\">\n            <div className=\"claimInput mt-4 my-2 text-center\">\n              {/* <div\n                      className={`${styles?.InputWrp} InputWrp cursor-pointer mx-auto flex py-2 px-3 text-lg items-center justify-center font-bold text-white rounded`}\n                    >\n                      100\n                    </div> */}\n              <div className=\"relative iconWithText\">\n                {/* <button\n                  className=\"flex items-center justify-center btn absolute icn commonBtn h-auto py-2 right-2 rounded rounded text-xs px-2\"\n                  onClick={setMaxAmount}\n                >\n                  Max\n                </button> */}\n                <input\n                  type=\"text\"\n                  value={toCommas(amount)}\n                  onChange={handleChange}\n                  placeholder=\"Enter Amount\"\n                  className={`${styles?.InputWrp} InputWrp text-center bg-transparent text-white cursor-pointer mx-auto flex py-2 px-3 text-lg items-center justify-center font-bold text-white rounded`}\n                  required\n                />\n              </div>\n              <h6 className=\"m-0 font-extrabold py-2 text-lg \">\n                AMOUNT TO STAKE\n              </h6>\n            </div>\n            <div className=\"my-2\">\n              {/* <label\n                htmlFor=\"\"\n                className=\"m-0 font-bold text-white block text-center\"\n              >\n                Withdraw Percentage Amount\n              </label> */}\n              <ul\n                className=\"list-none mt-3 pl-0 mb-0 flex items-center justify-center gap-2 radioList\"\n                style={{ listStyle: \"none\" }}\n              >\n                {[25, 50, 75, 100].map((data, key) => (\n                  <li className=\"relative\" key={key}>\n                    <input\n                      type=\"radio\"\n                      id=\"10%\"\n                      name=\"withdraw\"\n                      className=\"file w-full h-full left-0 top-0 z-9 cursor-pointer absolute opacity-0\"\n                      onClick={(e) => handlePercentage(e, data)}\n                      checked={percentage == data}\n                    />\n                    <label\n                      htmlFor=\"10%\"\n                      className=\" h-auto radioBtn text-xs font-bold  p-2 text-white\"\n                    >\n                      {data === 100 ? \"Max\" : data + \"%\"}\n                    </label>\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div className=\"btnWrpper text-center mt-3\">\n              <div className=\"py-2\">\n                <button\n                  type=\"submit\"\n                  disabled={isBlocked || loading}\n                  className=\"inline-flex items-center justify-center commonBtn font-bold btn px-4\"\n                >\n                  {loading ? (\n                    <div className=\"spinner\">\n                      <span className=\"\"> Please wait...</span>\n                    </div>\n                  ) : (\n                    \"STAKE\"\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n\n\n}\n\nexport default Staking;\n","import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n\n//css\nimport styles from \"../staking.module.scss\";\n\n// image\nimport logo from \"assets/farmingAssets/Images/logoIcn.png\";\n\n//hooks && helpers\nimport { toCommas } from \"helpers/utils\";\nimport { useWallet } from \"hooks/useWallet\";\nimport Web3Intraction from \"utils/web3Intraction\";\n\nfunction Withdraw({ getDetails, details, isBlocked }) {\n  const { currentNetwork } = useSelector((state) => state.dashboard);\n  const wallet = useWallet();\n\n  const [amount, setAmount] = useState(\"\");\n  const [percentage, setPercentage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleWithdraw = async (e) => {\n    try {\n      e.preventDefault();\n      if (isBlocked)\n        return toast.error(\" Our Product is unavailable in your location\");\n\n      if (!Number(details?.stakedAmount)) {\n        return toast.error(\"No GOB Staked!\");\n      }\n      if (amount <= 0) return toast.error(\"Amount Must be greater then zero\");\n\n      if (amount > Number(details?.stakedAmount)) {\n        return toast.error(\n          \"Withdraw must be less then or equal to staked amount\"\n        );\n      }\n      setLoading(true);\n      const web3 = new Web3Intraction(currentNetwork, wallet.provider);\n      await web3.tokenWithdraw(amount);\n      setLoading(false);\n      setAmount(0);\n      toast.success(\"Amount Withdraw\");\n      getDetails();\n    } catch (error) {\n      setLoading(false);\n      toast.error(error);\n    }\n  };\n\n  const handleExit = async (e) => {\n    try {\n      e.preventDefault();\n      if (isBlocked)\n        return toast.error(\" Our Product is unavailable in your location\");\n\n      if (!details?.stakedAmount) {\n        return toast.error(\"No GOB Staked!\");\n      }\n      setLoading(true);\n      const web3 = new Web3Intraction(currentNetwork, wallet.provider);\n      await web3.tokenExit();\n      setLoading(false);\n      setAmount(0);\n      toast.success(\"Amount Reward Claimed & Withdraw!\");\n    } catch (error) {\n      setLoading(false);\n      toast.error(error);\n    }\n  };\n\n  const handlePercentage = async (e, value) => {\n    try {\n      if (!Number(details?.stakedAmount)) {\n        return toast.error(\"No GOB Staked!\");\n      }\n      setPercentage(value);\n      const amount =\n        (parseFloat(value) / 100) * parseFloat(details?.stakedAmount);\n      setAmount(amount);\n    } catch (error) {\n      console.log(error, \"<====error\");\n    }\n  };\n\n  const handleChange = (e) => {\n    let { value } = e.target;\n    value = value.replace(/[^\\d.]/g, \"\");\n    if (isNaN(Number(value.replace(/,/g, \"\")))) {\n      return;\n    }\n    const formattedValue = value.replace(/,/g, \"\");\n    setAmount(formattedValue);\n  };\n\n  return (\n    <div className=\"lg:col-span-4 sm:col-span-6 col-span-12\">\n      <div\n        className={`${styles?.cardCstm} cardCstm p-4 h-full  rounded-xl flex items-center justify-between flex-col`}\n      >\n        <div className=\"top pb-3 text-center lg:mb-3 border-b-2 border-white w-full\">\n          <h4 className=\"m-0 text-3xl font-extrabold text-white\">STAKED</h4>\n          <div className=\"pt-3\">\n            <h6 className=\"m-0 font-extrabold py-2 text-lg flex items-center justify-center\">\n              {toCommas(Number(details?.stakedAmount || 0).toFixed(2) || 0)}{\" \"}\n              {details?.stakeSymbol}\n              <img\n                src={logo}\n                height={100}\n                className=\"max-w-full flex-shrink-0 object-contain ms-2\"\n                width={100}\n                style={{ height: 20, width: 20 }}\n                alt=\"\"\n              />\n            </h6>\n          </div>\n        </div>\n\n        <form onSubmit={handleWithdraw}>\n          <div className=\"contentBody lg:px-4 w-full\">\n            <div className=\"claimInput mt-4 my-2 text-center\">\n              {/* <div\n                      className={`${styles?.InputWrp} InputWrp cursor-pointer mx-auto flex py-2 px-3 text-lg items-center justify-center font-bold text-white rounded`}\n                    >\n                      100\n                    </div> */}\n\n              <div className=\"relative iconWithText\">\n                {/* <button className=\"flex items-center justify-center btn absolute icn commonBtn h-auto py-2 right-2 rounded rounded text-xs px-2\" >\n                      Max\n                    </button> */}\n                <input\n                  type=\"text\"\n                  value={toCommas(amount)}\n                  onChange={handleChange}\n                  placeholder=\"Enter Amount\"\n                  className={`${styles?.InputWrp} InputWrp text-center bg-transparent text-white cursor-pointer mx-auto flex py-2 px-3 text-lg items-center justify-center font-bold text-white rounded`}\n                  required\n                />\n              </div>\n              <h6 className=\"m-0 font-extrabold py-2 text-lg \">\n                AMOUNT TO WITHDRAW\n              </h6>\n            </div>\n            <div className=\"my-2\">\n              {/* <label\n                htmlFor=\"\"\n                className=\"m-0 font-bold text-white block text-center\"\n              >\n                Withdraw Percentage Amount\n              </label> */}\n              <ul\n                className=\"list-none mt-3 pl-0 mb-0 flex items-center justify-center gap-2 radioList\"\n                style={{ listStyle: \"none\" }}\n              >\n                {[25, 50, 75, 100].map((data, key) => (\n                  <li className=\"relative\" key={key}>\n                    <input\n                      type=\"radio\"\n                      id=\"10%\"\n                      name=\"withdraw\"\n                      className=\"file w-full h-full left-0 top-0 z-9 cursor-pointer absolute opacity-0\"\n                      onClick={(e) => handlePercentage(e, data)}\n                      checked={percentage == data}\n                    />\n                    <label\n                      htmlFor=\"10%\"\n                      className=\" h-auto radioBtn text-xs font-bold  p-2 text-white\"\n                    >\n                      {data === 100 ? \"Max\" : data + \"%\"}\n                    </label>\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div className=\"btnWrpper text-center mt-3\">\n              <div className=\"py-2\">\n                <button\n                  type=\"submit\"\n                  className=\"inline-flex items-center justify-center commonBtn font-bold btn px-4\"\n                  disabled={isBlocked || loading || !details?.stakedAmount}\n                >\n                  {loading ? (\n                    <div className=\"spinner\">\n                      <span className=\"\"> Please wait...</span>\n                    </div>\n                  ) : (\n                    \"WITHDRAW\"\n                  )}\n                </button>\n              </div>\n              {/* <div className=\"py-2\">\n                <button\n                  type=\"button\"\n                  onClick={handleExit}\n                  disabled={isBlocked || loading || !details?.stakedAmount}\n                  className=\"inline-flex items-center justify-center commonBtn font-bold btn px-4\"\n                >\n                  {loading ? (\n                    <div className=\"spinner\">\n                      <span className=\"\"> Please wait...</span>\n                    </div>\n                  ) : (\n                    \"WITHDRAW & CLAIM\"\n                  )}\n                </button>\n              </div> */}\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Withdraw;\n","// extracted by mini-css-extract-plugin\nexport default {\"migrationPop\":\"migrationPop_migrationPop__DYUWR\",\"modalDialog\":\"migrationPop_modalDialog__Ol9NX\"};","import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n\n// css\nimport styles from \"./migrationPop.module.scss\";\n\n//helpers\nimport { useWallet } from \"hooks/useWallet\";\nimport Web3Intraction from \"utils/web3Intraction\";\n\nconst MigrationPop = ({ migration, setMigration, balance, getDetails }) => {\n  const wallet = useWallet();\n  const { currentNetwork } = useSelector((state) => state.dashboard);\n  const [loading, setLoading] = useState(false);\n  const [progressBar, setProgressBar] = useState(0);\n  const [status, setStatus] = useState(\"Pending\");\n\n  const handleMigration = async (e) => {\n    try {\n      e.preventDefault();\n\n      const web3 = new Web3Intraction(currentNetwork, wallet.provider);\n      setLoading(true);\n\n      if (balance <= 0) return;\n\n      setProgressBar(20)\n      setStatus(\"Waiting for contract approval!\")\n      let amountValue = await web3.checkAllowance(\n        balance,\n        \"0x47c61F29B1458d234409Ebbe4B6a70F3b16528EF\",\n        web3.contractDetails.migrationAddress\n      );\n\n      setProgressBar(45)\n      setStatus(\"Fund Transferring to your wallet...\")\n\n      await web3.unStakeFromMigration(amountValue, true);\n      setProgressBar(75)\n      setStatus(\"Staking in new contract...\")\n      await web3.tokenStake(balance);\n      setProgressBar(100)\n      toast.success(\"Amount Staked\");\n      getDetails();\n\n      setMigration(false)\n      setLoading(false);\n    } catch (error) {\n      console.log(error, \"<====error\");\n      setLoading(false);\n      toast.error(error);\n    }\n  };\n\n  return (\n    <>\n      <div\n        className={`${styles.StakePop} fixed inset-0 flex items-center justify-center cstmModal`}\n      >\n        <div className=\"absolute inset-0 bg-black opacity-50\"></div>\n        <div\n          className={`${styles.modalDialog} modalDialog p-2 mx-auto rounded-lg z-10 relative`}\n        >\n          <div className=\"top flex items-center justify-center gap-2 pt-2 px-3\">\n            <div className=\"left flex items-center justify-center gap-2 p-3\">\n              <p className=\"m-0   text-white font-bold text-lg\">Migration</p>\n            </div>\n\n            <button\n              onClick={(e) => setMigration(!migration)}\n            type=\"button\"\n              className=\"m-0 border-0 p-0 transparent    text-gray-400 absolute top-2 right-1\"\n              disabled={loading}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"30\"\n                height=\"30\"\n                viewBox=\"0 0 30 30\"\n                fill=\"none\"\n              >\n                <path\n                  opacity=\"0.4\"\n                  d=\"M20.425 2.5H9.5875C5.35 2.5 2.5 5.475 2.5 9.9V20.1125C2.5 24.525 5.35 27.5 9.5875 27.5H20.425C24.6625 27.5 27.5 24.525 27.5 20.1125V9.9C27.5 5.475 24.6625 2.5 20.425 2.5Z\"\n                  fill=\"#00FF00\"\n                />\n                <path\n                  d=\"M18.7697 17.2131L16.5459 14.9906L18.7684 12.7681C19.1959 12.3419 19.1959 11.6481 18.7684 11.2219C18.3409 10.7919 17.6497 10.7931 17.2222 11.2206L14.9984 13.4431L12.7747 11.2181C12.3472 10.7906 11.6547 10.7931 11.2272 11.2181C10.8009 11.6456 10.8009 12.3394 11.2272 12.7656L13.4522 14.9906L11.2322 17.2094C10.8047 17.6369 10.8047 18.3306 11.2322 18.7556C11.4459 18.9706 11.7247 19.0769 12.0047 19.0769C12.2859 19.0769 12.5647 18.9706 12.7784 18.7569L14.9984 16.5369L17.2234 18.7606C17.4372 18.9744 17.7159 19.0806 17.9959 19.0806C18.2759 19.0806 18.5559 18.9731 18.7697 18.7606C19.1972 18.3331 19.1972 17.6406 18.7697 17.2131Z\"\n                  fill=\"#00FF00\"\n                />\n              </svg>\n            </button>\n          </div>\n          <div className=\"modalBody py-2\">\n            <div className=\"inner p-3\">\n              <div className=\"grid gap-3 grid-cols-12\">\n                <div className=\"col-span-12 text-center\">\n                  <p className=\"m-0 text-white\">\n                    {\" \"}\n                    <b>Balance: {balance} sGOB</b>\n                  </p>\n                </div>\n                <div className=\"col-span-12\">\n                  <div className=\"flex items-center gap-2\">\n                    <div\n                      className={`${styles.progressWrp} w-full progressWrp relative rounded-pill p-2  rounded-pill`}\n                      style={{ background: \"#000\" }}\n                    >\n                      <div\n                        className=\"absolute h-full w-full rounded-pill top-0 left-0\"\n                        style={{\n                          background: \"#00FF00\",\n                          width: `${progressBar}%`,\n                        }}\n                      ></div>\n                    </div>\n                    <p className=\"m-0 text-white\">{progressBar}%</p>\n                  </div>\n                  <ul className=\"list-none pl-0 mb-0 flex items-center justify-end gap-2\">\n                    <li className=\"text-white font-semibold\">Status: </li>\n                    <li className=\"themeClr font-semibold\"> {status}</li>\n                  </ul>\n                </div>\n                <div className=\"col-span-12\">\n                  <div className=\"btnWrpper mt-4\">\n                    <button\n                      type=\"button\"\n                      onClick={handleMigration}\n                      disabled={loading || !balance}\n                      className=\" commonBtn    mx-auto flex items-center justify-center btn w-full\"\n                    >\n                      {loading ? (\n                        <div className=\"spinner\">\n                          <span className=\"\"> Please wait...</span>\n                        </div>\n                      ) : (\n                        \"Migrate\"\n                      )}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MigrationPop;\n","import { useEffect, useState } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\n// css\nimport \"assets/styles/main.css\";\n\n// image\nimport logo from \"assets/farmingAssets/Images/logo.png\";\n\n///component\nimport CommonLoader from \"components/Loader/SpinningLoader\";\nimport Rewards from \"./components/Rewards\";\nimport TokenStaking from \"./components/Staking\";\nimport Withdraw from \"./components/Withdraw\";\n\n//hooks && helpers\n// import {useWallet} from \"hooks/useWallet\";\nimport * as request from \"helpers/apiRequests\";\nimport { priceGraphQl } from \"helpers/constants\";\nimport { toCommas } from \"helpers/utils\";\nimport Web3Intraction from \"utils/web3Intraction\";\n\nimport { useWallet } from \"hooks/useWallet\";\n\n// css\nimport MigrationPop from \"components/Modals/MigrationPop\";\nimport { createPortal } from \"react-dom\";\nimport styles from \"./staking.module.scss\";\n\nconst Staking = () => {\n  const { currentNetwork, isBlocked } = useSelector((state) => state.dashboard);\n  const wallet = useWallet();\n  const [loading, setLoading] = useState(false);\n  const [migration, setMigration] = useState(false);\n  const [apr, setApr] = useState(0);\n\n  const [price, setPrice] = useState({\n    GOBInPrice: 0,\n    WBCHInPrice: 0,\n  });\n\n  const [details, setDetails] = useState({\n    stakeSymbol: null,\n  });\n\n  const getDetails = async () => {\n    try {\n      setLoading(true);\n      const web3 = new Web3Intraction(currentNetwork, wallet.provider);\n      console.log(web3, \"web3\")\n      let detail = await web3.getDetailInfo();\n      console.log(details, \"detail\", currentNetwork)\n      let data = await web3.getTokenBalance(\n        currentNetwork?.chainId == 56 ? \"0x701ACA29AE0F5d24555f1E8A6Cf007541291d110\" :\n          \"0x47c61F29B1458d234409Ebbe4B6a70F3b16528EF\"\n      );\n\n\n      setDetails({\n        ...detail,\n        unStakedAmountInDollar:\n          detail.unStakedAmount * Number(price.GOBInPrice),\n        stakedAmountInDollar: detail.stakedAmount * Number(price.GOBInPrice),\n        balanceInDollar: detail.balance * Number(price.GOBInPrice),\n        sGob: data.balance,\n      });\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error, \"<===err\");\n      setLoading(false);\n    }\n  };\n\n  const handleMigrationPopup = () => {\n    setMigration(!migration);\n  };\n\n  const getAPR = async (totalSupply, BCHPrice, GOBPrice) => {\n    try {\n      const web3 = new Web3Intraction(currentNetwork, wallet.provider);\n      let getApr = await web3.getAPR(totalSupply, BCHPrice, GOBPrice);\n      setApr(getApr);\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  const getUsdPrice = async () => {\n    try {\n      const getUSDPrice = request.getUSDPrice(priceGraphQl);\n\n      const GobAndWbchPair = await getUSDPrice(\n        `query {\n          pool(id:\"0x2f19229617f37abfc990c8f6952bee5c8d4c1797\"){\n            id\n            sqrtPrice\n            id\n            liquidity\n            token0 {\n              id\n              decimals\n              name\n              symbol\n            }\n            token1 {\n              id\n              decimals\n              name\n              symbol\n            }\n            token0Price\n            token1Price\n            volumeUSD\n          }  \n       }`,\n        {}\n      );\n      const WbchAndbcUsdtPair = await getUSDPrice(\n        `query {\n          pool(id:\"0x934f434a226ed5b6c4f7fc9a2dc5dc0467bddee7\"){\n            id\n            sqrtPrice\n            id\n            liquidity\n            token0 {\n              id\n              decimals\n              name\n              symbol\n            }\n            token1 {\n              id\n              decimals\n              name\n              symbol\n            }\n            token0Price\n            token1Price\n            volumeUSD\n          }  \n       }`,\n        {}\n      );\n      const priceData1 = await getUSDPrice(\n        `query {\n          pool(id:\"0x934f434a226ed5b6c4f7fc9a2dc5dc0467bddee7\"){\n            id\n            sqrtPrice\n            id\n            liquidity\n            token0 {\n              id\n              decimals\n              name\n              symbol\n            }\n            token1 {\n              id\n              decimals\n              name\n              symbol\n            }\n            token0Price\n            token1Price\n            volumeUSD\n          }  \n       }`,\n        {}\n      );\n\n      let getGobPrice =\n        parseFloat(WbchAndbcUsdtPair.pool.token1Price) *\n        parseFloat(GobAndWbchPair.pool.token0Price);\n\n      setPrice({\n        GOBInPrice: Number(getGobPrice || 0).toFixed(2),\n        WBCHInPrice: Number(priceData1?.pool?.token1Price || 0).toFixed(2),\n      });\n    } catch (error) { }\n  };\n\n  useEffect(() => {\n    if (details.stakeSymbol && price.GOBInPrice && price.WBCHInPrice) {\n      getAPR(details.totalSupply, price.WBCHInPrice, price.GOBInPrice);\n    }\n  }, [details, price]);\n\n  useEffect(() => {\n    if (\n      wallet.isActive &&\n      wallet.address &&\n      currentNetwork &&\n      price.GOBInPrice\n    ) {\n      getDetails();\n    }\n  }, [wallet, currentNetwork, price]);\n\n  useEffect(() => {\n    getUsdPrice();\n  }, []);\n\n  console.log(details, \"@@@@@@@\", currentNetwork.chainId)\n\n  return (\n    <>\n      {migration &&\n        createPortal(\n          <MigrationPop\n            migration={migration}\n            setMigration={setMigration}\n            balance={details.sGob || 0}\n            getDetails={getDetails}\n\n          // load={load}\n          />,\n          document.body\n        )}\n\n      {loading && (\n        <div\n          className=\"fixed flex items-center justify-center w-full loaderCstm\"\n          style={{\n            height: \"calc(100vh - 72px)\",\n            background: \"#00000099\",\n            zIndex: 9999,\n          }}\n        >\n          <CommonLoader />\n        </div>\n      )}\n      <section className={`${styles?.stakingSec} staking relative py-5 w-full`}>\n        <div className=\"container mx-auto\">\n          <div className=\"grid gap-3  grid-cols-12\">\n            <div className=\"lg:col-span-4 sm:col-span-6 col-span-12\">\n              <div\n                className={`${styles?.cardCstm} cardCstm p-4 h-full  rounded-xl flex items-center justify-between flex-col`}\n              >\n                <div className=\"top pb-3 text-center lg:mb-3 w-full\">\n                  <h4 className=\"m-0 text-3xl font-extrabold text-white\">\n                    YOUR BALANCE\n                  </h4>\n                </div>\n                <div className=\"contentBody lg:px-4 w-full\">\n                  <ul className=\"text-white pl-0\">\n                    <li className=\"py-1 font-semibold text-lg flex items-start\">\n                      <span className=\"w-50 font-medium\">Total Unstaked: </span>\n                      <span className=\" w-50 font-medium pl-4 break-all\">\n                        $\n                        {toCommas(\n                          Number(details?.unStakedAmountInDollar || 0).toFixed(\n                            2\n                          )\n                        )}\n                      </span>\n                    </li>\n                    <li className=\"py-1 font-semibold text-lg flex items-start\">\n                      <span className=\"w-50 font-medium\">Total Staked: </span>\n                      <span className=\"underline font-medium pl-4 w-50 break-all\">\n                        $\n                        {toCommas(\n                          Number(details?.stakedAmountInDollar || 0).toFixed(2)\n                        )}\n                      </span>\n                    </li>\n\n                    <li className=\"py-1 font-semibold text-lg flex items-start\">\n                      <span className=\"w-50 font-medium\">Total Balance: </span>\n\n                      <span className=\"pl-4 font-medium w-50 break-all\">\n                        $\n                        {toCommas(\n                          Number(details?.balanceInDollar || 0).toFixed(2)\n                        )}\n                      </span>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div className=\"lg:col-span-4 sm:col-span-6 col-span-12\">\n              <div\n                className={`${styles?.cardCstm} cardCstm p-4 h-full  rounded-xl flex items-center justify-between flex-col`}\n              >\n                <div className=\"contentBody text-center lg:px-4\">\n                  <div className=\"py-2\">\n                    <div className=\"imgWrp\">\n                      <img\n                        src={logo}\n                        className=\"max-w-full w-auto h-auto mx-auto\"\n                        height={100}\n                        width={100}\n                        alt=\"\"\n                      />\n                    </div>\n                  </div>\n                  <p className=\"m-0 font-extrabold py-2 text-lg\">\n                    GOB Price: ${price?.GOBInPrice || 0}\n                  </p>\n                  <div className=\"flex items-center justify-center gap-2\">\n                    {details.sGob > 0 && currentNetwork?.chainId !== 56 && (\n                      <button\n                        onClick={handleMigrationPopup}\n                        className=\"btn flex items-center justify-center commonBtn font-extrabold\"\n                      >\n                        Migration\n                      </button>\n                    )}\n                    <a\n                      href=\"/#/swap?inputCurrency=0xBc2F884680c95A02cea099dA2F524b366d9028Ba&outputCurrency=0x56381cB87C8990971f3e9d948939e1a95eA113a3&chain=sbch\"\n                      target=\"_blank\"\n                      onClick={(e) => (isBlocked ? e.preventDefault() : false)}\n                    >\n                      <button\n                        className=\"btn font-bold my-2 inline-flex items-center justify-center commonBtn\"\n                        disabled={isBlocked}\n                      >\n                        BUY GOB\n                      </button>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"lg:col-span-4 sm:col-span-6 col-span-12\">\n              <div\n                className={`${styles?.cardCstm} cardCstm p-4 h-full  rounded-xl flex items-center justify-between flex-col`}\n              >\n                <div className=\"top pb-3 text-center lg:mb-3\">\n                  <h4 className=\"m-0 text-3xl font-extrabold text-white\">\n                    GOB SUPPLY\n                  </h4>\n                </div>\n\n                <div className=\"contentBody lg:px-4 w-full\">\n                  <ul className=\"text-white\">\n                    <li className=\"py-1 font-semibold text-lg flex items-start\">\n                      <span className=\"w-50 font-medium\">Total Unstaked: </span>\n                      <span className=\" pl-4 font-medium w-50 break-all\">\n                        {toCommas(Number(details?.unStackTotalSupply || 0))}\n                      </span>\n                    </li>\n                    <li className=\"py-1 font-semibold text-lg flex items-start\">\n                      <span className=\"w-50 font-medium \">Total Staked: </span>\n                      <span className=\"underline font-medium pl-4 w-50 break-all\">\n                        {toCommas(Number(details?.totalSupply || 0))}\n                      </span>\n                    </li>\n                    <li className=\"py-1 font-semibold text-lg flex items-start\">\n                      <span className=\"w-50 font-medium\">Total Supply: </span>\n                      <span className=\" w-50 font-medium pl-4 break-all\">\n                        {toCommas(Number(details?.tokenTotalSupply || 0))}\n                      </span>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n            <TokenStaking\n              styles={styles}\n              details={details}\n              getDetails={getDetails}\n              isBlocked={isBlocked}\n            />\n            <Rewards\n              styles={styles}\n              details={details}\n              getDetails={getDetails}\n              isBlocked={isBlocked}\n              apr={apr}\n            />\n            <Withdraw\n              styles={styles}\n              details={details}\n              getDetails={getDetails}\n              isBlocked={isBlocked}\n            />\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Staking;\n"],"names":["details","getDetails","isBlocked","apr","currentNetwork","useSelector","state","dashboard","wallet","useWallet","loading","setLoading","useState","console","log","div","className","styles","cardCstm","h4","h6","toCommas","Number","earnedAmount","toFixed","rewardSymbol","img","src","wbchlogo","height","width","style","alt","button","type","onClick","async","e","preventDefault","toast","error","web3","Web3Intraction","provider","getTokenRewards","success","disabled","span","amount","setAmount","percentage","setPercentage","unStakedAmount","stakeSymbol","logo","form","onSubmit","tokenStake","input","value","onChange","target","replace","isNaN","formattedValue","placeholder","InputWrp","required","ul","listStyle","map","data","key","li","id","name","parseFloat","handlePercentage","checked","label","htmlFor","stakedAmount","tokenWithdraw","migration","setMigration","balance","progressBar","setProgressBar","status","setStatus","StakePop","modalDialog","p","svg","xmlns","viewBox","fill","path","opacity","d","b","progressWrp","background","amountValue","checkAllowance","contractDetails","migrationAddress","unStakeFromMigration","setApr","price","setPrice","GOBInPrice","WBCHInPrice","setDetails","detail","getDetailInfo","getTokenBalance","chainId","unStakedAmountInDollar","stakedAmountInDollar","balanceInDollar","sGob","useEffect","totalSupply","BCHPrice","GOBPrice","getApr","getAPR","isActive","address","getUSDPrice","request","priceGraphQl","GobAndWbchPair","WbchAndbcUsdtPair","priceData1","getGobPrice","pool","token1Price","token0Price","getUsdPrice","createPortal","MigrationPop","document","body","zIndex","CommonLoader","section","stakingSec","a","href","unStackTotalSupply","tokenTotalSupply","TokenStaking","Rewards","Withdraw"],"sourceRoot":""}