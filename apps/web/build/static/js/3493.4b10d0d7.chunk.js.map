{"version":3,"file":"static/js/3493.4b10d0d7.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/pages/staking/staking.module.scss?1d91","pages/staking/components/Rewards.js","pages/staking/components/Staking.js","pages/staking/components/Withdraw.js","pages/staking/index.jsx","helpers/apiRequests.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"stakingSec\":\"staking_stakingSec__naatj\",\"cardCstm\":\"staking_cardCstm__RvlOo\",\"InputWrp\":\"staking_InputWrp__bsBMf\"};","import { useState } from \"react\";\n\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n\n//css\nimport styles from \"../staking.module.scss\";\n\n// image\nimport logo from \"assets/farmingAssets/Images/logo.png\";\n\n//hooks && helpers\nimport { toCommas } from \"helpers/utils\";\nimport { useWallet } from \"hooks/useWallet\";\nimport Web3Intraction from \"utils/web3Intraction\";\n\nfunction Rewards({ details, getDetails, isBlocked, apr }) {\n  const { currentNetwork } = useSelector((state) => state.dashboard);\n  const wallet = useWallet();\n  const [loading, setLoading] = useState(false);\n\n  const getRewards = async (e) => {\n    try {\n      e.preventDefault();\n      if (isBlocked)\n        return toast.error(\" Our Product is unavailable in your location\");\n      setLoading(true);\n      const web3 = new Web3Intraction(currentNetwork, wallet.provider);\n      await web3.getTokenRewards();\n      setLoading(false);\n      getDetails();\n      toast.success(\"Reward Claimed\");\n    } catch (error) {\n      setLoading(false);\n      toast.error(error);\n      console.log(error, \"<====error\");\n    }\n  };\n  return (\n    <div className=\"lg:col-span-4 sm:col-span-6 col-span-12\">\n      <div\n        className={`${styles?.cardCstm} cardCstm p-4 h-full  rounded-xl flex items-center justify-between flex-col`}\n      >\n        <div className=\"top pb-3 text-center lg:mb-3 border-b-2 border-white w-full\">\n          <h4 className=\"m-0 text-3xl font-extrabold text-white\">REWARDS</h4>\n          <div className=\"pt-3\">\n            <h6 className=\"m-0 font-extrabold py-2 text-lg flex items-center justify-center\">\n              {toCommas(Number(details?.earnedAmount || 0).toFixed(4)) + \" \"}\n              {details?.rewardSymbol ? details.rewardSymbol : \"\"}\n              <img\n                src={logo}\n                height={100}\n                className=\"max-w-full flex-shrink-0 object-contain ms-2\"\n                width={100}\n                style={{ height: 20, width: 20 }}\n                alt=\"\"\n              />\n            </h6>\n          </div>\n        </div>\n\n        <div className=\"contentBody lg:px-4 w-full\">\n          <div className=\"claimInput mt-4 my-2 text-center\">\n            <h6 className=\"m-0 font-extrabold py-2 text-lg \">APR: </h6>\n            <h6 className=\"m-0 font-extrabold py-2 text-lg \">{apr}%</h6>\n          </div>\n\n          <div className=\"btnWrpper text-center mt-3\">\n            <div className=\"py-2\">\n              <button\n                type=\"button\"\n                onClick={getRewards}\n                disabled={isBlocked || loading || !details?.earnedAmount}\n                className=\"inline-flex items-center justify-center commonBtn font-bold btn px-4\"\n              >\n                {loading ? (\n                  <div className=\"spinner\">\n                    <span className=\"\"> Please wait...</span>\n                  </div>\n                ) : (\n                  \"CLAIM\"\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Rewards;\n","import React, { useState } from \"react\";\n\n\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n\n// image\nimport logo from \"assets/farmingAssets/Images/logoIcn.png\";\n\n//css\nimport styles from \"../staking.module.scss\";\n\n//hooks\nimport Web3Intraction from \"utils/web3Intraction\";\nimport {useWallet} from \"hooks/useWallet\";\nimport { toCommas } from \"helpers/utils\";\n\nfunction Staking({ getDetails, isBlocked, details }) {\n  const { currentNetwork } = useSelector((state) => state.dashboard);\n  const wallet = useWallet();\n\n  const [amount, setAmount] = useState(\"\");\n  const [percentage, setPercentage] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      if (isBlocked)\n        return toast.error(\" Our Product is unavailable in your location\");\n      if (amount <= 0) return toast.error(\"Amount Must be greater then zero\");\n\n      setLoading(true);\n      const web3 = new Web3Intraction(currentNetwork, wallet.provider);\n      await web3.tokenStake(amount);\n      setLoading(false);\n      setAmount(0);\n      toast.success(\"Amount Staked\");\n      getDetails();\n    } catch (error) {\n      setLoading(false);\n      toast.error(error);\n\n      console.log(error, \"<====error\");\n    }\n  };\n\n  const handleChange = (e) => {\n    let { value } = e.target;\n    value = value.replace(/[^\\d.]/g, '');\n    if (isNaN(Number(value.replace(/,/g, '')))) {\n      return;\n    }\n    const formattedValue = value.replace(/,/g, '');\n    setAmount(formattedValue);\n  };\n\n\n\n\n  const handlePercentage = async (e, value) => {\n    try {\n      setPercentage(value);\n      const amount =\n        (parseFloat(value) / 100) * parseFloat(details?.unStakedAmount);\n      setAmount(amount);\n    } catch (error) {\n      console.log(error, \"<====error\");\n    }\n  };\n\n\n\n\n  return (\n    <div className=\"lg:col-span-4 sm:col-span-6 col-span-12\">\n      <div\n        className={`${styles?.cardCstm} cardCstm p-4 h-full  rounded-xl flex items-center justify-between flex-col`}\n      >\n        <div className=\"top pb-3 text-center lg:mb-3 border-b-2 border-white w-full\">\n          <h4 className=\"m-0 text-3xl font-extrabold text-white\">UNSTAKED</h4>\n          <div className=\"pt-3\">\n            <h6 className=\"m-0 font-extrabold py-2 text-lg flex items-center justify-center\">\n              {toCommas(Number(details?.unStakedAmount).toFixed(2) || 0)} {details?.stakeSymbol}\n              <img\n                src={logo}\n                height={100}\n                className=\"max-w-full flex-shrink-0 object-contain ms-2\"\n                width={100}\n                style={{ height: 20, width: 20 }}\n                alt=\"\"\n              />\n            </h6>\n          </div>\n        </div>\n        <form onSubmit={handleSubmit}>\n          <div className=\"contentBody lg:px-4 w-full\">\n            <div className=\"claimInput mt-4 my-2 text-center\">\n              {/* <div\n                      className={`${styles?.InputWrp} InputWrp cursor-pointer mx-auto flex py-2 px-3 text-lg items-center justify-center font-bold text-white rounded`}\n                    >\n                      100\n                    </div> */}\n              <div className=\"relative iconWithText\">\n                {/* <button\n                  className=\"flex items-center justify-center btn absolute icn commonBtn h-auto py-2 right-2 rounded rounded text-xs px-2\"\n                  onClick={setMaxAmount}\n                >\n                  Max\n                </button> */}\n                <input\n                  type=\"text\"\n                  value={toCommas(amount)}\n                  onChange={handleChange}\n                  placeholder=\"Enter Amount\"\n                  className={`${styles?.InputWrp} InputWrp text-center bg-transparent text-white cursor-pointer mx-auto flex py-2 px-3 text-lg items-center justify-center font-bold text-white rounded`}\n                  required\n                />\n              </div>\n              <h6 className=\"m-0 font-extrabold py-2 text-lg \">\n                AMOUNT TO STAKE\n              </h6>\n            </div>\n            <div className=\"my-2\">\n              {/* <label\n                htmlFor=\"\"\n                className=\"m-0 font-bold text-white block text-center\"\n              >\n                Withdraw Percentage Amount\n              </label> */}\n              <ul\n                className=\"list-none mt-3 pl-0 mb-0 flex items-center justify-center gap-2 radioList\"\n                style={{ listStyle: \"none\" }}\n              >\n                {[25, 50, 75, 100].map((data, key) => (\n                  <li className=\"relative\" key={key}>\n                    <input\n                      type=\"radio\"\n                      id=\"10%\"\n                      name=\"withdraw\"\n                      className=\"file w-full h-full left-0 top-0 z-9 cursor-pointer absolute opacity-0\"\n                      onClick={(e) => handlePercentage(e, data)}\n                      checked={percentage == data}\n                    />\n                    <label\n                      htmlFor=\"10%\"\n                      className=\" h-auto radioBtn text-xs font-bold  p-2 text-white\"\n                    >\n                      {data === 100 ? \"Max\" : data + \"%\"}\n                    </label>\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div className=\"btnWrpper text-center mt-3\">\n              <div className=\"py-2\">\n                <button\n                  type=\"submit\"\n                  disabled={isBlocked || loading}\n                  className=\"inline-flex items-center justify-center commonBtn font-bold btn px-4\"\n                >\n                  {loading ? (\n                    <div className=\"spinner\">\n                      <span className=\"\"> Please wait...</span>\n                    </div>\n                  ) : (\n                    \"STAKE\"\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n\n\n}\n\nexport default Staking;\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n\n//css\nimport styles from \"../staking.module.scss\";\n\n\n// image\nimport logo from \"assets/farmingAssets/Images/logo.png\";\n\n//hooks && helpers\nimport {useWallet} from \"hooks/useWallet\";\nimport Web3Intraction from \"utils/web3Intraction\";\nimport { toCommas } from \"helpers/utils\";\n\nfunction Withdraw({ getDetails, details, isBlocked }) {\n  const { currentNetwork } = useSelector((state) => state.dashboard);\n  const wallet = useWallet();\n\n  const [amount, setAmount] = useState(\"\");\n  const [percentage, setPercentage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleWithdraw = async (e) => {\n    try {\n      e.preventDefault();\n      if (isBlocked)\n        return toast.error(\" Our Product is unavailable in your location\");\n\n      if (!Number(details?.stakedAmount)) {\n        return toast.error(\"No GOB Staked!\");\n      }\n      if (amount <= 0) return toast.error(\"Amount Must be greater then zero\");\n\n      if (amount > Number(details?.stakedAmount)) {\n        return toast.error(\n          \"Withdraw must be less then or equal to staked amount\"\n        );\n      }\n      setLoading(true);\n      const web3 = new Web3Intraction(currentNetwork, wallet.provider);\n      await web3.tokenWithdraw(amount);\n      setLoading(false);\n      setAmount(0);\n      toast.success(\"Amount Withdraw\");\n      getDetails();\n    } catch (error) {\n      setLoading(false);\n      toast.error(error);\n      console.log(error, \"<====error\");\n    }\n  };\n\n  const handleExit = async (e) => {\n    try {\n      e.preventDefault();\n      if (isBlocked)\n        return toast.error(\" Our Product is unavailable in your location\");\n\n      if (!details?.stakedAmount) {\n        return toast.error(\"No GOB Staked!\");\n      }\n      setLoading(true);\n      const web3 = new Web3Intraction(currentNetwork, wallet.provider);\n      await web3.tokenExit();\n      setLoading(false);\n      setAmount(0);\n      toast.success(\"Amount Reward Claimed & Withdraw!\");\n    } catch (error) {\n      setLoading(false);\n      toast.error(error);\n      console.log(error, \"<====error\");\n    }\n  };\n\n  const handlePercentage = async (e, value) => {\n    try {\n      if (!Number(details?.stakedAmount)) {\n        return toast.error(\"No GOB Staked!\");\n      }\n      setPercentage(value);\n      const amount =\n        (parseFloat(value) / 100) * parseFloat(details?.stakedAmount);\n      setAmount(amount);\n    } catch (error) {\n      console.log(error, \"<====error\");\n    }\n  };\n\n  const handleChange = (e) => {\n    let { value } = e.target;\n    value = value.replace(/[^\\d.]/g, '');\n    if (isNaN(Number(value.replace(/,/g, \"\")))) {\n      return;\n    }\n    const formattedValue = value.replace(/,/g, \"\");\n    setAmount(formattedValue);\n  };\n\n  return (\n    <div className=\"lg:col-span-4 sm:col-span-6 col-span-12\">\n      <div\n        className={`${styles?.cardCstm} cardCstm p-4 h-full  rounded-xl flex items-center justify-between flex-col`}\n      >\n        <div className=\"top pb-3 text-center lg:mb-3 border-b-2 border-white w-full\">\n          <h4 className=\"m-0 text-3xl font-extrabold text-white\">STAKED</h4>\n          <div className=\"pt-3\">\n            <h6 className=\"m-0 font-extrabold py-2 text-lg flex items-center justify-center\">\n              {toCommas(Number(details?.stakedAmount).toFixed(2) || 0)} {details?.stakeSymbol}\n              <img\n                src={logo}\n                height={100}\n                className=\"max-w-full flex-shrink-0 object-contain ms-2\"\n                width={100}\n                style={{ height: 20, width: 20 }}\n                alt=\"\"\n              />\n            </h6>\n          </div>\n        </div>\n\n        <form onSubmit={handleWithdraw}>\n          <div className=\"contentBody lg:px-4 w-full\">\n            <div className=\"claimInput mt-4 my-2 text-center\">\n              {/* <div\n                      className={`${styles?.InputWrp} InputWrp cursor-pointer mx-auto flex py-2 px-3 text-lg items-center justify-center font-bold text-white rounded`}\n                    >\n                      100\n                    </div> */}\n\n              <div className=\"relative iconWithText\">\n                {/* <button className=\"flex items-center justify-center btn absolute icn commonBtn h-auto py-2 right-2 rounded rounded text-xs px-2\" >\n                      Max\n                    </button> */}\n                <input\n                  type=\"text\"\n                  value={toCommas(amount)}\n                  onChange={handleChange}\n                  placeholder=\"Enter Amount\"\n                  className={`${styles?.InputWrp} InputWrp text-center bg-transparent text-white cursor-pointer mx-auto flex py-2 px-3 text-lg items-center justify-center font-bold text-white rounded`}\n                  required\n                />\n              </div>\n              <h6 className=\"m-0 font-extrabold py-2 text-lg \">\n                AMOUNT TO WITHDRAW\n              </h6>\n            </div>\n            <div className=\"my-2\">\n              {/* <label\n                htmlFor=\"\"\n                className=\"m-0 font-bold text-white block text-center\"\n              >\n                Withdraw Percentage Amount\n              </label> */}\n              <ul\n                className=\"list-none mt-3 pl-0 mb-0 flex items-center justify-center gap-2 radioList\"\n                style={{ listStyle: \"none\" }}\n              >\n                {[25, 50, 75, 100].map((data, key) => (\n                  <li className=\"relative\" key={key}>\n                    <input\n                      type=\"radio\"\n                      id=\"10%\"\n                      name=\"withdraw\"\n                      className=\"file w-full h-full left-0 top-0 z-9 cursor-pointer absolute opacity-0\"\n                      onClick={(e) => handlePercentage(e, data)}\n                      checked={percentage == data}\n                    />\n                    <label\n                      htmlFor=\"10%\"\n                      className=\" h-auto radioBtn text-xs font-bold  p-2 text-white\"\n                    >\n                      {data === 100 ? \"Max\" : data + \"%\"}\n                    </label>\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div className=\"btnWrpper text-center mt-3\">\n              <div className=\"py-2\">\n                <button\n                  type=\"submit\"\n                  className=\"inline-flex items-center justify-center commonBtn font-bold btn px-4\"\n                  disabled={isBlocked || loading || !details?.stakedAmount}\n                >\n                  {loading ? (\n                    <div className=\"spinner\">\n                      <span className=\"\"> Please wait...</span>\n                    </div>\n                  ) : (\n                    \"WITHDRAW\"\n                  )}\n                </button>\n              </div>\n              {/* <div className=\"py-2\">\n                <button\n                  type=\"button\"\n                  onClick={handleExit}\n                  disabled={isBlocked || loading || !details?.stakedAmount}\n                  className=\"inline-flex items-center justify-center commonBtn font-bold btn px-4\"\n                >\n                  {loading ? (\n                    <div className=\"spinner\">\n                      <span className=\"\"> Please wait...</span>\n                    </div>\n                  ) : (\n                    \"WITHDRAW & CLAIM\"\n                  )}\n                </button>\n              </div> */}\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Withdraw;\n","import { useEffect, useState } from \"react\";\n\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n// css\nimport \"assets/styles/main.css\";\n\n// image\nimport logo from \"assets/farmingAssets/Images/logo.png\";\n\n///component\nimport CommonLoader from \"components/Loader/SpinningLoader\";\nimport Rewards from \"./components/Rewards\";\nimport TokenStaking from \"./components/Staking\";\nimport Withdraw from \"./components/Withdraw\";\n\n//hooks && helpers\n// import {useWallet} from \"hooks/useWallet\";\nimport * as request from \"helpers/apiRequests\";\nimport { priceGraphQl } from \"helpers/constants\";\nimport { toCommas } from \"helpers/utils\";\nimport Web3Intraction from \"utils/web3Intraction\";\n\nimport { useWallet } from \"hooks/useWallet\";\n\n// css\nimport styles from \"./staking.module.scss\";\n\n\nlet isBlocked = false;\n\nconst Staking = () => {\n  const { currentNetwork, isBlocked } = useSelector((state) => state.dashboard);\n  const wallet = useWallet();\n  const [loading, setLoading] = useState(false);\n  const [apr, setApr] = useState(0);\n\n  const [price, setPrice] = useState({\n    GOBInPrice: 0,\n    WBCHInPrice: 0,\n  });\n\n  const [details, setDetails] = useState({\n    stakeSymbol: null,\n  });\n\n  const getDetails = async () => {\n    try {\n      setLoading(true);\n      const web3 = new Web3Intraction(currentNetwork, wallet.provider);\n      let detail = await web3.getDetailInfo();\n\n      setDetails({\n        ...detail,\n        unStakedAmountInDollar:\n          detail.unStakedAmount * Number(price.GOBInPrice),\n        stakedAmountInDollar: detail.stakedAmount * Number(price.GOBInPrice),\n        balanceInDollar: detail.balance * Number(price.GOBInPrice),\n      });\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error, \"<===err\");\n      setLoading(false);\n    }\n  };\n\n  const getAPR = async (totalSupply, BCHPrice, GOBPrice) => {\n    try {\n      const web3 = new Web3Intraction(currentNetwork, wallet.provider);\n      let getApr = await web3.getAPR(totalSupply, BCHPrice, GOBPrice);\n      setApr(getApr);\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  const getUsdPrice = async () => {\n    try {\n      const getUSDPrice = request.getUSDPrice(priceGraphQl);\n      const priceData = await getUSDPrice(\n        `query {\n          pool(id:\"0x532e1a0117ac273f448d5af5af8aa6336a4374d5\"){\n            id\n            sqrtPrice\n            id\n            liquidity\n            token0 {\n              id\n              decimals\n              name\n              symbol\n            }\n            token1 {\n              id\n              decimals\n              name\n              symbol\n            }\n            token0Price\n            token1Price\n            volumeUSD\n          }  \n       }`,\n        {}\n      );\n      const priceData1 = await getUSDPrice(\n        `query {\n          pool(id:\"0x934f434a226ed5b6c4f7fc9a2dc5dc0467bddee7\"){\n            id\n            sqrtPrice\n            id\n            liquidity\n            token0 {\n              id\n              decimals\n              name\n              symbol\n            }\n            token1 {\n              id\n              decimals\n              name\n              symbol\n            }\n            token0Price\n            token1Price\n            volumeUSD\n          }  \n       }`,\n        {}\n      );\n\n      setPrice({\n        GOBInPrice: Number(priceData?.pool?.token1Price || 0).toFixed(2),\n        WBCHInPrice: Number(priceData1?.pool?.token1Price || 0).toFixed(2),\n      });\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    if (details.stakeSymbol && price.GOBInPrice && price.WBCHInPrice) {\n      getAPR(details.totalSupply, price.WBCHInPrice, price.GOBInPrice);\n    }\n  }, [details, price]);\n\n\n  useEffect(() => {\n    if (\n      wallet.isActive &&\n      wallet.address &&\n      currentNetwork &&\n      price.GOBInPrice\n    ) {\n      getDetails();\n    }\n  }, [wallet, currentNetwork, price]);\n\n  useEffect(() => {\n    getUsdPrice();\n  }, []);\n\n  return (\n    <>\n     {\n       loading &&  <div\n       className=\"fixed flex items-center justify-center w-full\"\n       style={{\n         height: \"calc(100vh - 72px)\",\n         background: \"#00000099\",\n         zIndex: 9999,\n       }}\n     >\n       <CommonLoader />\n     </div>\n     }\n      <section className={`${styles?.stakingSec} staking relative py-5 w-full`}>\n        <div className=\"container mx-auto\">\n          <div className=\"grid gap-3  grid-cols-12\">\n            <div className=\"lg:col-span-4 sm:col-span-6 col-span-12\">\n              <div\n                className={`${styles?.cardCstm} cardCstm p-4 h-full  rounded-xl flex items-center justify-between flex-col`}\n              >\n                <div className=\"top pb-3 text-center lg:mb-3 w-full\">\n                  <h4 className=\"m-0 text-3xl font-extrabold text-white\">\n                    YOUR BALANCE\n                  </h4>\n                </div>\n                <div className=\"contentBody lg:px-4 w-full\">\n                  <ul className=\"text-white pl-0\">\n                    <li className=\"py-1 font-semibold text-lg flex items-start\">\n                      <span className=\"w-50 font-medium\">Total Unstaked: </span>\n                      <span className=\" w-50 font-medium pl-4 break-all\">\n                        $\n                        {toCommas(\n                          Number(details?.unStakedAmountInDollar || 0).toFixed(\n                            2\n                          )\n                        )}\n                      </span>\n                    </li>\n                    <li className=\"py-1 font-semibold text-lg flex items-start\">\n                      <span className=\"w-50 font-medium\">Total Staked: </span>\n                      <span className=\"underline font-medium pl-4 w-50 break-all\">\n                        $\n                        {toCommas(\n                          Number(details?.stakedAmountInDollar || 0).toFixed(2)\n                        )}\n                      </span>\n                    </li>\n\n                    <li className=\"py-1 font-semibold text-lg flex items-start\">\n                      <span className=\"w-50 font-medium\">Total Balance: </span>\n\n                      <span className=\"pl-4 font-medium w-50 break-all\">\n                        $\n                        {toCommas(\n                          Number(details?.balanceInDollar || 0).toFixed(2)\n                        )}\n                      </span>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div className=\"lg:col-span-4 sm:col-span-6 col-span-12\">\n              <div\n                className={`${styles?.cardCstm} cardCstm p-4 h-full  rounded-xl flex items-center justify-between flex-col`}\n              >\n                <div className=\"contentBody text-center lg:px-4\">\n                  <div className=\"py-2\">\n                    <div className=\"imgWrp\">\n                      <img\n                        src={logo}\n                        className=\"max-w-full w-auto h-auto mx-auto\"\n                        height={100}\n                        width={100}\n                        alt=\"\"\n                      />\n                    </div>\n                  </div>\n                  <p className=\"m-0 font-extrabold py-2 text-lg\">\n                    GOB Price: ${price?.GOBInPrice || 0}\n                  </p>\n                  <Link\n                    href=\"https://gobswap.dfd.cash/swap?inputCurrency=0xBc2F884680c95A02cea099dA2F524b366d9028Ba&outputCurrency=0x56381cB87C8990971f3e9d948939e1a95eA113a3&chain=sbch\"\n                    target=\"_blank\"\n                    onClick={(e) => (isBlocked ? e.preventDefault() : false)}\n                  >\n                    <button\n                      className=\"btn font-bold my-2 inline-flex items-center justify-center commonBtn\"\n                      disabled={isBlocked}\n                    >\n                      BUY GOB\n                    </button>\n                  </Link>\n                </div>\n              </div>\n            </div>\n            <div className=\"lg:col-span-4 sm:col-span-6 col-span-12\">\n              <div\n                className={`${styles?.cardCstm} cardCstm p-4 h-full  rounded-xl flex items-center justify-between flex-col`}\n              >\n                <div className=\"top pb-3 text-center lg:mb-3\">\n                  <h4 className=\"m-0 text-3xl font-extrabold text-white\">\n                    GOB SUPPLY\n                  </h4>\n                </div>\n\n                <div className=\"contentBody lg:px-4 w-full\">\n                  <ul className=\"text-white\">\n                    <li className=\"py-1 font-semibold text-lg flex items-start\">\n                      <span className=\"w-50 font-medium\">Total Unstaked: </span>\n                      <span className=\" pl-4 font-medium w-50 break-all\">\n                        {toCommas(Number(details?.unStackTotalSupply || 0))}\n                      </span>\n                    </li>\n                    <li className=\"py-1 font-semibold text-lg flex items-start\">\n                      <span className=\"w-50 font-medium \">Total Staked: </span>\n                      <span className=\"underline font-medium pl-4 w-50 break-all\">\n                        {toCommas(Number(details?.totalSupply || 0))}\n                      </span>\n                    </li>\n                    <li className=\"py-1 font-semibold text-lg flex items-start\">\n                      <span className=\"w-50 font-medium\">Total Supply: </span>\n                      <span className=\" w-50 font-medium pl-4 break-all\">\n                        {toCommas(Number(details?.tokenTotalSupply || 0))}\n                      </span>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n            <TokenStaking\n              styles={styles}\n              details={details}\n              getDetails={getDetails}\n              isBlocked={isBlocked}\n            />\n            <Rewards\n              styles={styles}\n              details={details}\n              getDetails={getDetails}\n              isBlocked={isBlocked}\n              apr={apr}\n            />\n            <Withdraw\n              styles={styles}\n              details={details}\n              getDetails={getDetails}\n              isBlocked={isBlocked}\n            />\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Staking;\n","export function subgraph(subgraphUrl) {\n  return async function (query, variables) {\n    const res = await fetch(subgraphUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ query, variables }),\n    });\n\n    const { data } = await res.json();\n\n    return data;\n  };\n}\n\nexport function getUSDPrice(subgraphUrl) {\n  return async function (query, variables) {\n\n    const res = await fetch(subgraphUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ query, variables }),\n    });\n\n    if (res.ok) {\n      const { data } = await res.json();\n      return data;\n    } else {\n      // Handle the error response properly\n      const errorData = await response.json(); // This is where you might get the error\n      console.log(errorData, \"<====errorData\");\n      return null;\n      // throw new Error(`GraphQL error: ${errorData.errors ? errorData.errors.map(err => err.message).join(', ') : 'Unknown error'}`);\n    }\n  };\n}\n"],"names":["details","getDetails","isBlocked","apr","currentNetwork","useSelector","state","dashboard","wallet","useWallet","loading","setLoading","useState","div","className","styles","cardCstm","h4","h6","toCommas","Number","earnedAmount","toFixed","rewardSymbol","img","src","logo","height","width","style","alt","button","type","onClick","async","e","preventDefault","toast","error","web3","Web3Intraction","provider","getTokenRewards","success","console","log","disabled","span","amount","setAmount","percentage","setPercentage","unStakedAmount","stakeSymbol","form","onSubmit","tokenStake","input","value","onChange","target","replace","isNaN","formattedValue","placeholder","InputWrp","required","ul","listStyle","map","data","key","li","id","name","parseFloat","handlePercentage","checked","label","htmlFor","stakedAmount","tokenWithdraw","setApr","price","setPrice","GOBInPrice","WBCHInPrice","setDetails","detail","getDetailInfo","unStakedAmountInDollar","stakedAmountInDollar","balanceInDollar","balance","getUsdPrice","getUSDPrice","subgraphUrl","priceGraphQl","query","variables","res","fetch","method","headers","body","JSON","stringify","ok","json","errorData","response","priceData","priceData1","pool","token1Price","useEffect","totalSupply","BCHPrice","GOBPrice","getApr","getAPR","isActive","address","background","zIndex","CommonLoader","section","stakingSec","p","Link","href","unStackTotalSupply","tokenTotalSupply","TokenStaking","Rewards","Withdraw"],"sourceRoot":""}