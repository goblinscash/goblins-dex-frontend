{"version":3,"file":"static/js/1455.c14f6f40.chunk.js","mappings":"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","sources":["components/PositionCard/index.tsx","components/V2Unsupported/index.tsx","components/earn/styled.tsx","hooks/useNetworkSupportsV2.ts","hooks/useTotalSupply.ts","hooks/useV2Pairs.ts","utils/unwrappedToken.ts"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { CurrencyAmount, Percent, Token } from '@uniswap/sdk-core'\nimport { Pair } from '@uniswap/v2-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport { transparentize } from 'polished'\nimport { useState } from 'react'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport { Link } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport { ExternalLink, ThemedText } from 'theme/components'\n\nimport { BIG_INT_ZERO } from '../../constants/misc'\nimport { useColor } from '../../hooks/useColor'\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\nimport { useTokenBalance } from '../../state/connection/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/unwrappedToken'\nimport { ButtonEmpty, ButtonPrimary, ButtonSecondary } from '../Button'\nimport { GrayCard, LightCard } from '../Card'\nimport { AutoColumn } from '../Column'\nimport DoubleCurrencyLogo from '../DoubleLogo'\nimport { CardNoise } from '../earn/styled'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\nimport { Dots } from '../swap/styled'\n\nexport const FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\nconst StyledPositionCard = styled(LightCard)<{ bgColor: any }>`\n  border: none;\n  background: ${({ theme, bgColor }) =>\n    `radial-gradient(91.85% 100% at 1.84% 0%, ${transparentize(0.8, bgColor)} 0%, ${theme.surface2} 100%) `};\n  position: relative;\n  overflow: hidden;\n`\n\ninterface PositionCardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n  border?: string\n  stakedBalance?: CurrencyAmount<Token> // optional balance to indicate that liquidity is deposited in mining pool\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false, border }: PositionCardProps) {\n  const { account } = useWeb3React()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance &&\n    !!totalPoolTokens &&\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? new Percent(userPoolBalance.quotient, totalPoolTokens.quotient)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.quotient, JSBI.BigInt(0)) ? (\n        <GrayCard border={border}>\n          <AutoColumn gap=\"md\">\n            <FixedHeightRow>\n              <RowFixed>\n                <Text fontWeight={535} fontSize={16}>\n                  <Trans>Your position</Trans>\n                </Text>\n              </RowFixed>\n            </FixedHeightRow>\n            <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n              <RowFixed>\n                <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin={true} size={20} />\n                <Text fontWeight={535} fontSize={20}>\n                  {currency0.symbol}/{currency1.symbol}\n                </Text>\n              </RowFixed>\n              <RowFixed>\n                <Text fontWeight={535} fontSize={20}>\n                  {userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}\n                </Text>\n              </RowFixed>\n            </FixedHeightRow>\n            <AutoColumn gap=\"4px\">\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={535}>\n                  <Trans>Your pool share:</Trans>\n                </Text>\n                <Text fontSize={16} fontWeight={535}>\n                  {poolTokenPercentage ? poolTokenPercentage.toFixed(6) + '%' : '-'}\n                </Text>\n              </FixedHeightRow>\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={535}>\n                  {currency0.symbol}:\n                </Text>\n                {token0Deposited ? (\n                  <RowFixed>\n                    <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n                      {token0Deposited?.toSignificant(6)}\n                    </Text>\n                  </RowFixed>\n                ) : (\n                  '-'\n                )}\n              </FixedHeightRow>\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={535}>\n                  {currency1.symbol}:\n                </Text>\n                {token1Deposited ? (\n                  <RowFixed>\n                    <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n                      {token1Deposited?.toSignificant(6)}\n                    </Text>\n                  </RowFixed>\n                ) : (\n                  '-'\n                )}\n              </FixedHeightRow>\n            </AutoColumn>\n          </AutoColumn>\n        </GrayCard>\n      ) : (\n        <LightCard>\n          <ThemedText.DeprecatedSubHeader style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"wizard-icon\">\n              ⭐️\n            </span>{' '}\n            <Trans>\n              By adding liquidity you&apos;ll earn 0.3% of all trades on this pair proportional to your share of the\n              pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\n            </Trans>{' '}\n          </ThemedText.DeprecatedSubHeader>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, border, stakedBalance }: PositionCardProps) {\n  const { account } = useWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userDefaultPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  // if staked balance balance provided, add to standard liquidity amount\n  const userPoolBalance = stakedBalance ? userDefaultPoolBalance?.add(stakedBalance) : userDefaultPoolBalance\n\n  const poolTokenPercentage =\n    !!userPoolBalance &&\n    !!totalPoolTokens &&\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? new Percent(userPoolBalance.quotient, totalPoolTokens.quotient)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  const backgroundColor = useColor(pair?.token0)\n\n  return (\n    <StyledPositionCard border={border} bgColor={backgroundColor}>\n      <CardNoise />\n      <AutoColumn gap=\"md\">\n        <FixedHeightRow>\n          <AutoRow gap=\"8px\" style={{ marginLeft: '8px' }}>\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text fontWeight={535} fontSize={20}>\n              {!currency0 || !currency1 ? (\n                <Dots>\n                  <Trans>Loading</Trans>\n                </Dots>\n              ) : (\n                `${currency0.symbol}/${currency1.symbol}`\n              )}\n            </Text>\n          </AutoRow>\n          <RowFixed gap=\"8px\" style={{ marginRight: '4px' }}>\n            <ButtonEmpty padding=\"6px 8px\" $borderRadius=\"12px\" width=\"100%\" onClick={() => setShowMore(!showMore)}>\n              {showMore ? (\n                <>\n                  <Trans>Manage</Trans>\n                  <ChevronUp size=\"20\" style={{ marginLeft: '8px', height: '20px', minWidth: '20px' }} />\n                </>\n              ) : (\n                <>\n                  <Trans>Manage</Trans>\n                  <ChevronDown size=\"20\" style={{ marginLeft: '8px', height: '20px', minWidth: '20px' }} />\n                </>\n              )}\n            </ButtonEmpty>\n          </RowFixed>\n        </FixedHeightRow>\n\n        {showMore && (\n          <AutoColumn gap=\"sm\">\n            <FixedHeightRow>\n              <Text fontSize={16} fontWeight={535}>\n                <Trans>Your total pool tokens:</Trans>\n              </Text>\n              <Text fontSize={16} fontWeight={535}>\n                {userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}\n              </Text>\n            </FixedHeightRow>\n            {stakedBalance && (\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={535}>\n                  <Trans>Pool tokens in rewards pool:</Trans>\n                </Text>\n                <Text fontSize={16} fontWeight={535}>\n                  {stakedBalance.toSignificant(4)}\n                </Text>\n              </FixedHeightRow>\n            )}\n            <FixedHeightRow>\n              <RowFixed>\n                <Text fontSize={16} fontWeight={535}>\n                  <Trans>Pooled {currency0.symbol}:</Trans>\n                </Text>\n              </RowFixed>\n              {token0Deposited ? (\n                <RowFixed>\n                  <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n                    {token0Deposited?.toSignificant(6)}\n                  </Text>\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency0} />\n                </RowFixed>\n              ) : (\n                '-'\n              )}\n            </FixedHeightRow>\n\n            <FixedHeightRow>\n              <RowFixed>\n                <Text fontSize={16} fontWeight={535}>\n                  <Trans>Pooled {currency1.symbol}:</Trans>\n                </Text>\n              </RowFixed>\n              {token1Deposited ? (\n                <RowFixed>\n                  <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n                    {token1Deposited?.toSignificant(6)}\n                  </Text>\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency1} />\n                </RowFixed>\n              ) : (\n                '-'\n              )}\n            </FixedHeightRow>\n\n            <FixedHeightRow>\n              <Text fontSize={16} fontWeight={535}>\n                <Trans>Your pool share:</Trans>\n              </Text>\n              <Text fontSize={16} fontWeight={535}>\n                {poolTokenPercentage ? (\n                  <Trans>\n                    {poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)} %\n                  </Trans>\n                ) : (\n                  '-'\n                )}\n              </Text>\n            </FixedHeightRow>\n\n            <ButtonSecondary padding=\"8px\" $borderRadius=\"8px\">\n              <ExternalLink\n                style={{ width: '100%', textAlign: 'center' }}\n                href={`https://v2.info.uniswap.org/account/${account}`}\n              >\n                <Trans>\n                  View accrued fees and analytics<span style={{ fontSize: '11px' }}>↗</span>\n                </Trans>\n              </ExternalLink>\n            </ButtonSecondary>\n            {userDefaultPoolBalance && JSBI.greaterThan(userDefaultPoolBalance.quotient, BIG_INT_ZERO) && (\n              <RowBetween marginTop=\"10px\">\n                <ButtonPrimary\n                  padding=\"8px\"\n                  $borderRadius=\"8px\"\n                  as={Link}\n                  to={`/migrate/v2/${pair.liquidityToken.address}`}\n                  width=\"32%\"\n                >\n                  <Trans>Migrate</Trans>\n                </ButtonPrimary>\n                <ButtonPrimary\n                  padding=\"8px\"\n                  $borderRadius=\"8px\"\n                  as={Link}\n                  to={`/add/v2/${currencyId(currency0)}/${currencyId(currency1)}`}\n                  width=\"32%\"\n                >\n                  <Trans>Add</Trans>\n                </ButtonPrimary>\n                <ButtonPrimary\n                  padding=\"8px\"\n                  $borderRadius=\"8px\"\n                  as={Link}\n                  width=\"32%\"\n                  to={`/remove/v2/${currencyId(currency0)}/${currencyId(currency1)}`}\n                >\n                  <Trans>Remove</Trans>\n                </ButtonPrimary>\n              </RowBetween>\n            )}\n            {stakedBalance && JSBI.greaterThan(stakedBalance.quotient, BIG_INT_ZERO) && (\n              <ButtonPrimary\n                padding=\"8px\"\n                $borderRadius=\"8px\"\n                as={Link}\n                to={`/uni/${currencyId(currency0)}/${currencyId(currency1)}`}\n                width=\"100%\"\n              >\n                <Trans>Manage liquidity in rewards pool</Trans>\n              </ButtonPrimary>\n            )}\n          </AutoColumn>\n        )}\n      </AutoColumn>\n    </StyledPositionCard>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { AutoColumn } from 'components/Column'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nconst TextWrapper = styled.div`\n  border: 1px solid ${({ theme }) => theme.neutral3};\n  padding: 16px 12px;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nexport function V2Unsupported() {\n  return (\n    <AutoColumn gap=\"lg\" justify=\"center\">\n      <AutoColumn gap=\"md\" style={{ width: '100%' }}>\n        <TextWrapper>\n          <ThemedText.BodySecondary color=\"neutral2\" textAlign=\"center\">\n            <Trans>Uniswap V2 is not available on this network.</Trans>\n          </ThemedText.BodySecondary>\n        </TextWrapper>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import styled from 'styled-components'\n\nimport uImage from '../../assets/images/big_unicorn.png'\nimport noise from '../../assets/images/noise.png'\nimport xlUnicorn from '../../assets/images/xl_uni.png'\nimport { AutoColumn } from '../Column'\n\nexport const DataCard = styled(AutoColumn)<{ disabled?: boolean }>`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #2172e5 100%);\n  border-radius: 12px;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n`\n\nexport const CardBGImage = styled.span<{ desaturate?: boolean }>`\n  background: url(${uImage});\n  width: 1000px;\n  height: 600px;\n  position: absolute;\n  border-radius: 12px;\n  opacity: 0.4;\n  top: -100px;\n  left: -100px;\n  transform: rotate(-15deg);\n  user-select: none;\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`\n\nexport const CardBGImageSmaller = styled.span<{ desaturate?: boolean }>`\n  background: url(${xlUnicorn});\n  width: 1200px;\n  height: 1200px;\n  position: absolute;\n  border-radius: 12px;\n  top: -300px;\n  left: -300px;\n  opacity: 0.4;\n  user-select: none;\n\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`\n\nexport const CardNoise = styled.span`\n  background: url(${noise});\n  background-size: cover;\n  mix-blend-mode: overlay;\n  border-radius: 12px;\n  width: 100%;\n  height: 100%;\n  opacity: 0.15;\n  position: absolute;\n  top: 0;\n  left: 0;\n  user-select: none;\n`\n\nexport const CardSection = styled(AutoColumn)<{ disabled?: boolean }>`\n  padding: 1rem;\n  z-index: 1;\n  opacity: ${({ disabled }) => disabled && '0.4'};\n`\n\nexport const Break = styled.div`\n  width: 100%;\n  background-color: rgba(255, 255, 255, 0.2);\n  height: 1px;\n`\n","import { useWeb3React } from '@web3-react/core'\nimport { SUPPORTED_V2POOL_CHAIN_IDS } from 'constants/chains'\n\nexport function useNetworkSupportsV2() {\n  const { chainId } = useWeb3React()\n  return chainId && SUPPORTED_V2POOL_CHAIN_IDS.includes(chainId)\n}\n","import { Currency, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token?: Currency): CurrencyAmount<Token> | undefined {\n  const contract = useTokenContract(token?.isToken ? token.address : undefined, false)\n\n  const totalSupplyStr: string | undefined = useSingleCallResult(contract, 'totalSupply')?.result?.[0]?.toString()\n\n  return useMemo(\n    () => (token?.isToken && totalSupplyStr ? CurrencyAmount.fromRawAmount(token, totalSupplyStr) : undefined),\n    [token, totalSupplyStr]\n  )\n}\n","import { Interface } from '@ethersproject/abi'\nimport { Currency, CurrencyAmount, V2_FACTORY_ADDRESSES } from '@uniswap/sdk-core'\nimport IUniswapV2PairJSON from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { computePairAddress, Pair } from '@uniswap/v2-sdk'\nimport { useMultipleContractSingleData } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairJSON.abi)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function useV2Pairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const tokens = useMemo(\n    () => currencies.map(([currencyA, currencyB]) => [currencyA?.wrapped, currencyB?.wrapped]),\n    [currencies]\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA &&\n          tokenB &&\n          tokenA.chainId === tokenB.chainId &&\n          !tokenA.equals(tokenB) &&\n          V2_FACTORY_ADDRESSES[tokenA.chainId]\n          ? computePairAddress({ factoryAddress: V2_FACTORY_ADDRESSES[tokenA.chainId], tokenA, tokenB })\n          : undefined\n      }),\n    [tokens]\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(\n          CurrencyAmount.fromRawAmount(token0, reserve0.toString()),\n          CurrencyAmount.fromRawAmount(token1, reserve1.toString())\n        ),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function useV2Pair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  const inputs: [[Currency | undefined, Currency | undefined]] = useMemo(() => [[tokenA, tokenB]], [tokenA, tokenB])\n  return useV2Pairs(inputs)[0]\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport { asSupportedChain } from 'constants/chains'\n\nimport { nativeOnChain, WRAPPED_NATIVE_CURRENCY } from '../constants/tokens'\n\nexport function unwrappedToken(currency: Currency): Currency {\n  if (currency.isNative) return currency\n  const formattedChainId = asSupportedChain(currency.chainId)\n  if (formattedChainId && WRAPPED_NATIVE_CURRENCY[formattedChainId]?.equals(currency))\n    return nativeOnChain(currency.chainId)\n  return currency\n}\n"],"names":["FixedHeightRow","styled","RowBetween","StyledPositionCard","LightCard","theme","bgColor","transparentize","surface2","MinimalPositionCard","pair","showUnwrapped","border","account","useWeb3React","currency0","token0","unwrappedToken","currency1","token1","showMore","setShowMore","useState","userPoolBalance","useTokenBalance","undefined","liquidityToken","totalPoolTokens","useTotalSupply","poolTokenPercentage","JSBI","quotient","Percent","token0Deposited","token1Deposited","getLiquidityValue","GrayCard","AutoColumn","gap","RowFixed","Text","fontWeight","fontSize","onClick","DoubleCurrencyLogo","margin","size","symbol","toSignificant","toFixed","marginLeft","ThemedText","DeprecatedSubHeader","style","textAlign","span","role","aria-label","FullPositionCard","stakedBalance","userDefaultPoolBalance","add","backgroundColor","useColor","CardNoise","AutoRow","Dots","marginRight","ButtonEmpty","padding","$borderRadius","width","ChevronUp","height","minWidth","ChevronDown","CurrencyLogo","currency","ButtonSecondary","ExternalLink","href","BIG_INT_ZERO","marginTop","ButtonPrimary","as","Link","to","address","currencyId","TextWrapper","div","neutral3","V2Unsupported","justify","BodySecondary","color","DataCard","CardBGImage","uImage","desaturate","CardBGImageSmaller","xlUnicorn","noise","CardSection","disabled","Break","useNetworkSupportsV2","chainId","SUPPORTED_V2POOL_CHAIN_IDS","includes","token","contract","useTokenContract","isToken","totalSupplyStr","useSingleCallResult","result","toString","useMemo","CurrencyAmount","fromRawAmount","PAIR_INTERFACE","Interface","IUniswapV2PairJSON","useV2Pairs","currencies","tokens","map","currencyA","currencyB","wrapped","pairAddresses","tokenA","tokenB","equals","V2_FACTORY_ADDRESSES","computePairAddress","factoryAddress","results","useMultipleContractSingleData","i","reserves","loading","PairState","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","sortsBefore","EXISTS","Pair","useV2Pair","isNative","formattedChainId","asSupportedChain","WRAPPED_NATIVE_CURRENCY","nativeOnChain"],"sourceRoot":""}