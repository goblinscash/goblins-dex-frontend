{"version":3,"file":"static/js/6609.9d966b93.chunk.js","mappings":"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","sources":["../../../node_modules/react-feather/dist/icons/plus.js","pages/NotFound/index.tsx","components/Pools/PoolDetails/ChartSection.tsx","components/Icons/ExplorerIcon.tsx","components/Pools/PoolDetails/PoolDetailsLink.tsx","components/Pools/PoolDetails/PoolDetailsStats.tsx","components/Pools/PoolDetails/PoolDetailsStatsButtons.tsx","components/Pools/PoolDetails/icons.tsx","components/Pools/PoolDetails/PoolDetailsPositionsTable.tsx","utils/sigFigs.ts","graphql/thegraph/PoolTransactions.ts","components/Pools/PoolDetails/PoolDetailsTransactionsTable.tsx","components/Pools/PoolDetails/PoolDetailsTable.tsx","assets/svg/candlestick-chart-icon.svg","assets/svg/line-chart-icon.svg","components/Toggle/PillMultiToggle.tsx","components/Tokens/TokenDetails/ChartTypeSelectors/AdvancedPriceChartToggle.tsx","graphql/thegraph/utils.ts","graphql/thegraph/useBlocksFromTimestamps.ts","graphql/thegraph/PoolData.ts","pages/PoolDetails/index.tsx"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Plus = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"5\",\n    x2: \"12\",\n    y2: \"19\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }));\n});\nPlus.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPlus.displayName = 'Plus';\nexport default Plus;","import { Trans } from '@lingui/macro'\nimport { InterfacePageName } from '@uniswap/analytics-events'\nimport { Trace } from 'analytics'\nimport { SmallButtonPrimary } from 'components/Button'\nimport { useIsMobile } from 'nft/hooks'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { useIsDarkMode } from 'theme/components/ThemeToggle'\n\nimport darkImage from '../../assets/images/404-page-dark.png'\nimport lightImage from '../../assets/images/404-page-light.png'\n\nconst Image = styled.img`\n  max-width: 510px;\n  width: 100%;\n  padding: 0 75px;\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst Header = styled(Container)`\n  gap: 30px;\n`\n\nconst PageWrapper = styled(Container)`\n  flex: 1;\n  justify-content: center;\n  gap: 50px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.md}px) {\n    justify-content: space-between;\n    padding-top: 64px;\n  }\n`\n\nexport default function NotFound() {\n  const isDarkMode = useIsDarkMode()\n  const isMobile = useIsMobile()\n\n  const Title = isMobile ? ThemedText.LargeHeader : ThemedText.Hero\n  const Paragraph = isMobile ? ThemedText.HeadlineMedium : ThemedText.HeadlineLarge\n\n  return (\n    <PageWrapper>\n      <Trace page={InterfacePageName.NOT_FOUND} shouldLogImpression>\n        <Header>\n          <Container>\n            <Title>404</Title>\n            <Paragraph color=\"neutral2\">\n              <Trans>Page not found!</Trans>\n            </Paragraph>\n          </Container>\n          <Image src={isDarkMode ? darkImage : lightImage} alt=\"Liluni\" />\n        </Header>\n        <SmallButtonPrimary as={Link} to=\"/\">\n          <Trans>Oops, take me back to Swap</Trans>\n        </SmallButtonPrimary>\n      </Trace>\n    </PageWrapper>\n  )\n}\n","import { Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { ChartHeader } from 'components/Charts/ChartHeader'\nimport { Chart } from 'components/Charts/ChartModel'\nimport { mockCandlestickData, PriceChartDelta, PriceChartModel } from 'components/Charts/PriceChart'\nimport TimePeriodSelector from 'components/Charts/TimeSelector'\nimport { ChartType, PriceChartType } from 'components/Charts/utils'\nimport { VolumeChart } from 'components/Charts/VolumeChart'\nimport { ChartContainer, usePriceHistory } from 'components/Tokens/TokenDetails/ChartSection'\nimport { LoadingChart } from 'components/Tokens/TokenDetails/Skeleton'\nimport { useTokenPriceQuery } from 'graphql/data/__generated__/types-and-hooks'\nimport { TimePeriod, toContractInput, toHistoryDuration } from 'graphql/data/util'\nimport { Token } from 'graphql/thegraph/__generated__/types-and-hooks'\nimport { useCurrency } from 'hooks/Tokens'\nimport useStablecoinPrice from 'hooks/useStablecoinPrice'\nimport { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { Z_INDEX } from 'theme/zIndex'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nconst PDP_CHART_HEIGHT_PX = 380\nexport const PDP_CHART_SELECTOR_OPTIONS = [ChartType.PRICE, ChartType.VOLUME, ChartType.LIQUIDITY] as const\nexport type PoolsDetailsChartType = (typeof PDP_CHART_SELECTOR_OPTIONS)[number]\n\nconst TimePeriodSelectorContainer = styled.div`\n  position: absolute;\n  top: 4px;\n  right: 72px;\n  z-index: ${Z_INDEX.active};\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoint.lg}px) {\n    position: static;\n    margin-top: 4px;\n  }\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoint.xs}px) {\n    width: 100%;\n  }\n`\n\ninterface ChartSectionProps {\n  token0?: Token\n  token1?: Token\n  chartType: PoolsDetailsChartType\n  priceChartType: PriceChartType\n  feeTier?: number\n  loading: boolean\n}\n\nconst CHART_TYPE_COMPONENT_MAP: { [key in PoolsDetailsChartType]: React.FC<SelectedChartProps> } = {\n  [ChartType.PRICE]: PriceChart,\n  [ChartType.VOLUME]: VolumeChart,\n  [ChartType.LIQUIDITY]: LoadingChart,\n}\n\nexport default function ChartSection(props: ChartSectionProps) {\n  const [timePeriod, setTimePeriod] = useState<TimePeriod>(TimePeriod.DAY)\n  const [currencyA, currencyB] = [useCurrency(props.token0?.id), useCurrency(props.token1?.id)]\n\n  const mockVolumes = useMemo(\n    () => [...Array(20).keys()].map((i) => ({ value: Math.random() * 10e4 + 500, timestamp: 100123131 + i * 1000 })),\n    // Mock data refresh on timePeriod change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [timePeriod]\n  )\n\n  if (props.loading || !currencyA || !currencyB) {\n    return <LoadingChart />\n  }\n\n  const SelectedChart = CHART_TYPE_COMPONENT_MAP[props.chartType]\n  const selectedChartProps = {\n    ...props,\n    height: PDP_CHART_HEIGHT_PX,\n    timePeriod,\n    currencyA,\n    currencyB,\n    volumes: mockVolumes,\n  }\n\n  return (\n    <ChartContainer isInfoTDPEnabled data-testid=\"pdp-chart-container\">\n      <SelectedChart {...selectedChartProps} />\n      <TimePeriodSelectorContainer>\n        <TimePeriodSelector timePeriod={timePeriod} onChangeTimePeriod={setTimePeriod} />\n      </TimePeriodSelectorContainer>\n    </ChartContainer>\n  )\n}\n\ninterface SelectedChartProps extends ChartSectionProps {\n  currencyA: Currency\n  currencyB: Currency\n  timePeriod: TimePeriod\n  height: number\n}\n\nfunction PriceChart({ currencyA, currencyB, timePeriod, height, priceChartType }: SelectedChartProps) {\n  const { formatCurrencyAmount, formatPrice } = useFormatter()\n  // TODO(info): Update to use subgraph data\n  const priceQuery = useTokenPriceQuery({\n    variables: { ...toContractInput(currencyA), duration: toHistoryDuration(timePeriod) },\n  })\n  const prices = usePriceHistory(priceQuery.data)\n\n  const mockedPrices = useMemo(() => mockCandlestickData(prices), [prices])\n  const params = useMemo(() => ({ data: mockedPrices, type: priceChartType }), [mockedPrices, priceChartType])\n\n  const stablecoinPrice = useStablecoinPrice(currencyA)\n\n  if (!mockedPrices.length || !currencyA || !currencyB) {\n    return <LoadingChart />\n  }\n\n  const lastPrice = mockedPrices[mockedPrices.length - 1]\n  return (\n    <Chart Model={PriceChartModel} params={params} height={height}>\n      {(crosshairData) => {\n        const displayValue = crosshairData ?? lastPrice\n        const currencyBAmountRaw = Math.floor((displayValue.value ?? displayValue.close) * 10 ** currencyB.decimals)\n        const priceDisplay = (\n          <ThemedText.HeadlineMedium>\n            {`1 ${currencyA.symbol} = ${formatCurrencyAmount({\n              amount: CurrencyAmount.fromRawAmount(currencyB, currencyBAmountRaw),\n            })} \n            ${currencyB.symbol} ${stablecoinPrice ? '(' + formatPrice({ price: stablecoinPrice }) + ')' : ''}`}\n          </ThemedText.HeadlineMedium>\n        )\n        return (\n          <ChartHeader\n            value={priceDisplay}\n            additionalFields={<PriceChartDelta startingPrice={mockedPrices[0]} endingPrice={displayValue} />}\n            valueFormatterType={NumberType.FiatTokenPrice}\n            time={crosshairData?.time}\n          />\n        )\n      }}\n    </Chart>\n  )\n}\n","import { ComponentProps } from 'react'\n\nexport const ExplorerIcon = (props: ComponentProps<'svg'>) => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path\n      id=\"box-search_2\"\n      d=\"M6.32064 7.43328C6.4873 7.50661 6.66065 7.55329 6.83398 7.59329V13.94C6.72732 13.9133 6.62067 13.8733 6.52067 13.8266L2.52067 12.0466C1.80067 11.7266 1.33398 11.0133 1.33398 10.2199V5.77996C1.33398 5.59996 1.36064 5.41995 1.40731 5.25329L6.32064 7.43328ZM12.754 4.37328C12.5807 4.19995 12.3806 4.05328 12.1473 3.95328L8.1473 2.17329C7.6273 1.93996 7.04067 1.93996 6.52067 2.17329L2.52067 3.95328C2.28734 4.05328 2.08731 4.19995 1.91398 4.37328L6.72062 6.51328C7.10729 6.68661 7.55401 6.68661 7.94735 6.51328L12.754 4.37328ZM11.1347 7.92862C11.8227 7.76662 12.4766 7.81863 13.0646 8.02129C13.1966 8.06663 13.334 7.97729 13.334 7.83729V5.77996C13.334 5.59996 13.3073 5.41995 13.2607 5.25329L8.34733 7.43328C8.18066 7.49995 8.00732 7.55329 7.83398 7.59329V13.94C7.84598 13.948 7.84599 13.9479 7.85799 13.9559L8.98665 13.452C9.10132 13.4006 9.13533 13.262 9.066 13.158C8.584 12.4373 8.37864 11.522 8.57397 10.5586C8.83464 9.27263 9.85802 8.22929 11.1347 7.92862ZM15.0207 14.3526C14.9233 14.4499 14.7953 14.4993 14.6673 14.4993C14.5393 14.4993 14.4113 14.4506 14.314 14.3526L13.2807 13.3193C12.896 13.5713 12.4386 13.7213 11.9453 13.7213C10.5973 13.7213 9.50065 12.6246 9.50065 11.2766C9.50065 9.92862 10.5973 8.83194 11.9453 8.83194C13.2926 8.83194 14.3893 9.92862 14.3893 11.2766C14.3893 11.77 14.24 12.228 13.988 12.6119L15.0213 13.6453C15.216 13.8406 15.216 14.1573 15.0207 14.3526ZM13.3893 11.2773C13.3893 10.4806 12.7413 9.83261 11.9453 9.83261C11.1486 9.83261 10.5007 10.4806 10.5007 11.2773C10.5007 12.0739 11.1486 12.722 11.9453 12.722C12.7413 12.7213 13.3893 12.0733 13.3893 11.2773Z\"\n      fill=\"white\"\n    />\n  </svg>\n)\n","import { Trans } from '@lingui/macro'\nimport { ChainId } from '@uniswap/sdk-core'\nimport { EtherscanLogo } from 'components/Icons/Etherscan'\nimport { ExplorerIcon } from 'components/Icons/ExplorerIcon'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport Row from 'components/Row'\nimport { useInfoExplorePageEnabled } from 'featureFlags/flags/infoExplore'\nimport { chainIdToBackendName, getTokenDetailsURL } from 'graphql/data/util'\nimport { Token } from 'graphql/thegraph/__generated__/types-and-hooks'\nimport { useCurrency } from 'hooks/Tokens'\nimport useCopyClipboard from 'hooks/useCopyClipboard'\nimport { useCallback } from 'react'\nimport { ChevronRight, Copy } from 'react-feather'\nimport { useNavigate } from 'react-router-dom'\nimport styled, { useTheme } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ClickableStyle, EllipsisStyle, ExternalLink, ThemedText } from 'theme/components'\nimport { shortenAddress } from 'utils'\nimport { ExplorerDataType, getExplorerLink } from 'utils/getExplorerLink'\n\nimport { DoubleCurrencyAndChainLogo } from './PoolDetailsHeader'\nimport { DetailBubble, SmallDetailBubble } from './shared'\n\nconst TokenName = styled(ThemedText.BodyPrimary)`\n  display: none;\n\n  @media (max-width: ${BREAKPOINTS.lg - 1}px) and (min-width: ${BREAKPOINTS.xs - 1}px) {\n    display: block;\n  }\n  ${EllipsisStyle}\n`\n\nconst TokenTextWrapper = styled(Row)<{ isClickable?: boolean }>`\n  gap: 8px;\n  margin-right: 12px;\n  ${({ isClickable }) => isClickable && ClickableStyle}\n`\n\nconst SymbolText = styled(ThemedText.BodyPrimary)`\n  flex-shrink: 0;\n\n  @media (max-width: ${BREAKPOINTS.lg - 1}px) and (min-width: ${BREAKPOINTS.xs - 1}px) {\n    color: ${({ theme }) => theme.neutral2};\n  }\n  ${EllipsisStyle}\n`\n\nconst CopyAddress = styled(Row)`\n  gap: 8px;\n  padding: 8px 12px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.surface3};\n  font-size: 14px;\n  font-weight: 535;\n  line-height: 16px;\n  width: max-content;\n  flex-shrink: 0;\n  ${ClickableStyle}\n`\nconst StyledCopyIcon = styled(Copy)`\n  width: 16px;\n  height: 16px;\n  color: ${({ theme }) => theme.neutral2};\n  flex-shrink: 0;\n`\n\nconst ExplorerWrapper = styled.div`\n  padding: 8px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.surface3};\n  display: flex;\n  ${ClickableStyle}\n`\n\nconst ButtonsRow = styled(Row)`\n  gap: 8px;\n  flex-shrink: 0;\n  width: max-content;\n`\n\ninterface PoolDetailsLinkProps {\n  address?: string\n  chainId?: number\n  tokens: (Token | undefined)[]\n  loading?: boolean\n}\n\nexport function PoolDetailsLink({ address, chainId, tokens, loading }: PoolDetailsLinkProps) {\n  const theme = useTheme()\n  const currencies = [\n    useCurrency(tokens[0]?.id, chainId) ?? undefined,\n    useCurrency(tokens[1]?.id, chainId) ?? undefined,\n  ]\n  const [, setCopied] = useCopyClipboard()\n  const copy = useCallback(() => {\n    address && setCopied(address)\n  }, [address, setCopied])\n\n  const isPool = tokens.length === 2\n  const explorerUrl =\n    address && chainId && getExplorerLink(chainId, address, isPool ? ExplorerDataType.ADDRESS : ExplorerDataType.TOKEN)\n\n  const navigate = useNavigate()\n  const isInfoExplorePageEnabled = useInfoExplorePageEnabled()\n  const chainName = chainIdToBackendName(chainId)\n  const handleTokenTextClick = useCallback(() => {\n    if (!isPool) {\n      navigate(getTokenDetailsURL({ address: tokens[0]?.id, chain: chainName, isInfoExplorePageEnabled }))\n    }\n  }, [navigate, tokens, isPool, chainName, isInfoExplorePageEnabled])\n\n  if (loading || !address || !chainId) {\n    return (\n      <Row gap=\"8px\" padding=\"6px 0px\">\n        <SmallDetailBubble />\n        <DetailBubble $width={117} />\n      </Row>\n    )\n  }\n\n  return (\n    <Row align=\"space-between\">\n      <TokenTextWrapper\n        data-testid={\n          isPool ? `pdp-pool-logo-${tokens[0]?.symbol}-${tokens[1]?.symbol}` : `pdp-token-logo-${tokens[0]?.symbol}`\n        }\n        isClickable={!isPool}\n        onClick={handleTokenTextClick}\n      >\n        {isPool ? (\n          <DoubleCurrencyAndChainLogo chainId={chainId} currencies={currencies} size={20} />\n        ) : (\n          <CurrencyLogo currency={currencies[0]} size=\"20px\" />\n        )}\n        <TokenName>{isPool ? <Trans>Pool</Trans> : tokens[0]?.name}</TokenName>\n        <SymbolText>\n          {isPool ? (\n            `${tokens[0]?.symbol} / ${tokens[1]?.symbol}`\n          ) : (\n            <Row gap=\"4px\">\n              {tokens[0]?.symbol} <ChevronRight size={16} color={theme.neutral2} />\n            </Row>\n          )}\n        </SymbolText>\n      </TokenTextWrapper>\n      <ButtonsRow>\n        <CopyAddress data-testid={`copy-address-${address}`} onClick={copy}>\n          {shortenAddress(address)}\n          <StyledCopyIcon />\n        </CopyAddress>\n        {explorerUrl && (\n          <ExternalLink href={explorerUrl} data-testid={`explorer-url-${explorerUrl}`}>\n            <ExplorerWrapper>\n              {chainId === ChainId.MAINNET ? (\n                <EtherscanLogo width=\"16px\" height=\"16px\" fill={theme.neutral2} />\n              ) : (\n                <ExplorerIcon width=\"16px\" height=\"16px\" stroke={theme.darkMode ? 'none' : theme.neutral2} />\n              )}\n            </ExplorerWrapper>\n          </ExternalLink>\n        )}\n      </ButtonsRow>\n    </Row>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport Column from 'components/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport Row from 'components/Row'\nimport { LoadingBubble } from 'components/Tokens/loading'\nimport { DeltaArrow } from 'components/Tokens/TokenDetails/Delta'\nimport { chainIdToBackendName, getTokenDetailsURL } from 'graphql/data/util'\nimport { Token } from 'graphql/thegraph/__generated__/types-and-hooks'\nimport { PoolData } from 'graphql/thegraph/PoolData'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useColor } from 'hooks/useColor'\nimport { useScreenSize } from 'hooks/useScreenSize'\nimport { ReactNode, useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled, { css, useTheme } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { colors } from 'theme/colors'\nimport { ClickableStyle, ThemedText } from 'theme/components'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { DetailBubble } from './shared'\n\nconst HeaderText = styled(Text)`\n  font-weight: 485;\n  font-size: 24px;\n  line-height: 36px;\n  @media (max-width: ${BREAKPOINTS.lg - 1}px) {\n    width: 100%;\n  }\n`\n\nconst StatsWrapper = styled(Column)<{ loaded?: boolean }>`\n  gap: 24px;\n  padding: 20px;\n  border-radius: 20px;\n  background: ${({ theme }) => theme.surface2};\n  width: 100%;\n  z-index: 1;\n  margin-top: ${({ loaded }) => loaded && '-24px'};\n\n  @media (max-width: ${BREAKPOINTS.lg - 1}px) {\n    flex-direction: row;\n    background: transparent;\n    flex-wrap: wrap;\n    padding: 20px 0px;\n    justify-content: space-between;\n    margin-top: 0px;\n  }\n`\n\nconst StatItemColumn = styled(Column)`\n  gap: 8px;\n  flex: 1;\n  min-width: 180px;\n\n  @media (max-width: ${BREAKPOINTS.sm}px) {\n    min-width: 150px;\n  }\n`\n\nconst PoolBalanceSymbols = styled(Row)`\n  justify-content: space-between;\n\n  @media (max-width: ${BREAKPOINTS.lg - 1}px) {\n    flex-direction: column;\n  }\n`\n\nconst PoolBalanceTokenNamesContainer = styled(Row)`\n  font-weight: 485;\n  font-size: 16px;\n  line-height: 24px;\n  width: max-content;\n\n  @media (max-width: ${BREAKPOINTS.lg - 1}px) {\n    font-size: 20px;\n    line-height: 28px;\n    width: 100%;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.neutral1};\n  ${ClickableStyle}\n`\n\nconst leftBarChartStyles = css`\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-right: 1px solid ${({ theme }) => theme.surface2};\n`\n\nconst rightBarChartStyles = css`\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  border-left: 1px solid ${({ theme }) => theme.surface2};\n`\n\nconst BalanceChartSide = styled.div<{ percent: number; $color: string; isLeft: boolean }>`\n  height: 8px;\n  width: ${({ percent }) => percent * 100}%;\n  background: ${({ $color }) => $color};\n  ${({ isLeft }) => (isLeft ? leftBarChartStyles : rightBarChartStyles)}\n`\n\nconst StatSectionBubble = styled(LoadingBubble)`\n  width: 180px;\n  height: 40px;\n`\n\nconst StatHeaderBubble = styled(LoadingBubble)`\n  width: 116px;\n  height: 24px;\n  border-radius: 8px;\n`\n\ntype TokenFullData = Token & {\n  price: number\n  tvl: number\n  color: string\n  percent: number\n  currency?: Currency\n}\n\nconst PoolBalanceTokenNames = ({ token, chainId }: { token: TokenFullData; chainId?: number }) => {\n  const isScreenSize = useScreenSize()\n  const screenIsNotLarge = isScreenSize['lg']\n  const { formatNumber } = useFormatter()\n\n  return (\n    <PoolBalanceTokenNamesContainer>\n      {!screenIsNotLarge && <CurrencyLogo currency={token.currency} size=\"20px\" style={{ marginRight: '8px' }} />}\n      {formatNumber({\n        input: token.tvl,\n        type: NumberType.TokenQuantityStats,\n      })}\n      &nbsp;\n      <StyledLink\n        to={getTokenDetailsURL({\n          address: token.id,\n          chain: chainIdToBackendName(chainId),\n          isInfoExplorePageEnabled: true,\n        })}\n      >\n        {screenIsNotLarge && (\n          <CurrencyLogo currency={token.currency} size=\"16px\" style={{ marginRight: '4px', marginLeft: '4px' }} />\n        )}\n        {token.symbol}\n      </StyledLink>\n    </PoolBalanceTokenNamesContainer>\n  )\n}\n\ninterface PoolDetailsStatsProps {\n  poolData?: PoolData\n  isReversed?: boolean\n  chainId?: number\n  loading?: boolean\n}\n\nexport function PoolDetailsStats({ poolData, isReversed, chainId, loading }: PoolDetailsStatsProps) {\n  const isScreenSize = useScreenSize()\n  const screenIsNotLarge = isScreenSize['lg']\n  const theme = useTheme()\n\n  const currency0 = useCurrency(poolData?.token0?.id, chainId) ?? undefined\n  const currency1 = useCurrency(poolData?.token1?.id, chainId) ?? undefined\n\n  const color0 = useColor(currency0, theme.surface2, theme.darkMode)\n  let color1 = useColor(currency1, theme.surface2, theme.darkMode)\n  if (color0 === color1 && color0 === theme.accent1) {\n    color1 = colors.blue400\n  }\n\n  const [token0, token1] = useMemo(() => {\n    if (poolData) {\n      const fullWidth = poolData?.tvlToken0 / poolData?.token0Price + poolData?.tvlToken1\n      const token0FullData: TokenFullData = {\n        ...poolData?.token0,\n        price: poolData?.token0Price,\n        tvl: poolData?.tvlToken0,\n        color: color0,\n        percent: poolData?.tvlToken0 / poolData?.token0Price / fullWidth,\n        currency: currency0,\n      }\n      const token1FullData: TokenFullData = {\n        ...poolData?.token1,\n        price: poolData?.token1Price,\n        tvl: poolData?.tvlToken1,\n        color: color1,\n        percent: poolData?.tvlToken1 / fullWidth,\n        currency: currency1,\n      }\n      return isReversed ? [token1FullData, token0FullData] : [token0FullData, token1FullData]\n    } else {\n      return [undefined, undefined]\n    }\n  }, [color0, color1, currency0, currency1, isReversed, poolData])\n\n  if (loading || !token0 || !token1 || !poolData) {\n    return (\n      <StatsWrapper>\n        <HeaderText>\n          <StatHeaderBubble />\n        </HeaderText>\n        {Array.from({ length: 4 }).map((_, i) => (\n          <Column gap=\"md\" key={`loading-info-row-${i}`}>\n            <DetailBubble />\n            <StatSectionBubble />\n          </Column>\n        ))}\n      </StatsWrapper>\n    )\n  }\n\n  return (\n    <StatsWrapper loaded>\n      <HeaderText>\n        <Trans>Stats</Trans>\n      </HeaderText>\n      <StatItemColumn>\n        <ThemedText.BodySecondary>\n          <Trans>Pool balances</Trans>\n        </ThemedText.BodySecondary>\n        <PoolBalanceSymbols>\n          <PoolBalanceTokenNames token={token0} chainId={chainId} />\n          <PoolBalanceTokenNames token={token1} chainId={chainId} />\n        </PoolBalanceSymbols>\n        {screenIsNotLarge && (\n          <Row data-testid=\"pool-balance-chart\">\n            {token0.color && <BalanceChartSide percent={token0.percent} $color={token0.color} isLeft={true} />}\n            {token1.color && <BalanceChartSide percent={token1.percent} $color={token1.color} isLeft={false} />}\n          </Row>\n        )}\n      </StatItemColumn>\n      <StatItem title={<Trans>TVL</Trans>} value={poolData.tvlUSD} delta={poolData.tvlUSDChange} />\n      <StatItem title={<Trans>24H volume</Trans>} value={poolData.volumeUSD} delta={poolData.volumeUSDChange} />\n      <StatItem title={<Trans>24H fees</Trans>} value={poolData.volumeUSD * (poolData.feeTier / 1000000)} />\n    </StatsWrapper>\n  )\n}\n\nconst StatsTextContainer = styled(Row)`\n  gap: 4px;\n  width: 100%;\n  align-items: flex-end;\n\n  @media (max-width: ${BREAKPOINTS.lg - 1}px) {\n    flex-direction: column;\n    gap: 0px;\n    align-items: flex-start;\n  }\n`\n\nconst StatItemText = styled(Text)`\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 36px;\n  font-weight: 485;\n  line-height: 44px;\n\n  @media (max-width: ${BREAKPOINTS.lg - 1}px) {\n    font-size: 20px;\n    line-height: 28px;\n  }\n`\n\nfunction StatItem({ title, value, delta }: { title: ReactNode; value: number; delta?: number }) {\n  const { formatNumber, formatDelta } = useFormatter()\n\n  return (\n    <StatItemColumn>\n      <ThemedText.BodySecondary>{title}</ThemedText.BodySecondary>\n      <StatsTextContainer>\n        <StatItemText>\n          {formatNumber({\n            input: value,\n            type: NumberType.FiatTokenStats,\n          })}\n        </StatItemText>\n        {!!delta && (\n          <Row width=\"max-content\" padding=\"4px 0px\">\n            <DeltaArrow delta={delta} />\n            <ThemedText.BodySecondary>{formatDelta(delta)}</ThemedText.BodySecondary>\n          </Row>\n        )}\n      </StatsTextContainer>\n    </StatItemColumn>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { useWeb3React } from '@web3-react/core'\nimport { PositionInfo } from 'components/AccountDrawer/MiniPortfolio/Pools/cache'\nimport useMultiChainPositions from 'components/AccountDrawer/MiniPortfolio/Pools/useMultiChainPositions'\nimport Column from 'components/Column'\nimport { ReverseArrow } from 'components/Icons/ReverseArrow'\nimport Row from 'components/Row'\nimport { SwapWrapperOuter } from 'components/swap/styled'\nimport { LoadingBubble } from 'components/Tokens/loading'\nimport { Token } from 'graphql/thegraph/__generated__/types-and-hooks'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useSwitchChain } from 'hooks/useSwitchChain'\nimport { Swap } from 'pages/Swap'\nimport { useReducer } from 'react'\nimport { ExternalLink, Plus, X } from 'react-feather'\nimport { useNavigate } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ClickableStyle, ThemedText } from 'theme/components'\nimport { opacify } from 'theme/utils'\nimport { currencyId } from 'utils/currencyId'\n\nconst PoolDetailsStatsButtonsRow = styled(Row)`\n  gap: 12px;\n  z-index: 1;\n\n  @media (max-width: ${BREAKPOINTS.lg - 1}px) {\n    display: none;\n  }\n`\n\nconst PoolButton = styled.button<{ open?: boolean }>`\n  display: flex;\n  flex-direction: row;\n  padding: 12px 16px 12px 12px;\n  border: unset;\n  border-radius: 900px;\n  width: ${({ open }) => (open ? '100px' : '50%')};\n  gap: 8px;\n  color: ${({ theme, open }) => (open ? theme.neutral1 : theme.accent1)};\n  background-color: ${({ theme, open }) => !open && opacify(12, theme.accent1)};\n  justify-content: center;\n  transition: ${({ theme }) => `width ${theme.transition.duration.medium} ${theme.transition.timing.inOut}`};\n  border: ${({ theme, open }) => open && `1px solid ${theme.surface3}`};\n  ${ClickableStyle}\n`\n\nconst SwapIcon = styled(ReverseArrow)`\n  fill: ${({ theme }) => theme.accent1};\n  rotate: 90deg;\n`\n\nconst ButtonBubble = styled(LoadingBubble)`\n  height: 44px;\n  width: 175px;\n  border-radius: 900px;\n`\n\nconst SwapModalWrapper = styled.div<{ open?: boolean }>`\n  z-index: 0;\n  max-height: ${({ open }) => (open ? '100vh' : '0')};\n  transition: ${({ theme }) => `max-height ${theme.transition.duration.medium} ${theme.transition.timing.ease}`};\n  padding-bottom: ${({ open }) => (open ? '24px' : '0')};\n\n  ${SwapWrapperOuter} {\n    &:before {\n      background-color: unset;\n    }\n  }\n\n  @media (max-width: ${BREAKPOINTS.lg - 1}px) {\n    display: none;\n  }\n`\n\ninterface PoolDetailsStatsButtonsProps {\n  chainId?: number\n  token0?: Token\n  token1?: Token\n  feeTier?: number\n  loading?: boolean\n}\n\nfunction findMatchingPosition(positions: PositionInfo[], token0?: Token, token1?: Token, feeTier?: number) {\n  return positions?.find(\n    (position) =>\n      (position?.details.token0.toLowerCase() === token0?.id ||\n        position?.details.token0.toLowerCase() === token1?.id) &&\n      (position?.details.token1.toLowerCase() === token0?.id ||\n        position?.details.token1.toLowerCase() === token1?.id) &&\n      position?.details.fee == feeTier &&\n      !position.closed\n  )\n}\n\nexport function PoolDetailsStatsButtons({ chainId, token0, token1, feeTier, loading }: PoolDetailsStatsButtonsProps) {\n  const { chainId: walletChainId, connector, account } = useWeb3React()\n  const { positions: userOwnedPositions } = useMultiChainPositions(account ?? '', chainId ? [chainId] : undefined)\n  const position = userOwnedPositions && findMatchingPosition(userOwnedPositions, token0, token1, feeTier)\n  const tokenId = position?.details.tokenId\n  const switchChain = useSwitchChain()\n  const navigate = useNavigate()\n  const currency0 = useCurrency(token0?.id, chainId)\n  const currency1 = useCurrency(token1?.id, chainId)\n  const handleAddLiquidity = async () => {\n    if (currency0 && currency1) {\n      if (walletChainId !== chainId && chainId) await switchChain(connector, chainId)\n      navigate(`/add/${currencyId(currency0)}/${currencyId(currency1)}/${feeTier}${tokenId ? `/${tokenId}` : ''}`)\n    }\n  }\n  const [swapModalOpen, toggleSwapModalOpen] = useReducer((state) => !state, false)\n  const [addLiquidityHovered, toggleAddLiquidityHovered] = useReducer((state) => !state, false)\n\n  if (loading || !currency0 || !currency1)\n    return (\n      <PoolDetailsStatsButtonsRow data-testid=\"pdp-buttons-loading-skeleton\">\n        <ButtonBubble />\n        <ButtonBubble />\n      </PoolDetailsStatsButtonsRow>\n    )\n\n  return (\n    <Column gap=\"lg\">\n      <PoolDetailsStatsButtonsRow>\n        <PoolButton\n          onClick={toggleSwapModalOpen}\n          open={swapModalOpen}\n          data-testid={`pool-details-${swapModalOpen ? 'close' : 'swap'}-button`}\n        >\n          {swapModalOpen ? (\n            <>\n              <X size={20} />\n              <ThemedText.BodyPrimary fontWeight={535} color=\"accentActive\">\n                <Trans>Close</Trans>\n              </ThemedText.BodyPrimary>\n            </>\n          ) : (\n            <>\n              <SwapIcon />\n              <ThemedText.BodyPrimary fontWeight={535} color=\"accentActive\">\n                <Trans>Swap</Trans>\n              </ThemedText.BodyPrimary>\n            </>\n          )}\n        </PoolButton>\n        <PoolButton\n          onClick={handleAddLiquidity}\n          onMouseEnter={toggleAddLiquidityHovered}\n          onMouseLeave={toggleAddLiquidityHovered}\n          data-testid=\"pool-details-add-liquidity-button\"\n        >\n          {!addLiquidityHovered && <Plus size={20} />}\n          <ThemedText.BodyPrimary fontWeight={535} color=\"accentActive\">\n            <Trans>Add liquidity</Trans>\n          </ThemedText.BodyPrimary>\n          {addLiquidityHovered && <ExternalLink size={20} />}\n        </PoolButton>\n      </PoolDetailsStatsButtonsRow>\n      <SwapModalWrapper open={swapModalOpen} data-testid=\"pool-details-swap-modal\">\n        <Swap\n          chainId={chainId}\n          initialInputCurrency={currency0}\n          initialOutputCurrency={currency1}\n          disableTokenInputs={chainId !== walletChainId}\n        />\n      </SwapModalWrapper>\n    </Column>\n  )\n}\n","type SVGProps = React.SVGProps<SVGSVGElement> & {\n  fill?: string\n  height?: string | number\n  width?: string | number\n  gradientId?: string\n}\n\nexport const ClosedCircle = (props: SVGProps) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" {...props}>\n    <g clipPath=\"url(#clip0_2958_135280)\">\n      <path\n        d=\"M6 11C8.76142 11 11 8.76142 11 6C11 3.23858 8.76142 1 6 1C3.23858 1 1 3.23858 1 6C1 8.76142 3.23858 11 6 11Z\"\n        stroke=\"#9B9B9B\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path d=\"M2.46484 2.46509L9.53484 9.53509\" stroke=\"#9B9B9B\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_2958_135280\">\n        <rect width=\"12\" height=\"12\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n)\n\nexport const DoubleArrow = (props: SVGProps) => (\n  <svg width=\"14\" height=\"9\" viewBox=\"0 0 14 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path\n      d=\"M4.00284 8.5L0.184659 4.68182L4.00284 0.863636L4.65909 1.51136L1.95739 4.21307H12.1335L9.43182 1.51136L10.0881 0.863636L13.9062 4.68182L10.0881 8.5L9.43182 7.84375L12.1335 5.15057H1.95739L4.65909 7.84375L4.00284 8.5Z\"\n      fill=\"#5E5E5E\"\n    />\n  </svg>\n)\n","import { Trans } from '@lingui/macro'\nimport { useWeb3React } from '@web3-react/core'\nimport { PositionInfo } from 'components/AccountDrawer/MiniPortfolio/Pools/cache'\nimport Column from 'components/Column'\nimport { ClosedCircle, DoubleArrow } from 'components/Pools/PoolDetails/icons'\nimport { DoubleCurrencyLogo } from 'components/Pools/PoolDetails/PoolDetailsHeader'\nimport Row from 'components/Row'\nimport { BIPS_BASE } from 'constants/misc'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useSwitchChain } from 'hooks/useSwitchChain'\nimport { useCallback } from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport { useNavigate } from 'react-router-dom'\nimport { Bound } from 'state/mint/v3/actions'\nimport styled, { useTheme } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ClickableStyle, ThemedText } from 'theme/components'\nimport { useFormatter } from 'utils/formatNumbers'\n\nconst PositionTableWrapper = styled(Column)`\n  gap: 24px;\n  margin-top: 24px;\n  width: 100%;\n`\n\nconst PositionWrapper = styled(Column)`\n  gap: 4px;\n  background: ${({ theme }) => theme.surface2};\n  border-radius: 12px;\n  width: 100%;\n  ${ClickableStyle}\n  padding: 16px;\n`\n\nconst FeeTier = styled(ThemedText.LabelMicro)`\n  padding: 4px 6px;\n  background: ${({ theme }) => theme.surface2};\n`\n\nconst StatusWrapper = styled(Row)<{ status: PositionStatus }>`\n  gap: 8px;\n  width: max-content;\n  margin-right: 0;\n  margin-left: auto;\n  color ${({ theme, status }) =>\n    status === PositionStatus.IN_RANGE\n      ? theme.success\n      : status === PositionStatus.OUT_OF_RANGE\n      ? theme.deprecated_accentWarning\n      : theme.neutral2};\n`\n\nconst RangeWrapper = styled(Row)`\n  gap: 10px;\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    flex-direction: column;\n    gap: 4px;\n    align-items: flex-start;\n  }\n`\n\nconst StyledDoubleArrow = styled(DoubleArrow)`\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    display: none;\n  }\n`\n\nconst RangeText = styled(ThemedText.Caption)`\n  width: max-content;\n  white-space: nowrap;\n`\n\nconst StyledDot = styled.div`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.success};\n`\n\nenum PositionStatus {\n  IN_RANGE = 'In range',\n  OUT_OF_RANGE = 'Out of range',\n  CLOSED = 'Closed',\n}\n\nfunction PositionRow({ positionInfo }: { positionInfo: PositionInfo }) {\n  const currencies = [\n    useCurrency(positionInfo.details.token0, positionInfo.chainId),\n    useCurrency(positionInfo.details.token1, positionInfo.chainId),\n  ]\n  const { chainId: walletChainId, connector } = useWeb3React()\n  const navigate = useNavigate()\n  const switchChain = useSwitchChain()\n  const theme = useTheme()\n  const { formatTickPrice } = useFormatter()\n\n  const onClick = useCallback(async () => {\n    if (walletChainId !== positionInfo.chainId) await switchChain(connector, positionInfo.chainId)\n    navigate('/pool/' + positionInfo.details.tokenId)\n  }, [connector, navigate, positionInfo.chainId, positionInfo.details.tokenId, switchChain, walletChainId])\n\n  const status = positionInfo.inRange\n    ? PositionStatus.IN_RANGE\n    : positionInfo.closed\n    ? PositionStatus.CLOSED\n    : PositionStatus.OUT_OF_RANGE\n\n  const priceUpper = positionInfo.position.token0PriceLower.invert()\n  const priceLower = positionInfo.position.token0PriceUpper.invert()\n\n  const ticksAtLimit = {\n    LOWER: parseFloat(priceLower.toFixed(0)) === 0,\n    UPPER: parseFloat(priceUpper.toFixed(0)) > Number.MAX_SAFE_INTEGER,\n  }\n\n  return (\n    <PositionWrapper onClick={onClick}>\n      <Row gap=\"8px\">\n        <DoubleCurrencyLogo chainId={positionInfo.chainId} currencies={currencies} size={16} />\n        <ThemedText.SubHeader>\n          {positionInfo.pool.token0.symbol}/{positionInfo.pool.token1.symbol}\n        </ThemedText.SubHeader>\n        <FeeTier>{positionInfo.pool.fee / BIPS_BASE}%</FeeTier>\n        <StatusWrapper status={status}>\n          <ThemedText.Caption color=\"inherit\">{status}</ThemedText.Caption>\n          {status === PositionStatus.IN_RANGE && <StyledDot />}\n          {status === PositionStatus.OUT_OF_RANGE && <AlertTriangle size={12} color={theme.deprecated_accentWarning} />}\n          {status === PositionStatus.CLOSED && <ClosedCircle />}\n        </StatusWrapper>\n      </Row>\n      <RangeWrapper>\n        <RangeText data-testid={`position-min-${priceLower.toFixed(0)}`}>\n          <Trans>Min:</Trans>&nbsp;\n          {formatTickPrice({\n            price: priceLower,\n            atLimit: ticksAtLimit,\n            direction: Bound.LOWER,\n          })}\n          &nbsp;\n          {positionInfo.pool.token0.symbol}&nbsp;\n          <Trans>per</Trans>&nbsp;\n          {positionInfo.pool.token1.symbol}\n        </RangeText>\n        <StyledDoubleArrow />\n        <RangeText data-testid={`position-max-${priceUpper.toFixed(0)}`}>\n          <Trans>Max:</Trans>&nbsp;\n          {formatTickPrice({\n            price: priceUpper,\n            atLimit: ticksAtLimit,\n            direction: Bound.UPPER,\n          })}\n          &nbsp;\n          {positionInfo.pool.token0.symbol}&nbsp;\n          <Trans>per</Trans>&nbsp;\n          {positionInfo.pool.token1.symbol}\n        </RangeText>\n      </RangeWrapper>\n    </PositionWrapper>\n  )\n}\n\nexport function PoolDetailsPositionsTable({ positions }: { positions: PositionInfo[] }) {\n  return (\n    <PositionTableWrapper>\n      {positions.map((position, index) => (\n        <PositionRow positionInfo={position} key={`pool-position-${index}`} />\n      ))}\n    </PositionTableWrapper>\n  )\n}\n","export function countSignificantFigures(num: number): number {\n  const str = num.toString()\n\n  // Remove decimal point if it exists\n  const noPoint = str.replace('.', '')\n\n  // Remove leading zeros\n  const noLeadingZeros = noPoint.replace(/^0+/, '')\n\n  // Remove trailing zeros if number is an integer\n  const noTrailingZeros = str.includes('.') ? noLeadingZeros : noLeadingZeros.replace(/0+$/, '')\n\n  return noTrailingZeros.length\n}\n","import { gql } from '@apollo/client'\nimport { ChainId } from '@uniswap/sdk-core'\nimport { useCallback, useMemo, useRef } from 'react'\nimport { countSignificantFigures } from 'utils'\n\nimport { OrderDirection, Transaction_OrderBy, usePoolTransactionsQuery } from './__generated__/types-and-hooks'\nimport { chainToApolloClient } from './apollo'\n\n// TODO(WEB-3236): once GQL BE Transaction query is supported add usd, token0 amount, and token1 amount sort support\ngql`\n  query PoolTransactions(\n    $address: String!\n    $first: Int\n    $skip: Int\n    $orderBy: Transaction_orderBy\n    $orderDirection: OrderDirection\n  ) {\n    mints(\n      first: $first\n      skip: $skip\n      orderBy: timestamp\n      orderDirection: $orderDirection\n      where: { pool: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(\n      first: $first\n      skip: $skip\n      orderBy: timestamp\n      orderDirection: $orderDirection\n      where: { pool: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(\n      first: $first\n      skip: $skip\n      orderBy: timestamp\n      orderDirection: $orderDirection\n      where: { pool: $address }\n      subgraphError: allow\n    ) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount\n      amount0\n      amount1\n      amountUSD\n    }\n  }\n`\n\nexport enum PoolTransactionType {\n  BUY = 'Buy',\n  SELL = 'Sell',\n  BURN = 'Burn',\n  MINT = 'Mint',\n}\n\nexport interface PoolTransaction {\n  timestamp: number\n  transaction: string\n  pool: {\n    token0: {\n      id: string\n      symbol: string\n    }\n    token1: {\n      id: string\n      symbol: string\n    }\n  }\n  maker: string\n  amount0: number\n  amount1: number\n  amountUSD: string\n  type: PoolTransactionType\n  isExactIn?: boolean\n}\n\nexport function usePoolTransactions(\n  address: string,\n  chainId?: ChainId,\n  orderBy: Transaction_OrderBy = Transaction_OrderBy.Timestamp,\n  orderDirection: OrderDirection = OrderDirection.Desc,\n  filter: PoolTransactionType[] = [\n    PoolTransactionType.BUY,\n    PoolTransactionType.SELL,\n    PoolTransactionType.BURN,\n    PoolTransactionType.MINT,\n  ],\n  first = 25,\n  skip?: number\n) {\n  const apolloClient = chainToApolloClient[chainId || ChainId.MAINNET]\n  const { data, loading, fetchMore, error } = usePoolTransactionsQuery({\n    variables: {\n      address: address.toLowerCase(),\n      first,\n      skip,\n      orderBy,\n      orderDirection,\n    },\n    client: apolloClient,\n  })\n  const loadingMore = useRef(false)\n  const loadMore = useCallback(\n    ({ onComplete }: { onComplete?: () => void }) => {\n      if (loadingMore.current) {\n        return\n      }\n      loadingMore.current = true\n      fetchMore({\n        variables: {\n          skip: Math.max(data?.swaps?.length ?? 0, data?.mints?.length ?? 0, data?.burns?.length ?? 0),\n        },\n        updateQuery: (prev, { fetchMoreResult }: any) => {\n          if (!fetchMoreResult) return prev\n          onComplete?.()\n          const mergedData = {\n            mints: [...prev.mints, ...fetchMoreResult.mints],\n            swaps: [...prev.swaps, ...fetchMoreResult.swaps],\n            burns: [...prev.burns, ...fetchMoreResult.burns],\n          }\n          loadingMore.current = false\n          return mergedData\n        },\n      })\n    },\n    [data?.burns?.length, data?.mints?.length, data?.swaps?.length, fetchMore]\n  )\n\n  const transactions = useMemo(() => {\n    const mints = filter.includes(PoolTransactionType.MINT)\n      ? data?.mints.map((tx) => {\n          return { ...tx, type: PoolTransactionType.MINT, isExactIn: undefined }\n        })\n      : []\n    const burns = filter.includes(PoolTransactionType.BURN)\n      ? data?.burns\n          .map((tx) => {\n            return { ...tx, type: PoolTransactionType.BURN, isExactIn: undefined }\n          })\n          .filter((tx) => tx.amount0 !== '0' && tx.amount1 !== '0') // filter out collecting fees\n      : []\n    const swaps =\n      filter.includes(PoolTransactionType.BUY) || filter.includes(PoolTransactionType.SELL)\n        ? data?.swaps\n            .map((tx) => {\n              const tokenIn = tx.amount0 > 0 ? tx.pool.token0 : tx.pool.token1\n              // Determine if swap is exact in vs exact out based on which amount has fewer sig figs\n              const token0SigFigs = countSignificantFigures(tx.amount0)\n              const token1SigFigs = countSignificantFigures(tx.amount1)\n              const isExactIn =\n                tokenIn.id.toLowerCase() === tx.pool.token0?.id.toLowerCase()\n                  ? token0SigFigs < token1SigFigs\n                  : token1SigFigs < token0SigFigs\n              if (isExactIn && filter.includes(PoolTransactionType.SELL))\n                return { ...tx, type: PoolTransactionType.SELL, isExactIn }\n              else if (!isExactIn && filter.includes(PoolTransactionType.BUY))\n                return { ...tx, type: PoolTransactionType.BUY, isExactIn }\n              return undefined\n            })\n            .filter((tx) => tx !== undefined)\n        : []\n    return [...(mints ?? []), ...(swaps ?? []), ...(burns ?? [])]\n      .sort((a, b) => b?.timestamp - a?.timestamp)\n      .map((tx) => {\n        return {\n          timestamp: tx?.timestamp,\n          transaction: tx?.transaction.id,\n          pool: {\n            token0: {\n              id: tx?.pool.token0.id,\n              symbol: tx?.pool.token0.symbol,\n            },\n            token1: {\n              id: tx?.pool.token1.id,\n              symbol: tx?.pool.token1.symbol,\n            },\n          },\n          maker: tx?.origin,\n          amount0: tx?.amount0,\n          amount1: tx?.amount1,\n          amountUSD: tx?.amountUSD,\n          type: tx?.type,\n          isExactIn: tx?.isExactIn,\n        } as PoolTransaction\n      })\n  }, [data?.burns, data?.mints, data?.swaps, filter])\n\n  return useMemo(() => {\n    return {\n      transactions,\n      loading,\n      loadMore,\n      error,\n    }\n  }, [transactions, loading, loadMore, error])\n}\n","import { Trans } from '@lingui/macro'\nimport { createColumnHelper } from '@tanstack/react-table'\nimport { Table } from 'components/Table'\nimport { Cell } from 'components/Table/Cell'\nimport { Filter } from 'components/Table/Filter'\nimport { ClickableHeaderRow, FilterHeaderRow, HeaderArrow } from 'components/Table/styled'\nimport { getLocaleTimeString } from 'components/Table/utils'\nimport { supportedChainIdFromGQLChain, validateUrlChainParam } from 'graphql/data/util'\nimport { OrderDirection, Token, Transaction_OrderBy } from 'graphql/thegraph/__generated__/types-and-hooks'\nimport { PoolTransaction, PoolTransactionType, usePoolTransactions } from 'graphql/thegraph/PoolTransactions'\nimport { useActiveLocalCurrency } from 'hooks/useActiveLocalCurrency'\nimport { useActiveLocale } from 'hooks/useActiveLocale'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport { useCallback, useMemo, useReducer, useRef, useState } from 'react'\nimport { ExternalLink as ExternalLinkIcon } from 'react-feather'\nimport { useParams } from 'react-router-dom'\nimport styled, { useTheme } from 'styled-components'\nimport { ExternalLink, StyledInternalLink, ThemedText } from 'theme/components'\nimport { shortenAddress } from 'utils/addresses'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\nimport { ExplorerDataType, getExplorerLink } from 'utils/getExplorerLink'\n\nconst StyledExternalLink = styled(ExternalLink)`\n  color: ${({ theme }) => theme.neutral2};\n  stroke: ${({ theme }) => theme.neutral2};\n`\n\ntype PoolTxTableSortState = {\n  sortBy: Transaction_OrderBy\n  sortDirection: OrderDirection\n}\n\nexport function PoolDetailsTransactionsTable({\n  poolAddress,\n  token0,\n  token1,\n}: {\n  poolAddress: string\n  token0?: Token\n  token1?: Token\n}) {\n  const chainName = validateUrlChainParam(useParams<{ chainName?: string }>().chainName)\n  const chainId = supportedChainIdFromGQLChain(chainName)\n  const theme = useTheme()\n  const locale = useActiveLocale()\n  const activeLocalCurrency = useActiveLocalCurrency()\n  const { formatNumber, formatFiatPrice } = useFormatter()\n  const [filterModalIsOpen, toggleFilterModal] = useReducer((s) => !s, false)\n  const filterModalRef = useRef<HTMLDivElement>(null)\n  useOnClickOutside(filterModalRef, filterModalIsOpen ? toggleFilterModal : undefined)\n  const [filter, setFilters] = useState<PoolTransactionType[]>([\n    PoolTransactionType.BUY,\n    PoolTransactionType.SELL,\n    PoolTransactionType.BURN,\n    PoolTransactionType.MINT,\n  ])\n\n  const [sortState, setSortMethod] = useState<PoolTxTableSortState>({\n    sortBy: Transaction_OrderBy.Timestamp,\n    sortDirection: OrderDirection.Desc,\n  })\n  const { transactions, loading, loadMore, error } = usePoolTransactions(\n    poolAddress,\n    chainId,\n    sortState.sortBy,\n    sortState.sortDirection,\n    filter\n  )\n\n  const handleHeaderClick = useCallback(\n    (newSortMethod: Transaction_OrderBy) => {\n      if (sortState.sortBy === newSortMethod) {\n        setSortMethod({\n          sortBy: newSortMethod,\n          sortDirection: sortState.sortDirection === OrderDirection.Asc ? OrderDirection.Desc : OrderDirection.Asc,\n        })\n      } else {\n        setSortMethod({\n          sortBy: newSortMethod,\n          sortDirection: OrderDirection.Desc,\n        })\n      }\n    },\n    [sortState.sortBy, sortState.sortDirection]\n  )\n\n  const columns = useMemo(() => {\n    const columnHelper = createColumnHelper<PoolTransaction>()\n    return [\n      columnHelper.accessor((row) => row.timestamp, {\n        id: 'timestamp',\n        header: () => (\n          <Cell minWidth={150} justifyContent=\"flex-start\">\n            <ClickableHeaderRow $justify=\"flex-start\" onClick={() => handleHeaderClick(Transaction_OrderBy.Timestamp)}>\n              {sortState.sortBy === Transaction_OrderBy.Timestamp && (\n                <HeaderArrow direction={sortState.sortDirection} />\n              )}\n              <ThemedText.BodySecondary>\n                <Trans>Time</Trans>\n              </ThemedText.BodySecondary>\n            </ClickableHeaderRow>\n          </Cell>\n        ),\n        cell: (timestamp) => (\n          <Cell loading={loading} minWidth={150} justifyContent=\"flex-start\">\n            <ThemedText.BodySecondary>\n              {getLocaleTimeString(Number(timestamp.getValue?.()) * 1000, locale)}\n            </ThemedText.BodySecondary>\n          </Cell>\n        ),\n      }),\n      columnHelper.accessor(\n        (row) => {\n          let color, text\n          if (row.type === PoolTransactionType.BUY || row.type === PoolTransactionType.SELL) {\n            // Determine which of token0 and token1 is the input and which is the output token\n            const [tokenIn, tokenOut] =\n              row.amount0 > 0 ? [row.pool.token0, row.pool.token1] : [row.pool.token1, row.pool.token0]\n            // If swap is exactIn, tx type is Sell tokenIn, otherwise Buy tokenOut\n            color = row.isExactIn ? 'critical' : 'success'\n            text = row.isExactIn ? (\n              <span>\n                <Trans>Sell</Trans>&nbsp;{tokenIn.symbol}\n              </span>\n            ) : (\n              <span>\n                <Trans>Buy</Trans>&nbsp;{tokenOut.symbol}\n              </span>\n            )\n          } else {\n            color = row.type === PoolTransactionType.MINT ? 'success' : 'critical'\n            text = row.type === PoolTransactionType.MINT ? <Trans>Add</Trans> : <Trans>Remove</Trans>\n          }\n          return <ThemedText.BodyPrimary color={color}>{text}</ThemedText.BodyPrimary>\n        },\n        {\n          id: 'swap-type',\n          header: () => (\n            <Cell minWidth={100} justifyContent=\"flex-start\">\n              <FilterHeaderRow modalOpen={filterModalIsOpen} onClick={() => toggleFilterModal()} ref={filterModalRef}>\n                <Filter\n                  allFilters={Object.values(PoolTransactionType)}\n                  activeFilter={filter}\n                  setFilters={setFilters}\n                  isOpen={filterModalIsOpen}\n                />\n                <ThemedText.BodySecondary>\n                  <Trans>Type</Trans>\n                </ThemedText.BodySecondary>\n              </FilterHeaderRow>\n            </Cell>\n          ),\n          cell: (poolTransactionType) => (\n            <Cell loading={loading} minWidth={100} justifyContent=\"flex-start\">\n              {poolTransactionType.getValue?.()}\n            </Cell>\n          ),\n        }\n      ),\n      columnHelper.accessor((row) => row.amountUSD, {\n        id: 'fiat-value',\n        header: () => (\n          <Cell minWidth={125} justifyContent=\"flex-end\" grow>\n            <ThemedText.BodySecondary>\n              <Trans>{activeLocalCurrency}</Trans>\n            </ThemedText.BodySecondary>\n          </Cell>\n        ),\n        cell: (fiat) => (\n          <Cell loading={loading} minWidth={125} justifyContent=\"flex-end\" grow>\n            <ThemedText.BodyPrimary>{formatFiatPrice({ price: fiat.getValue?.() })}</ThemedText.BodyPrimary>\n          </Cell>\n        ),\n      }),\n      columnHelper.accessor(\n        (row) => (row.pool.token0.id.toLowerCase() === token0?.id.toLowerCase() ? row.amount0 : row.amount1),\n        {\n          id: 'input-amount',\n          header: () => (\n            <Cell loading={loading} minWidth={125} justifyContent=\"flex-end\" grow>\n              <StyledInternalLink to={`/explore/tokens/${chainName.toLowerCase()}/${token0?.id}`}>\n                <ThemedText.BodySecondary>{token0?.symbol}</ThemedText.BodySecondary>\n              </StyledInternalLink>\n            </Cell>\n          ),\n          cell: (inputTokenAmount) => (\n            <Cell loading={loading} minWidth={125} justifyContent=\"flex-end\" grow>\n              <ThemedText.BodyPrimary>\n                {formatNumber({ input: Math.abs(inputTokenAmount.getValue?.() ?? 0), type: NumberType.TokenTx })}\n              </ThemedText.BodyPrimary>\n            </Cell>\n          ),\n        }\n      ),\n      columnHelper.accessor(\n        (row) => (row.pool.token0.id.toLowerCase() === token0?.id.toLowerCase() ? row.amount1 : row.amount0),\n        {\n          id: 'output-amount',\n          header: () => (\n            <Cell loading={loading} minWidth={125} justifyContent=\"flex-end\" grow>\n              <StyledInternalLink to={`/explore/tokens/${chainName.toLowerCase()}/${token1?.id}`}>\n                <ThemedText.BodySecondary>{token1?.symbol}</ThemedText.BodySecondary>\n              </StyledInternalLink>\n            </Cell>\n          ),\n          cell: (outputTokenAmount) => (\n            <Cell loading={loading} minWidth={125} justifyContent=\"flex-end\" grow>\n              <ThemedText.BodyPrimary>\n                {formatNumber({ input: Math.abs(outputTokenAmount.getValue?.() ?? 0), type: NumberType.TokenTx })}\n              </ThemedText.BodyPrimary>\n            </Cell>\n          ),\n        }\n      ),\n      columnHelper.accessor((row) => row.maker, {\n        id: 'maker-address',\n        header: () => (\n          <Cell minWidth={100} justifyContent=\"flex-end\" grow>\n            <ThemedText.BodySecondary>\n              <Trans>Wallet</Trans>\n            </ThemedText.BodySecondary>\n          </Cell>\n        ),\n        cell: (makerAddress) => (\n          <Cell loading={loading} minWidth={100} justifyContent=\"flex-end\" grow>\n            <StyledExternalLink href={getExplorerLink(chainId, makerAddress.getValue?.(), ExplorerDataType.ADDRESS)}>\n              <ThemedText.BodyPrimary>{shortenAddress(makerAddress.getValue?.(), 0)}</ThemedText.BodyPrimary>\n            </StyledExternalLink>\n          </Cell>\n        ),\n      }),\n      columnHelper.accessor((row) => getExplorerLink(chainId, row.transaction, ExplorerDataType.TRANSACTION), {\n        id: 'etherscan-link',\n        header: () => (\n          <Cell minWidth={32} justifyContent=\"flex-end\">\n            <ThemedText.BodySecondary>\n              <Trans>Tx</Trans>\n            </ThemedText.BodySecondary>\n          </Cell>\n        ),\n        cell: (explorerLink) => (\n          <Cell loading={loading} minWidth={32} justifyContent=\"flex-end\">\n            <StyledExternalLink href={explorerLink.getValue?.()} data-testid={explorerLink.getValue?.()}>\n              <ExternalLinkIcon size=\"16px\" stroke={theme.neutral1} />\n            </StyledExternalLink>\n          </Cell>\n        ),\n      }),\n    ]\n  }, [\n    activeLocalCurrency,\n    chainId,\n    chainName,\n    filter,\n    filterModalIsOpen,\n    formatFiatPrice,\n    formatNumber,\n    handleHeaderClick,\n    loading,\n    locale,\n    sortState.sortBy,\n    sortState.sortDirection,\n    theme.neutral1,\n    token0?.id,\n    token0?.symbol,\n    token1?.id,\n    token1?.symbol,\n  ])\n\n  if (error) {\n    return <Trans>Error fetching Pool Transactions</Trans>\n  }\n\n  return (\n    <div data-testid=\"pool-details-transactions-table\">\n      <Table columns={columns} data={transactions} loading={loading} loadMore={loadMore} maxHeight={600} />\n    </div>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Pool } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport useMultiChainPositions from 'components/AccountDrawer/MiniPortfolio/Pools/useMultiChainPositions'\nimport Column from 'components/Column'\nimport { PoolDetailsPositionsTable } from 'components/Pools/PoolDetails/PoolDetailsPositionsTable'\nimport Row from 'components/Row'\nimport { supportedChainIdFromGQLChain, validateUrlChainParam } from 'graphql/data/util'\nimport { Token } from 'graphql/thegraph/__generated__/types-and-hooks'\nimport { useMemo, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ClickableStyle, ThemedText } from 'theme/components'\n\nimport { PoolDetailsTransactionsTable } from './PoolDetailsTransactionsTable'\n\nenum PoolDetailsTableTabs {\n  TRANSACTIONS = 'transactions',\n  POSITIONS = 'positions',\n}\n\nconst TableHeader = styled(ThemedText.HeadlineMedium)<{ active: boolean }>`\n  color: ${({ theme, active }) => !active && theme.neutral2};\n  ${({ disabled }) => !disabled && ClickableStyle}\n  user-select: none;\n`\n\nexport function PoolDetailsTableTab({\n  poolAddress,\n  token0,\n  token1,\n}: {\n  poolAddress: string\n  token0?: Token\n  token1?: Token\n}) {\n  const [activeTable, setActiveTable] = useState<PoolDetailsTableTabs>(PoolDetailsTableTabs.TRANSACTIONS)\n  const chainName = validateUrlChainParam(useParams<{ chainName?: string }>().chainName)\n  const chainId = supportedChainIdFromGQLChain(chainName)\n  const { account } = useWeb3React()\n  const { positions } = useMultiChainPositions(account ?? '', [chainId])\n  const positionsInThisPool = useMemo(\n    () =>\n      positions?.filter(\n        (position) =>\n          Pool.getAddress(position.pool.token0, position.pool.token1, position.pool.fee).toLowerCase() ===\n          poolAddress.toLowerCase()\n      ) ?? [],\n    [poolAddress, positions]\n  )\n  return (\n    <Column gap=\"lg\">\n      <Row gap=\"16px\">\n        <TableHeader\n          active={activeTable === PoolDetailsTableTabs.TRANSACTIONS}\n          onClick={() => setActiveTable(PoolDetailsTableTabs.TRANSACTIONS)}\n          disabled={!positionsInThisPool.length}\n        >\n          <Trans>Transactions</Trans>\n        </TableHeader>\n        {Boolean(positionsInThisPool.length) && (\n          <TableHeader\n            active={activeTable === PoolDetailsTableTabs.POSITIONS}\n            onClick={() => setActiveTable(PoolDetailsTableTabs.POSITIONS)}\n          >\n            <Trans>Positions</Trans>\n            {` (${positionsInThisPool?.length})`}\n          </TableHeader>\n        )}\n      </Row>\n      {activeTable === PoolDetailsTableTabs.TRANSACTIONS ? (\n        <PoolDetailsTransactionsTable poolAddress={poolAddress} token0={token0} token1={token1} />\n      ) : (\n        <PoolDetailsPositionsTable positions={positionsInThisPool} />\n      )}\n    </Column>\n  )\n}\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCandlestickChartIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.41667 15.5H7.58333C6.75 15.5 6.33333 15.0833 6.33333 14.25V1.75C6.33333 0.916667 6.75 0.5 7.58333 0.5H8.41667C9.25 0.5 9.66667 0.916667 9.66667 1.75V14.25C9.66667 15.0833 9.25 15.5 8.41667 15.5ZM15.5 8.83333V3.83333C15.5 3 15.0833 2.58333 14.25 2.58333H13.4167C12.5833 2.58333 12.1667 3 12.1667 3.83333V8.83333C12.1667 9.66667 12.5833 10.0833 13.4167 10.0833H14.25C15.0833 10.0833 15.5 9.66667 15.5 8.83333ZM3.83333 10.9167V7.58333C3.83333 6.75 3.41667 6.33333 2.58333 6.33333H1.75C0.916667 6.33333 0.5 6.75 0.5 7.58333V10.9167C0.5 11.75 0.916667 12.1667 1.75 12.1667H2.58333C3.41667 12.1667 3.83333 11.75 3.83333 10.9167Z\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCandlestickChartIcon);\nexport default __webpack_public_path__ + \"static/media/candlestick-chart-icon.7a641d46c17b62acbd75955585a586b8.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLineChartIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.02 9C23.02 10.104 22.124 11 21.02 11C20.738 11 20.47 10.94 20.226 10.835L16.855 14.2061C16.96 14.4501 17.021 14.717 17.021 15C17.021 16.104 16.125 17 15.021 17C13.917 17 13.016 16.104 13.016 15C13.016 14.727 13.071 14.467 13.17 14.229L9.787 10.8459C9.551 10.9439 9.292 10.999 9.021 10.999C8.739 10.999 8.471 10.939 8.22701 10.834L4.856 14.2051C4.961 14.4491 5.022 14.716 5.022 14.999C5.022 16.103 4.126 16.999 3.022 16.999C1.918 16.999 1.017 16.103 1.017 14.999C1.017 13.895 1.90699 12.999 3.01199 12.999H3.022C3.294 12.999 3.55199 13.0541 3.78799 13.1521L7.172 9.76807C7.073 9.53107 7.017 9.27102 7.017 8.99902C7.017 7.89502 7.90699 6.99902 9.01199 6.99902H9.022C10.126 6.99902 11.022 7.89502 11.022 8.99902C11.022 9.28102 10.962 9.54897 10.856 9.79297L14.224 13.1609C14.465 13.0569 14.731 12.999 15.011 12.999H15.021C15.293 12.999 15.551 13.0541 15.787 13.1521L19.171 9.76807C19.072 9.53107 19.016 9.27102 19.016 8.99902C19.016 7.89502 19.906 6.99902 21.011 6.99902H21.021C22.125 7.00002 23.02 7.896 23.02 9Z\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLineChartIcon);\nexport default __webpack_public_path__ + \"static/media/line-chart-icon.4459e03ec7bf02cdc1e94ea9a57d144e.svg\";\nexport { ForwardRef as ReactComponent };","import { Trans } from '@lingui/macro'\nimport { createRef, useLayoutEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\n\nconst togglePadding = 4\n\nconst OptionsSelector = styled.div`\n  display: flex;\n  position: relative;\n  justify-content: flex-end;\n  gap: 12px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  border-radius: 20px;\n  height: 40px;\n  padding: ${togglePadding}px;\n  width: fit-content;\n`\n\ninterface ActivePillStyle {\n  left?: string\n  width?: string\n  transition?: string\n}\n\nconst ActivePill = styled.div`\n  position: absolute;\n  height: 30px;\n  background-color: ${({ theme }) => theme.surface3};\n  border-radius: 15px;\n  transition: left 0.3s ease, width 0.3s ease;\n`\nconst OptionButton = styled.button<{ active: boolean }>`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: transparent;\n  font-weight: 535;\n  font-size: 16px;\n  padding: 8px 12px;\n  border-radius: 15px;\n  line-height: 20px;\n  border: none;\n  cursor: pointer;\n  color: ${({ theme, active }) => (active ? theme.neutral1 : theme.neutral2)};\n  transition-duration: ${({ theme }) => theme.transition.duration.fast};\n  :hover {\n    ${({ active, theme }) => !active && `opacity: ${theme.opacity.hover};`}\n  }\n`\n\ninterface PillMultiToggleOption {\n  value: string // Value to be selected/stored, used as default display value\n  display?: JSX.Element // Optional custom display element\n}\n\nfunction getPillMultiToggleOption(option: PillMultiToggleOption | string): PillMultiToggleOption {\n  if (typeof option === 'string') {\n    return { value: option }\n  }\n  return option\n}\n\nexport default function PillMultiToggle({\n  options,\n  currentSelected,\n  onSelectOption,\n}: {\n  options: readonly (PillMultiToggleOption | string)[]\n  currentSelected: string\n  onSelectOption: (option: string) => void\n}) {\n  const buttonRefs = useMemo(() => options.map(() => createRef<HTMLButtonElement>()), [options])\n  const [buttonSizing, setButtonSizing] = useState<{ [option: string]: ActivePillStyle }>({})\n\n  // Do active pill width/left calculations\n  useLayoutEffect(() => {\n    const sizeMap = buttonRefs.reduce((acc, ref, index) => {\n      const current = ref.current\n      const { value } = getPillMultiToggleOption(options[index])\n\n      acc[value] = { width: (current?.offsetWidth ?? 0) + 'px', left: (current?.offsetLeft ?? 0) + 'px' }\n      return acc\n    }, {} as { [option: string]: ActivePillStyle })\n    setButtonSizing(sizeMap)\n  }, [options, buttonRefs])\n\n  return (\n    <OptionsSelector>\n      <ActivePill style={buttonSizing[currentSelected]} />\n      {options.map((option, i) => {\n        const { value, display } = getPillMultiToggleOption(option)\n        const ref = buttonRefs[i]\n        return (\n          <OptionButton ref={ref} key={value} active={currentSelected === value} onClick={() => onSelectOption(value)}>\n            {display ?? <Trans>{value}</Trans>}\n          </OptionButton>\n        )\n      })}\n    </OptionsSelector>\n  )\n}\n","import { ReactComponent as CandlestickChartIcon } from 'assets/svg/candlestick-chart-icon.svg'\nimport { ReactComponent as LineChartIcon } from 'assets/svg/line-chart-icon.svg'\nimport { PriceChartType } from 'components/Charts/utils'\nimport PillMultiToggle from 'components/Toggle/PillMultiToggle'\nimport { useTheme } from 'styled-components'\nimport { FadePresence } from 'theme/components/FadePresence'\n\nconst ADVANCED_PRICE_CHART_OPTIONS = [\n  { value: PriceChartType.LINE, display: <LineChartIcon /> },\n  { value: PriceChartType.CANDLESTICK, display: <CandlestickChartIcon /> },\n]\n\nexport const AdvancedPriceChartToggle = ({\n  currentChartType,\n  onChartTypeChange,\n}: {\n  currentChartType: PriceChartType\n  onChartTypeChange: (c: PriceChartType) => void\n}) => {\n  const theme = useTheme()\n  return (\n    <FadePresence $transitionDuration={theme.transition.duration.fast}>\n      <PillMultiToggle\n        options={ADVANCED_PRICE_CHART_OPTIONS}\n        currentSelected={currentChartType}\n        onSelectOption={onChartTypeChange as (c: string) => void}\n      />\n    </FadePresence>\n  )\n}\n","import { ApolloClient, NormalizedCacheObject } from '@apollo/client'\nimport ms from 'ms'\n\n// TODO(WEB-2878): See if splitQuery can be replaced with proper Apollo usage\n/**\n * Used to get large amounts of data when larger than the Apollo limit\n * Splits query into multiple queries and returns the combined data\n * @param query - the query to be split\n * @param localClient - Apollo client for a specific chain\n * @param vars - any variables that are passed in every query\n * @param values - the keys that are used as the values to map over if\n * @param skipCount - amount of entities to skip per query\n */\nexport async function splitQuery<Type extends object>(\n  query: any,\n  client: ApolloClient<NormalizedCacheObject>,\n  vars: any[],\n  values: any[],\n  skipCount = 1000\n) {\n  let fetchedData = {}\n  let allFound = false\n  let skip = 0\n  try {\n    while (!allFound) {\n      let end = values.length\n      if (skip + skipCount < values.length) {\n        end = skip + skipCount\n      }\n      const sliced = values.slice(skip, end)\n      const result = await client.query<Type>({\n        query: query(...vars, sliced),\n        fetchPolicy: 'network-only',\n      })\n      fetchedData = {\n        ...fetchedData,\n        ...result.data,\n      }\n      if (Object.keys(result.data).length < skipCount || skip + skipCount > values.length) {\n        allFound = true\n      } else {\n        skip += skipCount\n      }\n    }\n    return fetchedData\n  } catch (e) {\n    console.log(e)\n    return undefined\n  }\n}\n\n/**\n * Get the 24hr, 48hr, and 1 week ago timestamps\n * @returns [t24, t48, tWeek]\n */\nexport function useDeltaTimestamps(): [number, number, number] {\n  const utcCurrentTime = Date.now()\n  const t24 = Math.floor((utcCurrentTime - ms('1d')) / 1000)\n  const t48 = Math.floor((utcCurrentTime - ms('2d')) / 1000)\n  const tWeek = Math.floor((utcCurrentTime - ms('7d')) / 1000)\n  return [t24, t48, tWeek]\n}\n\n/**\n * gets the amount difference plus the % change in change itself (second order change)\n * @param {*} valueNow\n * @param {*} value24HoursAgo\n * @param {*} value48HoursAgo\n */\nexport const get2DayChange = (valueNow: string, value24HoursAgo: string, value48HoursAgo: string): [number, number] => {\n  // get volume info for both 24 hour periods\n  const currentChange = parseFloat(valueNow) - parseFloat(value24HoursAgo)\n  const previousChange = parseFloat(value24HoursAgo) - parseFloat(value48HoursAgo)\n  const adjustedPercentChange = ((currentChange - previousChange) / previousChange) * 100\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\n    return [currentChange, 0]\n  }\n  return [currentChange, adjustedPercentChange]\n}\n","import { ChainId } from '@uniswap/sdk-core'\nimport { START_BLOCKS } from 'constants/chainInfo'\nimport gql from 'graphql-tag'\nimport { useEffect, useMemo, useState } from 'react'\n\nimport { chainToApolloBlockClient } from './apollo'\nimport { splitQuery } from './utils'\n\nconst GET_BLOCKS = (timestamps: string[]) => {\n  let queryString = 'query blocks {'\n  queryString += timestamps.map((timestamp) => {\n    return `t${timestamp}:blocks(first: 1, orderBy: timestamp, orderDirection: desc, where: { timestamp_gt: ${timestamp}, timestamp_lt: ${\n      timestamp + 600\n    } }) {\n        number\n      }`\n  })\n  queryString += '}'\n  return gql(queryString)\n}\n\n/**\n * for a given array of timestamps, returns block entities\n * @param timestamps\n */\nexport function useBlocksFromTimestamps(\n  timestamps: number[],\n  chainId: ChainId\n): {\n  blocks?: {\n    timestamp: string\n    number: any\n  }[]\n  error: boolean\n} {\n  const [blocks, setBlocks] = useState<any>()\n  const [error, setError] = useState(false)\n\n  const chainBlockClient = chainToApolloBlockClient[chainId]\n\n  // derive blocks based on active network\n  const networkBlocks = blocks?.[chainId]\nconsole.log(GET_BLOCKS, chainBlockClient, [], timestamps, \"<====timestampstimestamps\")\n  useEffect(() => {\n    async function fetchData() {\n      const results = await splitQuery(GET_BLOCKS, chainBlockClient, [], timestamps)\n\n      console.log(results, \"<====results\")\n      if (results) {\n        setBlocks({ ...(blocks ?? {}), [chainId]: results })\n      } else {\n        setError(true)\n      }\n    }\n    if (!networkBlocks && !error) {\n      fetchData()\n    }\n  },[])\n\n  const blocksFormatted = useMemo(() => {\n    if (blocks?.[chainId]) {\n      const networkBlocks = blocks?.[chainId]\n      const formatted = []\n      for (const t in networkBlocks) {\n        if (networkBlocks[t].length > 0) {\n          const number = networkBlocks[t][0]['number']\n          const deploymentBlock = START_BLOCKS[chainId]\n          const adjustedNumber = number > deploymentBlock ? number : deploymentBlock\n\n          formatted.push({\n            timestamp: t.split('t')[1],\n            number: adjustedNumber,\n          })\n        }\n      }\n      return formatted\n    }\n    return undefined\n  }, [chainId, blocks])\n\n  return {\n    blocks: blocksFormatted,\n    error,\n  }\n}\n","import { ChainId } from '@uniswap/sdk-core'\nimport gql from 'graphql-tag'\nimport { useMemo } from 'react'\n\nimport { Pool, Token, usePoolDataQuery } from './__generated__/types-and-hooks'\nimport { chainToApolloClient } from './apollo'\nimport { useBlocksFromTimestamps } from './useBlocksFromTimestamps'\nimport { get2DayChange, useDeltaTimestamps } from './utils'\n\ngql`\n  query PoolData($poolId: [ID!], $block: Block_height = null) {\n    pools(\n      where: { id_in: $poolId }\n      block: $block\n      orderBy: totalValueLockedUSD\n      orderDirection: desc\n      subgraphError: allow\n    ) {\n      id\n      feeTier\n      liquidity\n      sqrtPrice\n      tick\n      token0 {\n        id\n        symbol\n        name\n        decimals\n        derivedETH\n      }\n      token1 {\n        id\n        symbol\n        name\n        decimals\n        derivedETH\n      }\n      token0Price\n      token1Price\n      volumeUSD\n      volumeToken0\n      volumeToken1\n      txCount\n      totalValueLockedToken0\n      totalValueLockedToken1\n      totalValueLockedUSD\n    }\n    bundles(where: { id: \"1\" }) {\n      ethPriceUSD\n    }\n  }\n`\n\nexport interface PoolData {\n  // basic token info\n  address: string\n  feeTier: number\n\n  token0: Token\n\n  token1: Token\n\n  // for tick math\n  liquidity: number\n  sqrtPrice: number\n  tick: number\n\n  // volume\n  volumeUSD: number\n  volumeUSDChange: number\n  volumeUSD24H: number\n  volumeUSDWeek: number\n\n  // liquidity\n  tvlUSD: number\n  tvlUSDChange: number\n\n  // prices\n  token0Price: number\n  token1Price: number\n\n  // token amounts\n  tvlToken0: number\n  tvlToken1: number\n  txCount: string\n}\n\nexport function usePoolData(\n  poolAddress: string,\n  chainId?: ChainId\n): {\n  loading: boolean\n  error: boolean\n  data?: PoolData\n} {\n  const poolId = [poolAddress]\n  const apolloClient = chainToApolloClient[chainId || ChainId.MAINNET]\n\n  // get blocks from historic timestamps\n  const [t24, t48, tWeek] = useDeltaTimestamps()\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24, t48, tWeek], chainId || ChainId.MAINNET)\n\n\n  const [block24, block48, blockWeek] = blocks ?? []\n\n  const { loading, error, data } = usePoolDataQuery({\n    variables: { poolId },\n    client: apolloClient,\n    fetchPolicy: 'no-cache',\n  })\n\n\n\n\n  const {\n    loading: loading24,\n    error: error24,\n    data: data24,\n  } = usePoolDataQuery({\n    variables: { poolId, block: block24 && { number: parseFloat(block24.number) } },\n    client: apolloClient,\n    fetchPolicy: 'no-cache',\n  })\n\n\n\n  const {\n    loading: loading48,\n    error: error48,\n    data: data48,\n  } = usePoolDataQuery({\n    variables: { poolId, block: block48 && { number: parseFloat(block48.number) } },\n    client: apolloClient,\n    fetchPolicy: 'no-cache',\n  })\n  const {\n    loading: loadingWeek,\n    error: errorWeek,\n    data: dataWeek,\n  } = usePoolDataQuery({\n    variables: { poolId, block: blockWeek && { number: parseFloat(blockWeek.number) } },\n    client: apolloClient,\n    fetchPolicy: 'no-cache',\n  })\n\n\n\n  return useMemo(() => {\n    const anyError = Boolean(error || error24 || error48 || errorWeek)\n    const anyLoading = Boolean(loading || loading24 || loading48 || loadingWeek)\n\n    // return early if not all data yet\n    if (anyError || anyLoading) {\n      return {\n        loading: anyLoading,\n        error: anyError,\n        data: undefined,\n      }\n    }\n\n    // format data and calculate daily changes\n    const current: Pool | undefined = data?.pools[0] as Pool\n    const oneDay: Pool | undefined = data24?.pools[0] as Pool\n    const twoDay: Pool | undefined = data48?.pools[0] as Pool\n    const week: Pool | undefined = dataWeek?.pools[0] as Pool\n\n    const ethPriceUSD = data?.bundles?.[0]?.ethPriceUSD ? parseFloat(data?.bundles?.[0]?.ethPriceUSD) : 0\n\n    const [volumeUSD, volumeUSDChange] =\n      current && oneDay && twoDay\n        ? get2DayChange(current.volumeUSD, oneDay.volumeUSD, twoDay.volumeUSD)\n        : current\n        ? [parseFloat(current.volumeUSD), 0]\n        : [0, 0]\n\n    const volumeUSDWeek =\n      current && week\n        ? parseFloat(current.volumeUSD) - parseFloat(week.volumeUSD)\n        : current\n        ? parseFloat(current.volumeUSD)\n        : 0\n\n    const volumeUSD24H =\n      current && oneDay\n        ? parseFloat(current.volumeUSD) - parseFloat(oneDay.volumeUSD)\n        : current\n        ? parseFloat(current.volumeUSD)\n        : 0\n\n    // Hotifx: Subtract fees from TVL to correct data while subgraph is fixed.\n    /**\n     * Note: see issue desribed here https://github.com/Uniswap/v3-subgraph/issues/74\n     * During subgraph deploy switch this month we lost logic to fix this accounting.\n     * Grafted sync pending fix now.\n     * Verified that this hotfix is still required as of 2023-09-13\n     * TODO(DAT-139): Diagnose and address subgraph issue that requires this hotfix\n     */\n    const feePercent = current ? parseFloat(current.feeTier) / 10000 / 100 : 0\n    const tvlAdjust0 = current?.volumeToken0 ? (parseFloat(current.volumeToken0) * feePercent) / 2 : 0\n    const tvlAdjust1 = current?.volumeToken1 ? (parseFloat(current.volumeToken1) * feePercent) / 2 : 0\n    const tvlToken0 = current ? parseFloat(current.totalValueLockedToken0) - tvlAdjust0 : 0\n    const tvlToken1 = current ? parseFloat(current.totalValueLockedToken1) - tvlAdjust1 : 0\n    let tvlUSD = current ? parseFloat(current.totalValueLockedUSD) : 0\n\n    const tvlUSDChange =\n      current && oneDay\n        ? ((parseFloat(current.totalValueLockedUSD) - parseFloat(oneDay.totalValueLockedUSD)) /\n            parseFloat(oneDay.totalValueLockedUSD === '0' ? '1' : oneDay.totalValueLockedUSD)) *\n          100\n        : 0\n\n    // Part of TVL fix\n    const tvlUpdated = current\n      ? tvlToken0 * parseFloat(current.token0.derivedETH) * ethPriceUSD +\n        tvlToken1 * parseFloat(current.token1.derivedETH) * ethPriceUSD\n      : undefined\n    if (tvlUpdated) {\n      tvlUSD = tvlUpdated\n    }\n\n    return {\n      data: current\n        ? {\n            ...current,\n            address: poolAddress,\n            volumeUSD,\n            volumeUSDChange,\n            volumeUSDWeek,\n            volumeUSD24H,\n            tvlUSD,\n            tvlUSDChange,\n            tvlToken0,\n            tvlToken1,\n            tick: parseFloat(current.tick),\n          }\n        : undefined,\n      error: anyError,\n      loading: anyLoading,\n    }\n  }, [\n    blockError,\n    data?.bundles,\n    data?.pools,\n    data24?.pools,\n    data48?.pools,\n    dataWeek?.pools,\n    error,\n    error24,\n    error48,\n    errorWeek,\n    loading,\n    loading24,\n    loading48,\n    loadingWeek,\n    poolAddress,\n  ])\n}\n","import { Trans } from '@lingui/macro'\nimport { ChartType, PriceChartType } from 'components/Charts/utils'\nimport Column from 'components/Column'\nimport ChartSection, {\n  PDP_CHART_SELECTOR_OPTIONS,\n  PoolsDetailsChartType,\n} from 'components/Pools/PoolDetails/ChartSection'\nimport { PoolDetailsBreadcrumb, PoolDetailsHeader } from 'components/Pools/PoolDetails/PoolDetailsHeader'\nimport { PoolDetailsLink } from 'components/Pools/PoolDetails/PoolDetailsLink'\nimport { PoolDetailsStats } from 'components/Pools/PoolDetails/PoolDetailsStats'\nimport { PoolDetailsStatsButtons } from 'components/Pools/PoolDetails/PoolDetailsStatsButtons'\nimport { PoolDetailsTableTab } from 'components/Pools/PoolDetails/PoolDetailsTable'\nimport Row from 'components/Row'\nimport { AdvancedPriceChartToggle } from 'components/Tokens/TokenDetails/ChartTypeSelectors/AdvancedPriceChartToggle'\nimport ChartTypeSelector from 'components/Tokens/TokenDetails/ChartTypeSelectors/ChartTypeSelector'\nimport { getValidUrlChainName, supportedChainIdFromGQLChain } from 'graphql/data/util'\nimport { usePoolData } from 'graphql/thegraph/PoolData'\nimport NotFound from 'pages/NotFound'\nimport { useReducer, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { isAddress } from 'utils'\n\nconst PageWrapper = styled(Row)`\n  padding: 48px;\n  width: 100%;\n  align-items: flex-start;\n  gap: 60px;\n\n  @media (max-width: ${BREAKPOINTS.lg - 1}px) {\n    flex-direction: column;\n    gap: unset;\n  }\n\n  @media (max-width: ${BREAKPOINTS.sm - 1}px) {\n    padding: 48px 16px;\n  }\n`\n\nconst LeftColumn = styled(Column)`\n  gap: 24px;\n  width: 65vw;\n  overflow: hidden;\n  justify-content: flex-start;\n\n  @media (max-width: ${BREAKPOINTS.lg - 1}px) {\n    width: 100%;\n  }\n`\n\nconst ChartTypeSelectorContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`\n\nconst HR = styled.hr`\n  border: 0.5px solid ${({ theme }) => theme.surface3};\n  margin: 16px 0px;\n  width: 100%;\n`\n\nconst RightColumn = styled(Column)`\n  gap: 24px;\n  margin: 0 48px 0 auto;\n  width: 22vw;\n  min-width: 360px;\n\n  @media (max-width: ${BREAKPOINTS.lg - 1}px) {\n    margin: 44px 0px;\n    width: 100%;\n    min-width: unset;\n  }\n`\n\nconst TokenDetailsWrapper = styled(Column)`\n  gap: 24px;\n  padding: 20px;\n\n  @media (max-width: ${BREAKPOINTS.lg - 1}px) and (min-width: ${BREAKPOINTS.sm}px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: unset;\n  }\n\n  @media (max-width: ${BREAKPOINTS.sm - 1}px) {\n    padding: unset;\n  }\n`\n\nconst TokenDetailsHeader = styled(Text)`\n  width: 100%;\n  font-size: 24px;\n  font-weight: 485;\n  line-height: 32px;\n`\n\nconst LinksContainer = styled(Column)`\n  gap: 16px;\n  width: 100%;\n`\n\nexport default function PoolDetailsPage() {\n  const { poolAddress, chainName } = useParams<{\n    poolAddress: string\n    chainName: string\n  }>()\n  const chain = getValidUrlChainName(chainName)\n  const chainId = chain && supportedChainIdFromGQLChain(chain)\n\n\n\n  const { data: poolData, loading } = usePoolData(poolAddress ?? '', chainId)\n  const [isReversed, toggleReversed] = useReducer((x) => !x, false)\n  const token0 = isReversed ? poolData?.token1 : poolData?.token0\n  const token1 = isReversed ? poolData?.token0 : poolData?.token1\n\n\n  const isInvalidPool = !chainName || !poolAddress || !getValidUrlChainName(chainName) || !isAddress(poolAddress)\n  const poolNotFound = (!loading && !poolData) || isInvalidPool\n  const [chartType, setChartType] = useState<PoolsDetailsChartType>(ChartType.VOLUME)\n  const [priceChartType, setPriceChartType] = useState<PriceChartType>(PriceChartType.LINE)\n\n  if (poolNotFound) return <NotFound />\n  return (\n    <PageWrapper>\n      <LeftColumn>\n        <Column gap=\"lg\">\n          <PoolDetailsBreadcrumb\n            chainId={chainId}\n            poolAddress={poolAddress}\n            token0={token0}\n            token1={token1}\n            loading={loading}\n          />\n          <Row justify=\"space-between\">\n            <PoolDetailsHeader\n              chainId={chainId}\n              token0={token0}\n              token1={token1}\n              feeTier={poolData?.feeTier}\n              toggleReversed={toggleReversed}\n              loading={loading}\n            />\n            <ChartTypeSelectorContainer>\n              {chartType === ChartType.VOLUME && (\n                <AdvancedPriceChartToggle currentChartType={priceChartType} onChartTypeChange={setPriceChartType} />\n              )}\n              {/* <ChartTypeSelector\n                options={PDP_CHART_SELECTOR_OPTIONS}\n                currentChartType={chartType}\n                onChartTypeChange={(c) => {\n                  setChartType(c)\n                  if (c === ChartType.PRICE) setPriceChartType(PriceChartType.LINE)\n                }}\n              /> */}\n            </ChartTypeSelectorContainer>\n          </Row>\n          <ChartSection\n            token0={token0}\n            token1={token1}\n            chartType={chartType}\n            priceChartType={priceChartType}\n            feeTier={poolData?.feeTier}\n            loading={loading}\n          />\n        </Column>\n        <HR />\n        <PoolDetailsTableTab poolAddress={poolAddress} token0={token0} token1={token1} />\n      </LeftColumn>\n      <RightColumn>\n        <PoolDetailsStatsButtons\n          chainId={chainId}\n          token0={token0}\n          token1={token1}\n          feeTier={poolData?.feeTier}\n          loading={loading}\n        />\n        <PoolDetailsStats poolData={poolData} isReversed={isReversed} chainId={chainId} loading={loading} />\n        <TokenDetailsWrapper>\n          <TokenDetailsHeader>\n            <Trans>Links</Trans>\n          </TokenDetailsHeader>\n          <LinksContainer>\n            <PoolDetailsLink address={poolAddress} chainId={chainId} tokens={[token0, token1]} loading={loading} />\n            <PoolDetailsLink address={token0?.id} chainId={chainId} tokens={[token0]} loading={loading} />\n            <PoolDetailsLink address={token1?.id} chainId={chainId} tokens={[token1]} loading={loading} />\n          </LinksContainer>\n        </TokenDetailsWrapper>\n      </RightColumn>\n    </PageWrapper>\n  )\n}\n"],"names":["_extends","Image","styled","img","Container","div","Header","PageWrapper","theme","breakpoint","md","NotFound","isDarkMode","useIsDarkMode","isMobile","useIsMobile","Title","ThemedText","LargeHeader","Hero","Paragraph","HeadlineMedium","HeadlineLarge","Trace","page","InterfacePageName","NOT_FOUND","shouldLogImpression","color","src","darkImage","lightImage","alt","SmallButtonPrimary","as","Link","to","PDP_CHART_HEIGHT_PX","TimePeriodSelectorContainer","ChartType","PRICE","VOLUME","LIQUIDITY","Z_INDEX","active","lg","xs","CHART_TYPE_COMPONENT_MAP","currencyA","currencyB","timePeriod","height","priceChartType","formatCurrencyAmount","formatPrice","useFormatter","priceQuery","useTokenPriceQuery","variables","toContractInput","duration","toHistoryDuration","prices","usePriceHistory","data","mockedPrices","useMemo","mockCandlestickData","params","type","stablecoinPrice","useStablecoinPrice","length","LoadingChart","lastPrice","Chart","Model","PriceChartModel","crosshairData","displayValue","currencyBAmountRaw","Math","floor","value","close","decimals","priceDisplay","symbol","amount","CurrencyAmount","fromRawAmount","price","ChartHeader","additionalFields","PriceChartDelta","startingPrice","endingPrice","valueFormatterType","NumberType","FiatTokenPrice","time","VolumeChart","ChartSection","props","setTimePeriod","useState","TimePeriod","DAY","useCurrency","token0","id","token1","mockVolumes","Array","keys","map","i","random","timestamp","loading","SelectedChart","chartType","selectedChartProps","volumes","ChartContainer","isInfoTDPEnabled","data-testid","TimePeriodSelector","onChangeTimePeriod","ExplorerIcon","svg","width","viewBox","fill","xmlns","path","d","TokenName","BodyPrimary","BREAKPOINTS","EllipsisStyle","TokenTextWrapper","Row","isClickable","ClickableStyle","SymbolText","neutral2","CopyAddress","surface3","StyledCopyIcon","Copy","ExplorerWrapper","ButtonsRow","PoolDetailsLink","address","chainId","tokens","useTheme","currencies","undefined","setCopied","useCopyClipboard","copy","useCallback","isPool","explorerUrl","getExplorerLink","ExplorerDataType","ADDRESS","TOKEN","navigate","useNavigate","isInfoExplorePageEnabled","useInfoExplorePageEnabled","chainName","chainIdToBackendName","handleTokenTextClick","getTokenDetailsURL","chain","align","onClick","DoubleCurrencyAndChainLogo","size","CurrencyLogo","currency","name","gap","ChevronRight","shortenAddress","ExternalLink","href","ChainId","MAINNET","EtherscanLogo","stroke","darkMode","padding","SmallDetailBubble","DetailBubble","$width","HeaderText","Text","StatsWrapper","Column","surface2","loaded","StatItemColumn","sm","PoolBalanceSymbols","PoolBalanceTokenNamesContainer","StyledLink","neutral1","leftBarChartStyles","css","rightBarChartStyles","BalanceChartSide","percent","$color","isLeft","StatSectionBubble","LoadingBubble","StatHeaderBubble","PoolBalanceTokenNames","token","screenIsNotLarge","useScreenSize","formatNumber","style","marginRight","input","tvl","TokenQuantityStats","marginLeft","PoolDetailsStats","poolData","isReversed","currency0","currency1","color0","useColor","color1","accent1","colors","blue400","fullWidth","tvlToken0","token0Price","tvlToken1","token0FullData","token1FullData","token1Price","BodySecondary","StatItem","title","tvlUSD","delta","tvlUSDChange","volumeUSD","volumeUSDChange","feeTier","from","_","StatsTextContainer","StatItemText","formatDelta","FiatTokenStats","DeltaArrow","PoolDetailsStatsButtonsRow","PoolButton","button","open","opacify","transition","medium","timing","inOut","SwapIcon","ReverseArrow","ButtonBubble","SwapModalWrapper","ease","SwapWrapperOuter","PoolDetailsStatsButtons","walletChainId","connector","account","useWeb3React","positions","userOwnedPositions","useMultiChainPositions","position","find","details","toLowerCase","fee","closed","findMatchingPosition","tokenId","switchChain","useSwitchChain","swapModalOpen","toggleSwapModalOpen","useReducer","state","addLiquidityHovered","toggleAddLiquidityHovered","X","fontWeight","async","currencyId","onMouseEnter","onMouseLeave","Plus","Swap","initialInputCurrency","initialOutputCurrency","disableTokenInputs","ClosedCircle","g","clipPath","strokeLinecap","strokeLinejoin","defs","rect","PositionTableWrapper","PositionWrapper","FeeTier","LabelMicro","StatusWrapper","status","PositionStatus","IN_RANGE","success","OUT_OF_RANGE","deprecated_accentWarning","RangeWrapper","StyledDoubleArrow","DoubleArrow","RangeText","Caption","StyledDot","PositionRow","positionInfo","formatTickPrice","inRange","CLOSED","priceUpper","token0PriceLower","invert","priceLower","token0PriceUpper","ticksAtLimit","LOWER","parseFloat","toFixed","UPPER","Number","MAX_SAFE_INTEGER","DoubleCurrencyLogo","SubHeader","pool","BIPS_BASE","AlertTriangle","atLimit","direction","Bound","PoolDetailsPositionsTable","index","countSignificantFigures","num","str","toString","noLeadingZeros","replace","includes","gql","PoolTransactionType","BUY","SELL","BURN","MINT","StyledExternalLink","PoolDetailsTransactionsTable","poolAddress","validateUrlChainParam","useParams","supportedChainIdFromGQLChain","locale","useActiveLocale","activeLocalCurrency","useActiveLocalCurrency","formatFiatPrice","filterModalIsOpen","toggleFilterModal","s","filterModalRef","useRef","useOnClickOutside","filter","setFilters","sortState","setSortMethod","sortBy","Transaction_OrderBy","Timestamp","sortDirection","OrderDirection","Desc","transactions","loadMore","error","orderBy","orderDirection","first","skip","apolloClient","chainToApolloClient","fetchMore","usePoolTransactionsQuery","client","loadingMore","onComplete","current","max","swaps","mints","burns","updateQuery","prev","fetchMoreResult","mergedData","tx","isExactIn","amount0","amount1","tokenIn","token0SigFigs","token1SigFigs","sort","a","b","transaction","maker","origin","amountUSD","usePoolTransactions","handleHeaderClick","newSortMethod","Asc","columns","columnHelper","createColumnHelper","accessor","row","header","Cell","minWidth","justifyContent","ClickableHeaderRow","$justify","HeaderArrow","cell","getLocaleTimeString","getValue","text","tokenOut","span","FilterHeaderRow","modalOpen","ref","Filter","allFilters","Object","values","activeFilter","isOpen","poolTransactionType","grow","fiat","StyledInternalLink","inputTokenAmount","abs","TokenTx","outputTokenAmount","makerAddress","TRANSACTION","explorerLink","ExternalLinkIcon","Table","maxHeight","PoolDetailsTableTabs","TRANSACTIONS","POSITIONS","TableHeader","disabled","PoolDetailsTableTab","activeTable","setActiveTable","positionsInThisPool","Pool","getAddress","Boolean","_path","assign","bind","target","arguments","source","key","prototype","hasOwnProperty","call","apply","this","SvgCandlestickChartIcon","_ref","svgRef","titleId","ForwardRef","SvgLineChartIcon","OptionsSelector","ActivePill","OptionButton","fast","opacity","hover","getPillMultiToggleOption","option","PillMultiToggle","options","currentSelected","onSelectOption","buttonRefs","createRef","buttonSizing","setButtonSizing","useLayoutEffect","sizeMap","reduce","acc","offsetWidth","left","offsetLeft","display","ADVANCED_PRICE_CHART_OPTIONS","PriceChartType","LINE","LineChartIcon","CANDLESTICK","CandlestickChartIcon","AdvancedPriceChartToggle","currentChartType","onChartTypeChange","FadePresence","$transitionDuration","get2DayChange","valueNow","value24HoursAgo","value48HoursAgo","currentChange","previousChange","adjustedPercentChange","isNaN","isFinite","GET_BLOCKS","timestamps","queryString","useBlocksFromTimestamps","blocks","setBlocks","setError","chainBlockClient","chainToApolloBlockClient","networkBlocks","console","log","useEffect","results","query","vars","skipCount","fetchedData","allFound","end","sliced","slice","result","fetchPolicy","e","splitQuery","fetchData","blocksFormatted","formatted","t","number","deploymentBlock","START_BLOCKS","adjustedNumber","push","split","usePoolData","poolId","t24","t48","tWeek","utcCurrentTime","Date","now","ms","useDeltaTimestamps","blockError","block24","block48","blockWeek","usePoolDataQuery","loading24","error24","data24","block","loading48","error48","data48","loadingWeek","errorWeek","dataWeek","anyError","anyLoading","pools","oneDay","twoDay","week","ethPriceUSD","bundles","volumeUSDWeek","volumeUSD24H","feePercent","tvlAdjust0","volumeToken0","tvlAdjust1","volumeToken1","totalValueLockedToken0","totalValueLockedToken1","totalValueLockedUSD","tvlUpdated","derivedETH","tick","LeftColumn","ChartTypeSelectorContainer","HR","hr","RightColumn","TokenDetailsWrapper","TokenDetailsHeader","LinksContainer","PoolDetailsPage","getValidUrlChainName","toggleReversed","x","isInvalidPool","isAddress","poolNotFound","setChartType","setPriceChartType","PoolDetailsBreadcrumb","justify","PoolDetailsHeader"],"sourceRoot":""}