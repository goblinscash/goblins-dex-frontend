{"version":3,"file":"static/js/5465.36edfc1f.chunk.js","mappings":"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","sources":["../../../node_modules/react-feather/dist/icons/inbox.js","components/CurrencyInputPanel/index.tsx","components/NavigationTabs/index.tsx","components/earn/styled.tsx","components/swap/UnsupportedCurrencyFooter.tsx","components/addLiquidity/OwnershipWarning.tsx","../../../node_modules/react-feather/dist/icons/cloud-off.js","../../../node_modules/react-feather/dist/icons/bar-chart-2.js","components/LiquidityChartRangeInput/Area.tsx","components/LiquidityChartRangeInput/AxisBottom.tsx","components/LiquidityChartRangeInput/svg.tsx","components/LiquidityChartRangeInput/Brush.tsx","components/LiquidityChartRangeInput/Line.tsx","../../../node_modules/react-feather/dist/icons/refresh-ccw.js","../../../node_modules/react-feather/dist/icons/zoom-in.js","../../../node_modules/react-feather/dist/icons/zoom-out.js","components/LiquidityChartRangeInput/Zoom.tsx","components/LiquidityChartRangeInput/Chart.tsx","utils/computeSurroundingTicks.ts","hooks/usePoolTickData.ts","components/LiquidityChartRangeInput/hooks.ts","components/LiquidityChartRangeInput/index.tsx","components/PositionPreview/index.tsx","components/RangeSelector/PresetsButtons.tsx","utils/approveAmountCalldata.ts","pages/AddLiquidity/Review.tsx","pages/AddLiquidity/index.tsx","hooks/useDerivedPositionInfo.ts","hooks/useArgentWalletContract.ts","pages/AddLiquidity/redirects.tsx","utils/addressesAreEquivalent.ts","utils/unwrappedToken.ts"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Inbox = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"22 12 16 12 14 15 10 15 8 12 2 12\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\"\n  }));\n});\nInbox.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nInbox.displayName = 'Inbox';\nexport default Inbox;","import { Trans } from '@lingui/macro'\nimport { BrowserEvent, InterfaceElementName, SwapEventName } from '@uniswap/analytics-events'\nimport { Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { Pair } from '@uniswap/v2-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { TraceEvent } from 'analytics'\nimport { LoadingOpacityContainer, loadingOpacityMixin } from 'components/Loader/styled'\nimport PrefetchBalancesWrapper from 'components/PrefetchBalancesWrapper/PrefetchBalancesWrapper'\nimport { isSupportedChain } from 'constants/chains'\nimport { darken } from 'polished'\nimport { ReactNode, useCallback, useState } from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ThemedText } from 'theme/components'\nimport { flexColumnNoWrap, flexRowNoWrap } from 'theme/styles'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\nimport { useCurrencyBalance } from '../../state/connection/hooks'\nimport { ButtonGray } from '../Button'\nimport DoubleCurrencyLogo from '../DoubleLogo'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { Input as NumericalInput } from '../NumericalInput'\nimport { RowBetween, RowFixed } from '../Row'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { FiatValue } from './FiatValue'\n\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  ${flexColumnNoWrap};\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '16px' : '20px')};\n  background-color: ${({ theme, hideInput }) => (hideInput ? 'transparent' : theme.surface2)};\n\n  z-index: 1;\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\n  transition: height 1s ease;\n  will-change: height;\n`\n\nconst Container = styled.div<{ hideInput: boolean; disabled: boolean }>`\n  border-radius: ${({ hideInput }) => (hideInput ? '16px' : '20px')};\n  border: 1px solid ${({ theme }) => theme.surface3};\n  background-color: ${({ theme }) => theme.surface2};\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\n  ${({ theme, hideInput, disabled }) =>\n    !disabled &&\n    `\n    :focus,\n    :hover {\n      border: 1px solid ${hideInput ? ' transparent' : theme.surface2};\n    }\n  `}\n`\n\nconst CurrencySelect = styled(ButtonGray)<{\n  visible: boolean\n  selected: boolean\n  hideInput?: boolean\n  disabled?: boolean\n  pointerEvents?: string\n}>`\n  align-items: center;\n  background-color: ${({ selected, theme }) => (selected ? theme.surface1 : theme.accent1)};\n  opacity: ${({ disabled }) => (!disabled ? 1 : 0.4)};\n  box-shadow: ${({ theme }) => theme.deprecated_shallowShadow};\n  color: ${({ selected, theme }) => (selected ? theme.neutral1 : theme.surface2)};\n  cursor: pointer;\n  border-radius: 16px;\n  outline: none;\n  user-select: none;\n  border: none;\n  font-size: 24px;\n  font-weight: 535;\n  height: ${({ hideInput }) => (hideInput ? '2.8rem' : '2.4rem')};\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\n  padding: 0 8px;\n  justify-content: space-between;\n  margin-left: ${({ hideInput }) => (hideInput ? '0' : '12px')};\n  :focus,\n  :hover {\n    background-color: ${({ selected, theme }) => (selected ? theme.surface2 : darken(0.05, theme.accent1))};\n  }\n  visibility: ${({ visible }) => (visible ? 'visible' : 'hidden')};\n  ${({ pointerEvents }) => pointerEvents && `pointer-events: none`}\n`\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  ${flexRowNoWrap};\n  align-items: center;\n  justify-content: space-between;\n  padding: ${({ selected }) => (selected ? ' 1rem 1rem 0.75rem 1rem' : '1rem 1rem 1rem 1rem')};\n`\n\nconst LabelRow = styled.div`\n  ${flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0 1rem 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.neutral2)};\n  }\n`\n\nconst FiatRow = styled(LabelRow)`\n  justify-content: flex-end;\n  padding: 0px 1rem 0.75rem;\n  height: 32px;\n`\n\n// note the line height 0 ensures even if we change font/font-size it doesn't break centering\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  line-height: 0px;\n`\n\nconst StyledDropDown = styled(DropDown)<{ selected: boolean }>`\n  margin: 0 0.25rem 0 0.35rem;\n  height: 35%;\n\n  path {\n    stroke: ${({ selected, theme }) => (selected ? theme.neutral1 : theme.white)};\n    stroke-width: 1.5px;\n  }\n`\n\nconst StyledTokenName = styled.span<{ active?: boolean }>`\n  ${({ active }) => (active ? '  margin: 0 0.25rem 0 0.25rem;' : '  margin: 0 0.25rem 0 0.25rem;')}\n  font-size: 20px;\n  white-space: nowrap;\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    font-size: 16px;\n  }\n`\n\nconst StyledBalanceMax = styled.button<{ disabled?: boolean }>`\n  background-color: transparent;\n  background-color: ${({ theme }) => theme.accent2};\n  border: none;\n  border-radius: 12px;\n  color: ${({ theme }) => theme.accent1};\n  cursor: pointer;\n  font-size: 11px;\n  font-weight: 535;\n  margin-left: 0.25rem;\n  opacity: ${({ disabled }) => (!disabled ? 1 : 0.4)};\n  padding: 4px 6px;\n  pointer-events: ${({ disabled }) => (!disabled ? 'initial' : 'none')};\n\n  :hover {\n    opacity: ${({ disabled }) => (!disabled ? 0.8 : 0.4)};\n  }\n\n  :focus {\n    outline: none;\n  }\n`\n\nconst StyledNumericalInput = styled(NumericalInput)<{ $loading: boolean }>`\n  ${loadingOpacityMixin};\n  text-align: left;\n`\n\nconst StyledPrefetchBalancesWrapper = styled(PrefetchBalancesWrapper)<{ $fullWidth: boolean }>`\n  width: ${({ $fullWidth }) => ($fullWidth ? '100%' : 'auto')};\n`\n\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: ReactNode\n  onCurrencySelect?: (currency: Currency) => void\n  currency?: Currency | null\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  fiatValue?: { data?: number; isLoading: boolean }\n  id: string\n  showCommonBases?: boolean\n  showCurrencyAmount?: boolean\n  disableNonToken?: boolean\n  renderBalance?: (amount: CurrencyAmount<Currency>) => ReactNode\n  locked?: boolean\n  loading?: boolean\n}\n\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  onCurrencySelect,\n  currency,\n  otherCurrency,\n  id,\n  showCommonBases,\n  showCurrencyAmount,\n  disableNonToken,\n  renderBalance,\n  fiatValue,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  locked = false,\n  loading = false,\n  ...rest\n}: CurrencyInputPanelProps) {\n  const [modalOpen, setModalOpen] = useState(false)\n  const { account, chainId } = useWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const theme = useTheme()\n  const { formatCurrencyAmount } = useFormatter()\n\n  const handleDismissSearch = useCallback(() => {\n    setModalOpen(false)\n  }, [setModalOpen])\n\n  const chainAllowed = isSupportedChain(chainId)\n\n  return (\n    <InputPanel id={id} hideInput={hideInput} {...rest}>\n      {!locked && (\n        <>\n          <Container hideInput={hideInput} disabled={!chainAllowed}>\n            <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={!onCurrencySelect}>\n              {!hideInput && (\n                <StyledNumericalInput\n                  className=\"token-amount-input\"\n                  value={value}\n                  onUserInput={onUserInput}\n                  disabled={!chainAllowed}\n                  $loading={loading}\n                />\n              )}\n\n              <StyledPrefetchBalancesWrapper shouldFetchOnAccountUpdate={modalOpen} $fullWidth={hideInput}>\n                <CurrencySelect\n                  disabled={!chainAllowed}\n                  visible={currency !== undefined}\n                  selected={!!currency}\n                  hideInput={hideInput}\n                  className=\"open-currency-select-button\"\n                  onClick={() => {\n                    if (onCurrencySelect) {\n                      setModalOpen(true)\n                    }\n                  }}\n                  pointerEvents={!onCurrencySelect ? 'none' : undefined}\n                >\n                  <Aligner>\n                    <RowFixed>\n                      {pair ? (\n                        <span style={{ marginRight: '0.5rem' }}>\n                          <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={24} margin={true} />\n                        </span>\n                      ) : (\n                        currency && <CurrencyLogo style={{ marginRight: '0.5rem' }} currency={currency} size=\"24px\" />\n                      )}\n                      {pair ? (\n                        <StyledTokenName className=\"pair-name-container\">\n                          {pair?.token0.symbol}:{pair?.token1.symbol}\n                        </StyledTokenName>\n                      ) : (\n                        <StyledTokenName\n                          className=\"token-symbol-container\"\n                          active={Boolean(currency && currency.symbol)}\n                        >\n                          {(currency && currency.symbol && currency.symbol.length > 20\n                            ? currency.symbol.slice(0, 4) +\n                              '...' +\n                              currency.symbol.slice(currency.symbol.length - 5, currency.symbol.length)\n                            : currency?.symbol) || <Trans>Select a token</Trans>}\n                        </StyledTokenName>\n                      )}\n                    </RowFixed>\n                    {onCurrencySelect && <StyledDropDown selected={!!currency} />}\n                  </Aligner>\n                </CurrencySelect>\n              </StyledPrefetchBalancesWrapper>\n            </InputRow>\n            {Boolean(!hideInput && !hideBalance && currency) && (\n              <FiatRow>\n                <RowBetween>\n                  <LoadingOpacityContainer $loading={loading}>\n                    {fiatValue && <FiatValue fiatValue={fiatValue} />}\n                  </LoadingOpacityContainer>\n                  {account && (\n                    <RowFixed style={{ height: '17px' }}>\n                      <ThemedText.DeprecatedBody\n                        onClick={onMax}\n                        color={theme.neutral3}\n                        fontWeight={535}\n                        fontSize={14}\n                        style={{ display: 'inline', cursor: 'pointer' }}\n                      >\n                        {Boolean(!hideBalance && currency && selectedCurrencyBalance) &&\n                          (renderBalance?.(selectedCurrencyBalance as CurrencyAmount<Currency>) || (\n                            <Trans>\n                              Balance:{' '}\n                              {formatCurrencyAmount({\n                                amount: selectedCurrencyBalance,\n                                type: NumberType.TokenNonTx,\n                              })}\n                            </Trans>\n                          ))}\n                      </ThemedText.DeprecatedBody>\n                      {Boolean(showMaxButton && selectedCurrencyBalance) && (\n                        <TraceEvent\n                          events={[BrowserEvent.onClick]}\n                          name={SwapEventName.SWAP_MAX_TOKEN_AMOUNT_SELECTED}\n                          element={InterfaceElementName.MAX_TOKEN_AMOUNT_BUTTON}\n                        >\n                          <StyledBalanceMax onClick={onMax}>\n                            <Trans>MAX</Trans>\n                          </StyledBalanceMax>\n                        </TraceEvent>\n                      )}\n                    </RowFixed>\n                  )}\n                </RowBetween>\n              </FiatRow>\n            )}\n          </Container>\n        </>\n      )}\n      {onCurrencySelect && (\n        <CurrencySearchModal\n          isOpen={modalOpen}\n          onDismiss={handleDismissSearch}\n          onCurrencySelect={onCurrencySelect}\n          selectedCurrency={currency}\n          otherSelectedCurrency={otherCurrency}\n          showCommonBases={showCommonBases}\n          showCurrencyAmount={showCurrencyAmount}\n          disableNonToken={disableNonToken}\n        />\n      )}\n    </InputPanel>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Percent } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport SettingsTab from 'components/Settings'\nimport { ReactNode } from 'react'\nimport { ArrowLeft } from 'react-feather'\nimport { Link, useLocation } from 'react-router-dom'\nimport { Box } from 'rebass'\nimport { useAppDispatch } from 'state/hooks'\nimport { resetMintState } from 'state/mint/actions'\nimport { resetMintState as resetMintV3State } from 'state/mint/v3/actions'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { flexRowNoWrap } from 'theme/styles'\n\nimport { RowBetween } from '../Row'\n\nconst Tabs = styled.div`\n  ${flexRowNoWrap};\n  align-items: center;\n  border-radius: 3rem;\n  justify-content: space-evenly;\n`\n\nconst StyledLink = styled(Link)<{ flex?: string }>`\n  flex: ${({ flex }) => flex ?? 'none'};\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    flex: none;\n    margin-right: 10px;\n  `};\n`\n\nconst FindPoolTabsText = styled(ThemedText.H1Small)`\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n`\n\nconst StyledArrowLeft = styled(ArrowLeft)`\n  color: ${({ theme }) => theme.neutral1};\n`\n\nexport function FindPoolTabs({ origin }: { origin: string }) {\n  return (\n    <Tabs>\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem', position: 'relative' }}>\n        <Link to={origin}>\n          <StyledArrowLeft />\n        </Link>\n        <FindPoolTabsText>\n          <Trans>Import V2 pool</Trans>\n        </FindPoolTabsText>\n      </RowBetween>\n    </Tabs>\n  )\n}\n\nconst AddRemoveTitleText = styled(ThemedText.H1Small)<{ $center: boolean }>`\n  flex: 1;\n  margin: auto;\n  text-align: ${({ $center }) => ($center ? 'center' : 'start')};\n`\n\nexport function AddRemoveTabs({\n  adding,\n  creating,\n  autoSlippage,\n  positionID,\n  children,\n}: {\n  adding: boolean\n  creating: boolean\n  autoSlippage: Percent\n  positionID?: string\n  showBackLink?: boolean\n  children?: ReactNode\n}) {\n  const { chainId } = useWeb3React()\n  const theme = useTheme()\n  // reset states on back\n  const dispatch = useAppDispatch()\n  const location = useLocation()\n\n  // detect if back should redirect to v3 or v2 pool page\n  const poolLink = location.pathname.includes('add/v2')\n    ? '/pools/v2'\n    : '/pools' + (positionID ? `/${positionID.toString()}` : '')\n\n  return (\n    <Tabs>\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem' }} align=\"center\">\n        <StyledLink\n          to={poolLink}\n          onClick={() => {\n            if (adding) {\n              // not 100% sure both of these are needed\n              dispatch(resetMintState())\n              dispatch(resetMintV3State())\n            }\n          }}\n          flex={children ? '1' : undefined}\n        >\n          <StyledArrowLeft stroke={theme.neutral2} />\n        </StyledLink>\n        <AddRemoveTitleText $center={!children}>\n          {creating ? (\n            <Trans>Create a pair</Trans>\n          ) : adding ? (\n            <Trans>Add liquidity</Trans>\n          ) : (\n            <Trans>Remove liquidity</Trans>\n          )}\n        </AddRemoveTitleText>\n        {children && <Box style={{ marginRight: '.5rem' }}>{children}</Box>}\n        <SettingsTab autoSlippage={autoSlippage} chainId={chainId} hideRoutingSettings />\n      </RowBetween>\n    </Tabs>\n  )\n}\n","import styled from 'styled-components'\n\nimport uImage from '../../assets/images/big_unicorn.png'\nimport noise from '../../assets/images/noise.png'\nimport xlUnicorn from '../../assets/images/xl_uni.png'\nimport { AutoColumn } from '../Column'\n\nexport const DataCard = styled(AutoColumn)<{ disabled?: boolean }>`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #2172e5 100%);\n  border-radius: 12px;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n`\n\nexport const CardBGImage = styled.span<{ desaturate?: boolean }>`\n  background: url(${uImage});\n  width: 1000px;\n  height: 600px;\n  position: absolute;\n  border-radius: 12px;\n  opacity: 0.4;\n  top: -100px;\n  left: -100px;\n  transform: rotate(-15deg);\n  user-select: none;\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`\n\nexport const CardBGImageSmaller = styled.span<{ desaturate?: boolean }>`\n  background: url(${xlUnicorn});\n  width: 1200px;\n  height: 1200px;\n  position: absolute;\n  border-radius: 12px;\n  top: -300px;\n  left: -300px;\n  opacity: 0.4;\n  user-select: none;\n\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`\n\nexport const CardNoise = styled.span`\n  background: url(${noise});\n  background-size: cover;\n  mix-blend-mode: overlay;\n  border-radius: 12px;\n  width: 100%;\n  height: 100%;\n  opacity: 0.15;\n  position: absolute;\n  top: 0;\n  left: 0;\n  user-select: none;\n`\n\nexport const CardSection = styled(AutoColumn)<{ disabled?: boolean }>`\n  padding: 1rem;\n  z-index: 1;\n  opacity: ${({ disabled }) => disabled && '0.4'};\n`\n\nexport const Break = styled.div`\n  width: 100%;\n  background-color: rgba(255, 255, 255, 0.2);\n  height: 1px;\n`\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { ButtonEmpty } from 'components/Button'\nimport Card, { OutlineCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport Modal from 'components/Modal'\nimport { AutoRow, RowBetween } from 'components/Row'\nimport { useState } from 'react'\nimport styled from 'styled-components'\nimport { CloseIcon, ExternalLink, ThemedText } from 'theme/components'\nimport { Z_INDEX } from 'theme/zIndex'\n\nimport { useUnsupportedTokens } from '../../hooks/Tokens'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\n\nconst DetailsFooter = styled.div<{ show: boolean }>`\n  padding-top: calc(16px + 2rem);\n  padding-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: -2rem;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.neutral2};\n  background-color: ${({ theme }) => theme.surface2};\n  z-index: ${Z_INDEX.deprecated_zero};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n  text-align: center;\n`\n\nconst StyledButtonEmpty = styled(ButtonEmpty)`\n  text-decoration: none;\n`\n\nconst AddressText = styled(ThemedText.DeprecatedBlue)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    font-size: 10px;\n`}\n`\n\nexport default function UnsupportedCurrencyFooter({\n  show,\n  currencies,\n}: {\n  show: boolean\n  currencies: (Currency | undefined | null)[]\n}) {\n  const { chainId } = useWeb3React()\n  const [showDetails, setShowDetails] = useState(false)\n\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return currency?.wrapped\n        })\n      : []\n\n  const unsupportedTokens = useUnsupportedTokens()\n\n  return (\n    <DetailsFooter show={show}>\n      <Modal isOpen={showDetails} onDismiss={() => setShowDetails(false)}>\n        <Card padding=\"2rem\">\n          <AutoColumn gap=\"lg\">\n            <RowBetween>\n              <ThemedText.DeprecatedMediumHeader>\n                <Trans>Unsupported assets</Trans>\n              </ThemedText.DeprecatedMediumHeader>\n              <CloseIcon onClick={() => setShowDetails(false)} data-testid=\"close-icon\" />\n            </RowBetween>\n            {tokens.map((token) => {\n              return (\n                token &&\n                unsupportedTokens &&\n                Object.keys(unsupportedTokens).includes(token.address) && (\n                  <OutlineCard key={token.address?.concat('not-supported')} data-testid=\"unsupported-token-card\">\n                    <AutoColumn gap=\"10px\">\n                      <AutoRow gap=\"5px\" align=\"center\">\n                        <CurrencyLogo currency={token} size=\"24px\" />\n                        <ThemedText.DeprecatedBody fontWeight={535}>{token.symbol}</ThemedText.DeprecatedBody>\n                      </AutoRow>\n                      {chainId && (\n                        <ExternalLink href={getExplorerLink(chainId, token.address, ExplorerDataType.ADDRESS)}>\n                          <AddressText>{token.address}</AddressText>\n                        </ExternalLink>\n                      )}\n                    </AutoColumn>\n                  </OutlineCard>\n                )\n              )\n            })}\n            <AutoColumn gap=\"lg\">\n              <ThemedText.DeprecatedBody fontWeight={535}>\n                <Trans>\n                  Some assets are not available through this interface because they may not work well with the smart\n                  contracts or we are unable to allow trading for legal reasons.\n                </Trans>\n              </ThemedText.DeprecatedBody>\n            </AutoColumn>\n          </AutoColumn>\n        </Card>\n      </Modal>\n      <StyledButtonEmpty padding=\"0\" onClick={() => setShowDetails(true)} data-testid=\"read-more-button\">\n        <ThemedText.DeprecatedBlue>\n          <Trans>Read more about unsupported assets</Trans>\n        </ThemedText.DeprecatedBlue>\n      </StyledButtonEmpty>\n    </DetailsFooter>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { AlertTriangle } from 'react-feather'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nconst ExplainerText = styled.div`\n  color: ${({ theme }) => theme.neutral2};\n`\nconst TitleRow = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  color: ${({ theme }) => theme.deprecated_accentWarning};\n  margin-bottom: 8px;\n`\nconst Wrapper = styled.div`\n  background-color: ${({ theme }) => theme.deprecated_accentWarningSoft};\n  border-radius: 16px;\n  margin-top: 12px;\n  max-width: 480px;\n  padding: 12px 20px;\n  width: 100%;\n`\n\ninterface OwnershipWarningProps {\n  ownerAddress: string\n}\n\nconst OwnershipWarning = ({ ownerAddress }: OwnershipWarningProps) => (\n  <Wrapper>\n    <TitleRow>\n      <AlertTriangle style={{ marginRight: '8px' }} />\n      <ThemedText.SubHeader color=\"deprecated_accentWarning\">\n        <Trans>Warning</Trans>\n      </ThemedText.SubHeader>\n    </TitleRow>\n    <ExplainerText>\n      <Trans>\n        You are not the owner of this LP position. You will not be able to withdraw the liquidity from this position\n        unless you own the following address: {ownerAddress}\n      </Trans>\n    </ExplainerText>\n  </Wrapper>\n)\n\nexport default OwnershipWarning\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar CloudOff = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"1\",\n    y1: \"1\",\n    x2: \"23\",\n    y2: \"23\"\n  }));\n});\nCloudOff.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nCloudOff.displayName = 'CloudOff';\nexport default CloudOff;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar BarChart2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"18\",\n    y1: \"20\",\n    x2: \"18\",\n    y2: \"10\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"20\",\n    x2: \"12\",\n    y2: \"4\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"6\",\n    y1: \"20\",\n    x2: \"6\",\n    y2: \"14\"\n  }));\n});\nBarChart2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nBarChart2.displayName = 'BarChart2';\nexport default BarChart2;","import { area, curveStepAfter, ScaleLinear } from 'd3'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport { ChartEntry } from './types'\n\nconst Path = styled.path<{ fill?: string }>`\n  opacity: 0.5;\n  stroke: ${({ fill, theme }) => fill ?? theme.accent1};\n  fill: ${({ fill, theme }) => fill ?? theme.accent1};\n`\n\nexport const Area = ({\n  series,\n  xScale,\n  yScale,\n  xValue,\n  yValue,\n  fill,\n}: {\n  series: ChartEntry[]\n  xScale: ScaleLinear<number, number>\n  yScale: ScaleLinear<number, number>\n  xValue: (d: ChartEntry) => number\n  yValue: (d: ChartEntry) => number\n  fill?: string\n}) =>\n  useMemo(\n    () => (\n      <Path\n        fill={fill}\n        d={\n          area()\n            .curve(curveStepAfter)\n            .x((d: unknown) => xScale(xValue(d as ChartEntry)))\n            .y1((d: unknown) => yScale(yValue(d as ChartEntry)))\n            .y0(yScale(0))(\n            series.filter((d) => {\n              const value = xScale(xValue(d))\n              return value > 0 && value <= window.innerWidth\n            }) as Iterable<[number, number]>\n          ) ?? undefined\n        }\n      />\n    ),\n    [fill, series, xScale, xValue, yScale, yValue]\n  )\n","import { Axis as d3Axis, axisBottom, NumberValue, ScaleLinear, select } from 'd3'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\n\nconst StyledGroup = styled.g`\n  line {\n    display: none;\n  }\n\n  text {\n    color: ${({ theme }) => theme.neutral2};\n    transform: translateY(5px);\n  }\n`\n\nconst Axis = ({ axisGenerator }: { axisGenerator: d3Axis<NumberValue> }) => {\n  const axisRef = (axis: SVGGElement) => {\n    axis &&\n      select(axis)\n        .call(axisGenerator)\n        .call((g) => g.select('.domain').remove())\n  }\n\n  return <g ref={axisRef} />\n}\n\nexport const AxisBottom = ({\n  xScale,\n  innerHeight,\n  offset = 0,\n}: {\n  xScale: ScaleLinear<number, number>\n  innerHeight: number\n  offset?: number\n}) =>\n  useMemo(\n    () => (\n      <StyledGroup transform={`translate(0, ${innerHeight + offset})`}>\n        <Axis axisGenerator={axisBottom(xScale).ticks(6)} />\n      </StyledGroup>\n    ),\n    [innerHeight, offset, xScale]\n  )\n","/**\n * Generates an SVG path for the east brush handle.\n * Apply `scale(-1, 1)` to generate west brush handle.\n *\n *    |```````\\\n *    |  | |  |\n *    |______/\n *    |\n *    |\n *    |\n *    |\n *    |\n *\n * https://medium.com/@dennismphil/one-side-rounded-rectangle-using-svg-fb31cf318d90\n */\nexport const brushHandlePath = (height: number) =>\n  [\n    // handle\n    `M 0 0`, // move to origin\n    `v ${height}`, // vertical line\n    'm 1 0', // move 1px to the right\n    `V 0`, // second vertical line\n    `M 0 1`, // move to origin\n\n    // head\n    'h 12', // horizontal line\n    'q 2 0, 2 2', // rounded corner\n    'v 22', // vertical line\n    'q 0 2 -2 2', // rounded corner\n    'h -12', // horizontal line\n    `z`, // close path\n  ].join(' ')\n\nexport const brushHandleAccentPath = () =>\n  [\n    'm 5 7', // move to first accent\n    'v 14', // vertical line\n    'M 0 0', // move to origin\n    'm 9 7', // move to second accent\n    'v 14', // vertical line\n    'z',\n  ].join(' ')\n\nexport const OffScreenHandle = ({\n  color,\n  size = 10,\n  margin = 10,\n}: {\n  color: string\n  size?: number\n  margin?: number\n}) => (\n  <polygon\n    points={`0 0, ${size} ${size}, 0 ${size}`}\n    transform={` translate(${size + margin}, ${margin}) rotate(45) `}\n    fill={color}\n    stroke={color}\n    strokeWidth=\"4\"\n    strokeLinejoin=\"round\"\n  />\n)\n","import { brushHandleAccentPath, brushHandlePath, OffScreenHandle } from 'components/LiquidityChartRangeInput/svg'\nimport { BrushBehavior, brushX, D3BrushEvent, ScaleLinear, select } from 'd3'\nimport usePrevious from 'hooks/usePrevious'\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport styled from 'styled-components'\n\nconst Handle = styled.path<{ color: string }>`\n  cursor: ew-resize;\n  pointer-events: none;\n\n  stroke-width: 3;\n  stroke: ${({ color }) => color};\n  fill: ${({ color }) => color};\n`\n\nconst HandleAccent = styled.path`\n  cursor: ew-resize;\n  pointer-events: none;\n\n  stroke-width: 1.5;\n  stroke: ${({ theme }) => theme.white};\n  opacity: ${({ theme }) => theme.opacity.hover};\n`\n\nconst LabelGroup = styled.g<{ visible: boolean }>`\n  opacity: ${({ visible }) => (visible ? '1' : '0')};\n  transition: opacity 300ms;\n`\n\nconst TooltipBackground = styled.rect`\n  fill: ${({ theme }) => theme.surface3};\n`\n\nconst Tooltip = styled.text`\n  text-anchor: middle;\n  font-size: 13px;\n  fill: ${({ theme }) => theme.neutral1};\n`\n\n// flips the handles draggers when close to the container edges\nconst FLIP_HANDLE_THRESHOLD_PX = 20\n\n// margin to prevent tick snapping from putting the brush off screen\nconst BRUSH_EXTENT_MARGIN_PX = 2\n\n/**\n * Returns true if every element in `a` maps to the\n * same pixel coordinate as elements in `b`\n */\nconst compare = (a: [number, number], b: [number, number], xScale: ScaleLinear<number, number>): boolean => {\n  // normalize pixels to 1 decimals\n  const aNorm = a.map((x) => xScale(x).toFixed(1))\n  const bNorm = b.map((x) => xScale(x).toFixed(1))\n  return aNorm.every((v, i) => v === bNorm[i])\n}\n\nexport const Brush = ({\n  id,\n  xScale,\n  interactive,\n  brushLabelValue,\n  brushExtent,\n  setBrushExtent,\n  innerWidth,\n  innerHeight,\n  westHandleColor,\n  eastHandleColor,\n}: {\n  id: string\n  xScale: ScaleLinear<number, number>\n  interactive: boolean\n  brushLabelValue: (d: 'w' | 'e', x: number) => string\n  brushExtent: [number, number]\n  setBrushExtent: (extent: [number, number], mode: string | undefined) => void\n  innerWidth: number\n  innerHeight: number\n  westHandleColor: string\n  eastHandleColor: string\n}) => {\n  const brushRef = useRef<SVGGElement | null>(null)\n  const brushBehavior = useRef<BrushBehavior<SVGGElement> | null>(null)\n\n  // only used to drag the handles on brush for performance\n  const [localBrushExtent, setLocalBrushExtent] = useState<[number, number] | null>(brushExtent)\n  const [showLabels, setShowLabels] = useState(false)\n  const [hovering, setHovering] = useState(false)\n\n  const previousBrushExtent = usePrevious(brushExtent)\n\n  const brushed = useCallback(\n    (event: D3BrushEvent<unknown>) => {\n      const { type, selection, mode } = event\n\n      if (!selection) {\n        setLocalBrushExtent(null)\n        return\n      }\n\n      const scaled = (selection as [number, number]).map(xScale.invert) as [number, number]\n\n      // avoid infinite render loop by checking for change\n      if (type === 'end' && !compare(brushExtent, scaled, xScale)) {\n        setBrushExtent(scaled, mode)\n      }\n\n      setLocalBrushExtent(scaled)\n    },\n    [xScale, brushExtent, setBrushExtent]\n  )\n\n  // keep local and external brush extent in sync\n  // i.e. snap to ticks on bruhs end\n  useEffect(() => {\n    setLocalBrushExtent(brushExtent)\n  }, [brushExtent])\n\n  // initialize the brush\n  useEffect(() => {\n    if (!brushRef.current) return\n\n    brushBehavior.current = brushX<SVGGElement>()\n      .extent([\n        [Math.max(0 + BRUSH_EXTENT_MARGIN_PX, xScale(0)), 0],\n        [innerWidth - BRUSH_EXTENT_MARGIN_PX, innerHeight],\n      ])\n      .handleSize(30)\n      .filter(() => interactive)\n      .on('brush end', brushed)\n\n    brushBehavior.current(select(brushRef.current))\n\n    if (previousBrushExtent && compare(brushExtent, previousBrushExtent, xScale)) {\n      select(brushRef.current)\n        .transition()\n        .call(brushBehavior.current.move as any, brushExtent.map(xScale))\n    }\n\n    // brush linear gradient\n    select(brushRef.current)\n      .selectAll('.selection')\n      .attr('stroke', 'none')\n      .attr('fill-opacity', '0.1')\n      .attr('fill', `url(#${id}-gradient-selection)`)\n  }, [brushExtent, brushed, id, innerHeight, innerWidth, interactive, previousBrushExtent, xScale])\n\n  // respond to xScale changes only\n  useEffect(() => {\n    if (!brushRef.current || !brushBehavior.current) return\n\n    brushBehavior.current.move(select(brushRef.current) as any, brushExtent.map(xScale) as any)\n  }, [brushExtent, xScale])\n\n  // show labels when local brush changes\n  useEffect(() => {\n    setShowLabels(true)\n    const timeout = setTimeout(() => setShowLabels(false), 1500)\n    return () => clearTimeout(timeout)\n  }, [localBrushExtent])\n\n  // variables to help render the SVGs\n  const flipWestHandle = localBrushExtent && xScale(localBrushExtent[0]) > FLIP_HANDLE_THRESHOLD_PX\n  const flipEastHandle = localBrushExtent && xScale(localBrushExtent[1]) > innerWidth - FLIP_HANDLE_THRESHOLD_PX\n\n  const showWestArrow = localBrushExtent && (xScale(localBrushExtent[0]) < 0 || xScale(localBrushExtent[1]) < 0)\n  const showEastArrow =\n    localBrushExtent && (xScale(localBrushExtent[0]) > innerWidth || xScale(localBrushExtent[1]) > innerWidth)\n\n  const westHandleInView =\n    localBrushExtent && xScale(localBrushExtent[0]) >= 0 && xScale(localBrushExtent[0]) <= innerWidth\n  const eastHandleInView =\n    localBrushExtent && xScale(localBrushExtent[1]) >= 0 && xScale(localBrushExtent[1]) <= innerWidth\n\n  return useMemo(\n    () => (\n      <>\n        <defs>\n          <linearGradient id={`${id}-gradient-selection`} x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"100%\">\n            <stop stopColor={westHandleColor} />\n            <stop stopColor={eastHandleColor} offset=\"1\" />\n          </linearGradient>\n\n          {/* clips at exactly the svg area */}\n          <clipPath id={`${id}-brush-clip`}>\n            <rect x=\"0\" y=\"0\" width={innerWidth} height={innerHeight} />\n          </clipPath>\n        </defs>\n\n        {/* will host the d3 brush */}\n        <g\n          ref={brushRef}\n          clipPath={`url(#${id}-brush-clip)`}\n          onMouseEnter={() => setHovering(true)}\n          onMouseLeave={() => setHovering(false)}\n        />\n\n        {/* custom brush handles */}\n        {localBrushExtent && (\n          <>\n            {/* west handle */}\n            {westHandleInView ? (\n              <g\n                transform={`translate(${Math.max(0, xScale(localBrushExtent[0]))}, 0), scale(${\n                  flipWestHandle ? '-1' : '1'\n                }, 1)`}\n              >\n                <g>\n                  <Handle color={westHandleColor} d={brushHandlePath(innerHeight)} />\n                  <HandleAccent d={brushHandleAccentPath()} />\n                </g>\n\n                <LabelGroup\n                  transform={`translate(50,0), scale(${flipWestHandle ? '1' : '-1'}, 1)`}\n                  visible={showLabels || hovering}\n                >\n                  <TooltipBackground y=\"0\" x=\"-30\" height=\"30\" width=\"60\" rx=\"8\" />\n                  <Tooltip transform=\"scale(-1, 1)\" y=\"15\" dominantBaseline=\"middle\">\n                    {brushLabelValue('w', localBrushExtent[0])}\n                  </Tooltip>\n                </LabelGroup>\n              </g>\n            ) : null}\n\n            {/* east handle */}\n            {eastHandleInView ? (\n              <g transform={`translate(${xScale(localBrushExtent[1])}, 0), scale(${flipEastHandle ? '-1' : '1'}, 1)`}>\n                <g>\n                  <Handle color={eastHandleColor} d={brushHandlePath(innerHeight)} />\n                  <HandleAccent d={brushHandleAccentPath()} />\n                </g>\n\n                <LabelGroup\n                  transform={`translate(50,0), scale(${flipEastHandle ? '-1' : '1'}, 1)`}\n                  visible={showLabels || hovering}\n                >\n                  <TooltipBackground y=\"0\" x=\"-30\" height=\"30\" width=\"60\" rx=\"8\" />\n                  <Tooltip y=\"15\" dominantBaseline=\"middle\">\n                    {brushLabelValue('e', localBrushExtent[1])}\n                  </Tooltip>\n                </LabelGroup>\n              </g>\n            ) : null}\n\n            {showWestArrow && <OffScreenHandle color={westHandleColor} />}\n\n            {showEastArrow && (\n              <g transform={`translate(${innerWidth}, 0) scale(-1, 1)`}>\n                <OffScreenHandle color={eastHandleColor} />\n              </g>\n            )}\n          </>\n        )}\n      </>\n    ),\n    [\n      brushLabelValue,\n      eastHandleColor,\n      eastHandleInView,\n      flipEastHandle,\n      flipWestHandle,\n      hovering,\n      id,\n      innerHeight,\n      innerWidth,\n      localBrushExtent,\n      showEastArrow,\n      showLabels,\n      showWestArrow,\n      westHandleColor,\n      westHandleInView,\n      xScale,\n    ]\n  )\n}\n","import { ScaleLinear } from 'd3'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\n\nconst StyledLine = styled.line`\n  opacity: 0.5;\n  stroke-width: 2;\n  stroke: ${({ theme }) => theme.neutral1};\n  fill: none;\n`\n\nexport const Line = ({\n  value,\n  xScale,\n  innerHeight,\n}: {\n  value: number\n  xScale: ScaleLinear<number, number>\n  innerHeight: number\n}) =>\n  useMemo(\n    () => <StyledLine x1={xScale(value)} y1=\"0\" x2={xScale(value)} y2={innerHeight} />,\n    [value, xScale, innerHeight]\n  )\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar RefreshCcw = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"1 4 1 10 7 10\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"23 20 23 14 17 14\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15\"\n  }));\n});\nRefreshCcw.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nRefreshCcw.displayName = 'RefreshCcw';\nexport default RefreshCcw;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ZoomIn = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"11\",\n    cy: \"11\",\n    r: \"8\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    y1: \"21\",\n    x2: \"16.65\",\n    y2: \"16.65\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"11\",\n    y1: \"8\",\n    x2: \"11\",\n    y2: \"14\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"8\",\n    y1: \"11\",\n    x2: \"14\",\n    y2: \"11\"\n  }));\n});\nZoomIn.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nZoomIn.displayName = 'ZoomIn';\nexport default ZoomIn;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ZoomOut = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"11\",\n    cy: \"11\",\n    r: \"8\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    y1: \"21\",\n    x2: \"16.65\",\n    y2: \"16.65\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"8\",\n    y1: \"11\",\n    x2: \"14\",\n    y2: \"11\"\n  }));\n});\nZoomOut.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nZoomOut.displayName = 'ZoomOut';\nexport default ZoomOut;","import { ButtonGray } from 'components/Button'\nimport { ScaleLinear, select, zoom, ZoomBehavior, zoomIdentity, ZoomTransform } from 'd3'\nimport React, { useEffect, useMemo, useRef } from 'react'\nimport { RefreshCcw, ZoomIn, ZoomOut } from 'react-feather'\nimport styled from 'styled-components'\n\nimport { ZoomLevels } from './types'\n\nconst Wrapper = styled.div<{ count: number }>`\n  display: grid;\n  grid-template-columns: repeat(${({ count }) => count.toString()}, 1fr);\n  grid-gap: 6px;\n\n  position: absolute;\n  top: -32px;\n  right: 0;\n`\n\nconst Button = styled(ButtonGray)`\n  &:hover {\n    background-color: ${({ theme }) => theme.surface3};\n    color: ${({ theme }) => theme.neutral1};\n  }\n\n  width: 32px;\n  height: 32px;\n  padding: 4px;\n`\n\nexport const ZoomOverlay = styled.rect`\n  fill: transparent;\n  cursor: grab;\n\n  &:active {\n    cursor: grabbing;\n  }\n`\n\nexport default function Zoom({\n  svg,\n  xScale,\n  setZoom,\n  width,\n  height,\n  resetBrush,\n  showResetButton,\n  zoomLevels,\n}: {\n  svg: SVGElement | null\n  xScale: ScaleLinear<number, number>\n  setZoom: (transform: ZoomTransform) => void\n  width: number\n  height: number\n  resetBrush: () => void\n  showResetButton: boolean\n  zoomLevels: ZoomLevels\n}) {\n  const zoomBehavior = useRef<ZoomBehavior<Element, unknown>>()\n\n  const [zoomIn, zoomOut, zoomInitial, zoomReset] = useMemo(\n    () => [\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .transition()\n          .call(zoomBehavior.current.scaleBy, 2),\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .transition()\n          .call(zoomBehavior.current.scaleBy, 0.5),\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .transition()\n          .call(zoomBehavior.current.scaleTo, 0.5),\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .call(zoomBehavior.current.transform, zoomIdentity.translate(0, 0).scale(1))\n          .transition()\n          .call(zoomBehavior.current.scaleTo, 0.5),\n    ],\n    [svg]\n  )\n\n  useEffect(() => {\n    if (!svg) return\n\n    zoomBehavior.current = zoom()\n      .scaleExtent([zoomLevels.min, zoomLevels.max])\n      .extent([\n        [0, 0],\n        [width, height],\n      ])\n      .on('zoom', ({ transform }: { transform: ZoomTransform }) => setZoom(transform))\n\n    select(svg as Element).call(zoomBehavior.current)\n  }, [height, width, setZoom, svg, xScale, zoomBehavior, zoomLevels, zoomLevels.max, zoomLevels.min])\n\n  useEffect(() => {\n    // reset zoom to initial on zoomLevel change\n    zoomInitial()\n  }, [zoomInitial, zoomLevels])\n\n  return (\n    <Wrapper count={showResetButton ? 3 : 2}>\n      {showResetButton && (\n        <Button\n          onClick={() => {\n            resetBrush()\n            zoomReset()\n          }}\n          disabled={false}\n        >\n          <RefreshCcw size={16} />\n        </Button>\n      )}\n      <Button onClick={zoomIn} disabled={false}>\n        <ZoomIn size={16} />\n      </Button>\n      <Button onClick={zoomOut} disabled={false}>\n        <ZoomOut size={16} />\n      </Button>\n    </Wrapper>\n  )\n}\n","import { max, scaleLinear, ZoomTransform } from 'd3'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { Bound } from 'state/mint/v3/actions'\n\nimport { Area } from './Area'\nimport { AxisBottom } from './AxisBottom'\nimport { Brush } from './Brush'\nimport { Line } from './Line'\nimport { ChartEntry, LiquidityChartRangeInputProps } from './types'\nimport Zoom, { ZoomOverlay } from './Zoom'\n\nconst xAccessor = (d: ChartEntry) => d.price0\nconst yAccessor = (d: ChartEntry) => d.activeLiquidity\n\nexport function Chart({\n  id = 'liquidityChartRangeInput',\n  data: { series, current },\n  ticksAtLimit,\n  styles,\n  dimensions: { width, height },\n  margins,\n  interactive = true,\n  brushDomain,\n  brushLabels,\n  onBrushDomainChange,\n  zoomLevels,\n}: LiquidityChartRangeInputProps) {\n  const zoomRef = useRef<SVGRectElement | null>(null)\n\n  const [zoom, setZoom] = useState<ZoomTransform | null>(null)\n\n  const [innerHeight, innerWidth] = useMemo(\n    () => [height - margins.top - margins.bottom, width - margins.left - margins.right],\n    [width, height, margins]\n  )\n\n  const { xScale, yScale } = useMemo(() => {\n    const scales = {\n      xScale: scaleLinear()\n        .domain([current * zoomLevels.initialMin, current * zoomLevels.initialMax] as number[])\n        .range([0, innerWidth]),\n      yScale: scaleLinear()\n        .domain([0, max(series, yAccessor)] as number[])\n        .range([innerHeight, 0]),\n    }\n\n    if (zoom) {\n      const newXscale = zoom.rescaleX(scales.xScale)\n      scales.xScale.domain(newXscale.domain())\n    }\n\n    return scales\n  }, [current, zoomLevels.initialMin, zoomLevels.initialMax, innerWidth, series, innerHeight, zoom])\n\n  useEffect(() => {\n    // reset zoom as necessary\n    setZoom(null)\n  }, [zoomLevels])\n\n  useEffect(() => {\n    if (!brushDomain) {\n      onBrushDomainChange(xScale.domain() as [number, number], undefined)\n    }\n  }, [brushDomain, onBrushDomainChange, xScale])\n\n  return (\n    <>\n      <Zoom\n        svg={zoomRef.current}\n        xScale={xScale}\n        setZoom={setZoom}\n        width={innerWidth}\n        height={\n          // allow zooming inside the x-axis\n          height\n        }\n        resetBrush={() => {\n          onBrushDomainChange(\n            [current * zoomLevels.initialMin, current * zoomLevels.initialMax] as [number, number],\n            'reset'\n          )\n        }}\n        showResetButton={Boolean(ticksAtLimit[Bound.LOWER] || ticksAtLimit[Bound.UPPER])}\n        zoomLevels={zoomLevels}\n      />\n      <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${width} ${height}`} style={{ overflow: 'visible' }}>\n        <defs>\n          <clipPath id={`${id}-chart-clip`}>\n            <rect x=\"0\" y=\"0\" width={innerWidth} height={height} />\n          </clipPath>\n\n          {brushDomain && (\n            // mask to highlight selected area\n            <mask id={`${id}-chart-area-mask`}>\n              <rect\n                fill=\"white\"\n                x={xScale(brushDomain[0])}\n                y=\"0\"\n                width={xScale(brushDomain[1]) - xScale(brushDomain[0])}\n                height={innerHeight}\n              />\n            </mask>\n          )}\n        </defs>\n\n        <g transform={`translate(${margins.left},${margins.top})`}>\n          <g clipPath={`url(#${id}-chart-clip)`}>\n            <Area series={series} xScale={xScale} yScale={yScale} xValue={xAccessor} yValue={yAccessor} />\n\n            {brushDomain && (\n              // duplicate area chart with mask for selected area\n              <g mask={`url(#${id}-chart-area-mask)`}>\n                <Area\n                  series={series}\n                  xScale={xScale}\n                  yScale={yScale}\n                  xValue={xAccessor}\n                  yValue={yAccessor}\n                  fill={styles.area.selection}\n                />\n              </g>\n            )}\n\n            <Line value={current} xScale={xScale} innerHeight={innerHeight} />\n\n            <AxisBottom xScale={xScale} innerHeight={innerHeight} />\n          </g>\n\n          <ZoomOverlay width={innerWidth} height={height} ref={zoomRef} />\n\n          <Brush\n            id={id}\n            xScale={xScale}\n            interactive={interactive}\n            brushLabelValue={brushLabels}\n            brushExtent={brushDomain ?? (xScale.domain() as [number, number])}\n            innerWidth={innerWidth}\n            innerHeight={innerHeight}\n            setBrushExtent={onBrushDomainChange}\n            westHandleColor={styles.brush.handle.west}\n            eastHandleColor={styles.brush.handle.east}\n          />\n        </g>\n      </svg>\n    </>\n  )\n}\n","import { Token } from '@uniswap/sdk-core'\nimport { tickToPrice } from '@uniswap/v3-sdk'\nimport { TickProcessed } from 'hooks/usePoolTickData'\nimport JSBI from 'jsbi'\n\nimport { Ticks } from '../graphql/thegraph/AllV3TicksQuery'\n\nconst PRICE_FIXED_DIGITS = 8\n\n// Computes the numSurroundingTicks above or below the active tick.\nexport default function computeSurroundingTicks(\n  token0: Token,\n  token1: Token,\n  activeTickProcessed: TickProcessed,\n  sortedTickData: Ticks,\n  pivot: number,\n  ascending: boolean\n): TickProcessed[] {\n  let previousTickProcessed: TickProcessed = {\n    ...activeTickProcessed,\n  }\n  // Iterate outwards (either up or down depending on direction) from the active tick,\n  // building active liquidity for every tick.\n  let processedTicks: TickProcessed[] = []\n  for (let i = pivot + (ascending ? 1 : -1); ascending ? i < sortedTickData.length : i >= 0; ascending ? i++ : i--) {\n    const tick = Number(sortedTickData[i].tick)\n    const currentTickProcessed: TickProcessed = {\n      liquidityActive: previousTickProcessed.liquidityActive,\n      tick,\n      liquidityNet: JSBI.BigInt(sortedTickData[i].liquidityNet),\n      price0: tickToPrice(token0, token1, tick).toFixed(PRICE_FIXED_DIGITS),\n    }\n\n    // Update the active liquidity.\n    // If we are iterating ascending and we found an initialized tick we immediately apply\n    // it to the current processed tick we are building.\n    // If we are iterating descending, we don't want to apply the net liquidity until the following tick.\n    if (ascending) {\n      currentTickProcessed.liquidityActive = JSBI.add(\n        previousTickProcessed.liquidityActive,\n        JSBI.BigInt(sortedTickData[i].liquidityNet)\n      )\n    } else if (!ascending && JSBI.notEqual(previousTickProcessed.liquidityNet, JSBI.BigInt(0))) {\n      // We are iterating descending, so look at the previous tick and apply any net liquidity.\n      currentTickProcessed.liquidityActive = JSBI.subtract(\n        previousTickProcessed.liquidityActive,\n        previousTickProcessed.liquidityNet\n      )\n    }\n\n    processedTicks.push(currentTickProcessed)\n    previousTickProcessed = currentTickProcessed\n  }\n\n  if (!ascending) {\n    processedTicks = processedTicks.reverse()\n  }\n\n  return processedTicks\n}\n","import { Currency, V3_CORE_FACTORY_ADDRESSES } from '@uniswap/sdk-core'\nimport { FeeAmount, Pool, TICK_SPACINGS, tickToPrice } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAllV3TicksQuery } from 'graphql/thegraph/__generated__/types-and-hooks'\nimport { TickData, Ticks } from 'graphql/thegraph/AllV3TicksQuery'\nimport { apolloClient } from 'graphql/thegraph/apollo'\nimport JSBI from 'jsbi'\nimport ms from 'ms'\nimport { useEffect, useMemo, useState } from 'react'\nimport computeSurroundingTicks from 'utils/computeSurroundingTicks'\n\nimport { PoolState, usePool } from './usePools'\n\nconst PRICE_FIXED_DIGITS = 8\n\n// Tick with fields parsed to JSBIs, and active liquidity computed.\nexport interface TickProcessed {\n  tick: number\n  liquidityActive: JSBI\n  liquidityNet: JSBI\n  price0: string\n}\n\nconst getActiveTick = (tickCurrent: number | undefined, feeAmount: FeeAmount | undefined) =>\n  tickCurrent && feeAmount ? Math.floor(tickCurrent / TICK_SPACINGS[feeAmount]) * TICK_SPACINGS[feeAmount] : undefined\n\nfunction useTicksFromSubgraph(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined,\n  skip = 0\n) {\n  const { chainId } = useWeb3React()\n  const poolAddress =\n    currencyA && currencyB && feeAmount\n      ? Pool.getAddress(\n          currencyA?.wrapped,\n          currencyB?.wrapped,\n          feeAmount,\n          undefined,\n          chainId ? V3_CORE_FACTORY_ADDRESSES[chainId] : undefined\n        )\n      : undefined\n\n  return useAllV3TicksQuery({\n    variables: { poolAddress: poolAddress?.toLowerCase(), skip },\n    skip: !poolAddress,\n    pollInterval: ms(`30s`),\n    client: apolloClient,\n  })\n}\n\nconst MAX_THE_GRAPH_TICK_FETCH_VALUE = 1000\n// Fetches all ticks for a given pool\nfunction useAllV3Ticks(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined\n): {\n  isLoading: boolean\n  error: unknown\n  ticks?: TickData[]\n} {\n  const [skipNumber, setSkipNumber] = useState(0)\n  const [subgraphTickData, setSubgraphTickData] = useState<Ticks>([])\n  const { data, error, loading: isLoading } = useTicksFromSubgraph(currencyA, currencyB, feeAmount, skipNumber)\n\n  useEffect(() => {\n    if (data?.ticks.length) {\n      setSubgraphTickData((tickData) => [...tickData, ...data.ticks])\n      if (data.ticks.length === MAX_THE_GRAPH_TICK_FETCH_VALUE) {\n        setSkipNumber((skipNumber) => skipNumber + MAX_THE_GRAPH_TICK_FETCH_VALUE)\n      }\n    }\n  }, [data?.ticks])\n\n  return {\n    isLoading: isLoading || data?.ticks.length === MAX_THE_GRAPH_TICK_FETCH_VALUE,\n    error,\n    ticks: subgraphTickData,\n  }\n}\n\nexport function usePoolActiveLiquidity(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined\n): {\n  isLoading: boolean\n  error: any\n  activeTick?: number\n  data?: TickProcessed[]\n} {\n  const pool = usePool(currencyA, currencyB, feeAmount)\n\n  // Find nearest valid tick for pool in case tick is not initialized.\n  const activeTick = useMemo(() => getActiveTick(pool[1]?.tickCurrent, feeAmount), [pool, feeAmount])\n\n  const { isLoading, error, ticks } = useAllV3Ticks(currencyA, currencyB, feeAmount)\n\n  return useMemo(() => {\n    if (\n      !currencyA ||\n      !currencyB ||\n      activeTick === undefined ||\n      pool[0] !== PoolState.EXISTS ||\n      !ticks ||\n      ticks.length === 0 ||\n      isLoading\n    ) {\n      return {\n        isLoading: isLoading || pool[0] === PoolState.LOADING,\n        error,\n        activeTick,\n        data: undefined,\n      }\n    }\n\n    const token0 = currencyA?.wrapped\n    const token1 = currencyB?.wrapped\n\n    // find where the active tick would be to partition the array\n    // if the active tick is initialized, the pivot will be an element\n    // if not, take the previous tick as pivot\n    const pivot = ticks.findIndex(({ tick }) => tick > activeTick) - 1\n\n    if (pivot < 0) {\n      // consider setting a local error\n      console.error('TickData pivot not found')\n      return {\n        isLoading,\n        error,\n        activeTick,\n        data: undefined,\n      }\n    }\n\n    const activeTickProcessed: TickProcessed = {\n      liquidityActive: JSBI.BigInt(pool[1]?.liquidity ?? 0),\n      tick: activeTick,\n      liquidityNet: Number(ticks[pivot].tick) === activeTick ? JSBI.BigInt(ticks[pivot].liquidityNet) : JSBI.BigInt(0),\n      price0: tickToPrice(token0, token1, activeTick).toFixed(PRICE_FIXED_DIGITS),\n    }\n\n    const subsequentTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, true)\n\n    const previousTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, false)\n\n    const ticksProcessed = previousTicks.concat(activeTickProcessed).concat(subsequentTicks)\n\n    return {\n      isLoading,\n      error,\n      activeTick,\n      data: ticksProcessed,\n    }\n  }, [currencyA, currencyB, activeTick, pool, ticks, isLoading, error])\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { TickProcessed, usePoolActiveLiquidity } from 'hooks/usePoolTickData'\nimport { useCallback, useMemo } from 'react'\n\nimport { ChartEntry } from './types'\n\nexport function useDensityChartData({\n  currencyA,\n  currencyB,\n  feeAmount,\n}: {\n  currencyA?: Currency\n  currencyB?: Currency\n  feeAmount?: FeeAmount\n}) {\n  const { isLoading, error, data } = usePoolActiveLiquidity(currencyA, currencyB, feeAmount)\n\n  const formatData = useCallback(() => {\n    if (!data?.length) {\n      return undefined\n    }\n\n    const newData: ChartEntry[] = []\n\n    for (let i = 0; i < data.length; i++) {\n      const t: TickProcessed = data[i]\n\n      const chartEntry = {\n        activeLiquidity: parseFloat(t.liquidityActive.toString()),\n        price0: parseFloat(t.price0),\n      }\n\n      if (chartEntry.activeLiquidity > 0) {\n        newData.push(chartEntry)\n      }\n    }\n\n    return newData\n  }, [data])\n\n  return useMemo(() => {\n    return {\n      isLoading,\n      error,\n      formattedData: !isLoading ? formatData() : undefined,\n    }\n  }, [isLoading, error, formatData])\n}\n","import React from \"react\"\nimport { Trans } from '@lingui/macro'\nimport { Currency, Price, Token } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { AutoColumn, ColumnCenter } from 'components/Column'\nimport Loader from 'components/Icons/LoadingSpinner'\nimport { useColor } from 'hooks/useColor'\nimport { saturate } from 'polished'\nimport { ReactNode, useCallback, useMemo } from 'react'\nimport { BarChart2, CloudOff, Inbox } from 'react-feather'\nimport { batch } from 'react-redux'\nimport { Bound } from 'state/mint/v3/actions'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { useFormatter } from 'utils/formatNumbers'\n\nimport { Chart } from './Chart'\nimport { useDensityChartData } from './hooks'\nimport { ZoomLevels } from './types'\n\nconst ZOOM_LEVELS: Record<FeeAmount, ZoomLevels> = {\n  [FeeAmount.LOWEST]: {\n    initialMin: 0.999,\n    initialMax: 1.001,\n    min: 0.00001,\n    max: 1.5,\n  },\n  [FeeAmount.LOW]: {\n    initialMin: 0.999,\n    initialMax: 1.001,\n    min: 0.00001,\n    max: 1.5,\n  },\n  [FeeAmount.MEDIUM]: {\n    initialMin: 0.5,\n    initialMax: 2,\n    min: 0.00001,\n    max: 20,\n  },\n  [FeeAmount.HIGH]: {\n    initialMin: 0.5,\n    initialMax: 2,\n    min: 0.00001,\n    max: 20,\n  },\n}\n\nconst ChartWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  max-height: 200px;\n  justify-content: center;\n  align-content: center;\n`\n\nfunction InfoBox({ message, icon }: { message?: ReactNode; icon: ReactNode }) {\n  return (\n    <ColumnCenter style={{ height: '100%', justifyContent: 'center' }}>\n      {icon}\n      {message && (\n        <ThemedText.DeprecatedMediumHeader padding={10} marginTop=\"20px\" textAlign=\"center\">\n          {message}\n        </ThemedText.DeprecatedMediumHeader>\n      )}\n    </ColumnCenter>\n  )\n}\n\n function LiquidityChartRangeInput({\n  currencyA,\n  currencyB,\n  feeAmount,\n  ticksAtLimit,\n  price,\n  priceLower,\n  priceUpper,\n  onLeftRangeInput,\n  onRightRangeInput,\n  interactive,\n}: {\n  currencyA?: Currency\n  currencyB?: Currency\n  feeAmount?: FeeAmount\n  ticksAtLimit: { [bound in Bound]?: boolean | undefined }\n  price?: number\n  priceLower?: Price<Token, Token>\n  priceUpper?: Price<Token, Token>\n  onLeftRangeInput: (typedValue: string) => void\n  onRightRangeInput: (typedValue: string) => void\n  interactive: boolean\n}) {\n  const theme = useTheme()\n\n  const tokenAColor = useColor(currencyA)\n  const tokenBColor = useColor(currencyB)\n\n  const isSorted = currencyA && currencyB && currencyA?.wrapped.sortsBefore(currencyB?.wrapped)\n\n  const { isLoading, error, formattedData } = useDensityChartData({\n    currencyA,\n    currencyB,\n    feeAmount,\n  })\n\n  const onBrushDomainChangeEnded = useCallback(\n    (domain: [number, number], mode: string | undefined) => {\n      let leftRangeValue = Number(domain[0])\n      const rightRangeValue = Number(domain[1])\n\n      if (leftRangeValue <= 0) {\n        leftRangeValue = 1 / 10 ** 6\n      }\n\n      batch(() => {\n        // simulate user input for auto-formatting and other validations\n        if (\n          (!ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER] || mode === 'handle' || mode === 'reset') &&\n          leftRangeValue > 0\n        ) {\n          onLeftRangeInput(leftRangeValue.toFixed(6))\n        }\n\n        if ((!ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER] || mode === 'reset') && rightRangeValue > 0) {\n          // todo: remove this check. Upper bound for large numbers\n          // sometimes fails to parse to tick.\n          if (rightRangeValue < 1e35) {\n            onRightRangeInput(rightRangeValue.toFixed(6))\n          }\n        }\n      })\n    },\n    [isSorted, onLeftRangeInput, onRightRangeInput, ticksAtLimit]\n  )\n\n  interactive = interactive && Boolean(formattedData?.length)\n\n  const brushDomain: [number, number] | undefined = useMemo(() => {\n    const leftPrice = isSorted ? priceLower : priceUpper?.invert()\n    const rightPrice = isSorted ? priceUpper : priceLower?.invert()\n\n    return leftPrice && rightPrice\n      ? [parseFloat(leftPrice?.toSignificant(6)), parseFloat(rightPrice?.toSignificant(6))]\n      : undefined\n  }, [isSorted, priceLower, priceUpper])\n\n  const { formatDelta } = useFormatter()\n  const brushLabelValue = useCallback(\n    (d: 'w' | 'e', x: number) => {\n      if (!price) return ''\n\n      if (d === 'w' && ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER]) return '0'\n      if (d === 'e' && ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]) return '∞'\n\n      const percent = (x < price ? -1 : 1) * ((Math.max(x, price) - Math.min(x, price)) / price) * 100\n\n      return price ? `${(Math.sign(percent) < 0 ? '-' : '') + formatDelta(percent)}` : ''\n    },\n    [formatDelta, isSorted, price, ticksAtLimit]\n  )\n\n  const isUninitialized = !currencyA || !currencyB || (formattedData === undefined && !isLoading)\n\n\n  return (\n    <AutoColumn gap=\"md\" style={{ minHeight: '200px' }}>\n      {isUninitialized ? (\n        <InfoBox\n          message={<Trans>Your position will appear here.</Trans>}\n          icon={<Inbox size={56} stroke={theme.neutral1} />}\n        />\n      ) : isLoading ? (\n        <InfoBox icon={<Loader size=\"40px\" stroke={theme.neutral2} />} />\n      ) : error ? (\n        <InfoBox\n          message={<Trans>Liquidity data not available.</Trans>}\n          icon={<CloudOff size={56} stroke={theme.neutral2} />}\n        />\n      ) : !formattedData || formattedData.length === 0 || !price ? (\n        <InfoBox\n          message={<Trans>There is no liquidity data.</Trans>}\n          icon={<BarChart2 size={56} stroke={theme.neutral2} />}\n        />\n      ) : (\n        <ChartWrapper>\n          <Chart\n            data={{ series: formattedData, current: price }}\n            dimensions={{ width: 560, height: 200 }}\n            margins={{ top: 10, right: 2, bottom: 20, left: 0 }}\n            styles={{\n              area: {\n                selection: theme.accent1,\n              },\n              brush: {\n                handle: {\n                  west: saturate(0.1, tokenAColor) ?? theme.critical,\n                  east: saturate(0.1, tokenBColor) ?? theme.accent1,\n                },\n              },\n            }}\n            interactive={interactive}\n            brushLabels={brushLabelValue}\n            brushDomain={brushDomain}\n            onBrushDomainChange={onBrushDomainChangeEnded}\n            zoomLevels={ZOOM_LEVELS[feeAmount ?? FeeAmount.MEDIUM]}\n            ticksAtLimit={ticksAtLimit}\n          />\n        </ChartWrapper>\n      )}\n    </AutoColumn>\n  )\n}\n\n\nexport default React.memo(LiquidityChartRangeInput)","import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { Position } from '@uniswap/v3-sdk'\nimport RangeBadge from 'components/Badge/RangeBadge'\nimport { LightCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport { Break } from 'components/earn/styled'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport RateToggle from 'components/RateToggle'\nimport { RowBetween, RowFixed } from 'components/Row'\nimport { BIPS_BASE } from 'constants/misc'\nimport JSBI from 'jsbi'\nimport { ReactNode, useCallback, useState } from 'react'\nimport { Bound } from 'state/mint/v3/actions'\nimport { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\nimport { unwrappedToken } from 'utils/unwrappedToken'\n\nexport const PositionPreview = ({\n  position,\n  title,\n  inRange,\n  baseCurrencyDefault,\n  ticksAtLimit,\n}: {\n  position: Position\n  title?: ReactNode\n  inRange: boolean\n  baseCurrencyDefault?: Currency\n  ticksAtLimit: { [bound: string]: boolean | undefined }\n}) => {\n  const theme = useTheme()\n  const { formatCurrencyAmount, formatDelta, formatPrice, formatTickPrice } = useFormatter()\n\n  const currency0 = unwrappedToken(position.pool.token0)\n  const currency1 = unwrappedToken(position.pool.token1)\n\n  // track which currency should be base\n  const [baseCurrency, setBaseCurrency] = useState(\n    baseCurrencyDefault\n      ? baseCurrencyDefault === currency0\n        ? currency0\n        : baseCurrencyDefault === currency1\n        ? currency1\n        : currency0\n      : currency0\n  )\n\n  const sorted = baseCurrency === currency0\n  const quoteCurrency = sorted ? currency1 : currency0\n\n  const price = sorted ? position.pool.priceOf(position.pool.token0) : position.pool.priceOf(position.pool.token1)\n\n  const priceLower = sorted ? position.token0PriceLower : position.token0PriceUpper.invert()\n  const priceUpper = sorted ? position.token0PriceUpper : position.token0PriceLower.invert()\n\n  const handleRateChange = useCallback(() => {\n    setBaseCurrency(quoteCurrency)\n  }, [quoteCurrency])\n\n  const removed = position?.liquidity && JSBI.equal(position?.liquidity, JSBI.BigInt(0))\n\n  return (\n    <AutoColumn gap=\"md\" style={{ marginTop: '0.5rem' }}>\n      <RowBetween style={{ marginBottom: '0.5rem' }}>\n        <RowFixed>\n          <DoubleCurrencyLogo\n            currency0={currency0 ?? undefined}\n            currency1={currency1 ?? undefined}\n            size={24}\n            margin={true}\n          />\n          <ThemedText.DeprecatedLabel ml=\"10px\" fontSize=\"24px\">\n            {currency0?.symbol} / {currency1?.symbol}\n          </ThemedText.DeprecatedLabel>\n        </RowFixed>\n        <RangeBadge removed={removed} inRange={inRange} />\n      </RowBetween>\n\n      <LightCard>\n        <AutoColumn gap=\"md\">\n          <RowBetween>\n            <RowFixed>\n              <CurrencyLogo currency={currency0} />\n              <ThemedText.DeprecatedLabel ml=\"8px\">{currency0?.symbol}</ThemedText.DeprecatedLabel>\n            </RowFixed>\n            <RowFixed>\n              <ThemedText.DeprecatedLabel mr=\"8px\">\n                {formatCurrencyAmount({ amount: position.amount0 })}\n              </ThemedText.DeprecatedLabel>\n            </RowFixed>\n          </RowBetween>\n          <RowBetween>\n            <RowFixed>\n              <CurrencyLogo currency={currency1} />\n              <ThemedText.DeprecatedLabel ml=\"8px\">{currency1?.symbol}</ThemedText.DeprecatedLabel>\n            </RowFixed>\n            <RowFixed>\n              <ThemedText.DeprecatedLabel mr=\"8px\">\n                {formatCurrencyAmount({ amount: position.amount1 })}\n              </ThemedText.DeprecatedLabel>\n            </RowFixed>\n          </RowBetween>\n          <Break />\n          <RowBetween>\n            <ThemedText.DeprecatedLabel>\n              <Trans>Fee tier</Trans>\n            </ThemedText.DeprecatedLabel>\n            <ThemedText.DeprecatedLabel>\n              <Trans>{formatDelta(position?.pool?.fee / BIPS_BASE)}</Trans>\n            </ThemedText.DeprecatedLabel>\n          </RowBetween>\n        </AutoColumn>\n      </LightCard>\n\n      <AutoColumn gap=\"md\">\n        <RowBetween>\n          {title ? <ThemedText.DeprecatedMain>{title}</ThemedText.DeprecatedMain> : <div />}\n          <RateToggle\n            currencyA={sorted ? currency0 : currency1}\n            currencyB={sorted ? currency1 : currency0}\n            handleRateToggle={handleRateChange}\n          />\n        </RowBetween>\n\n        <RowBetween>\n          <LightCard width=\"48%\" padding=\"8px\">\n            <AutoColumn gap=\"4px\" justify=\"center\">\n              <ThemedText.DeprecatedMain fontSize=\"12px\">\n                <Trans>Min price</Trans>\n              </ThemedText.DeprecatedMain>\n              <ThemedText.DeprecatedMediumHeader textAlign=\"center\">\n                {formatTickPrice({\n                  price: priceLower,\n                  atLimit: ticksAtLimit,\n                  direction: Bound.LOWER,\n                })}\n              </ThemedText.DeprecatedMediumHeader>\n              <ThemedText.DeprecatedMain textAlign=\"center\" fontSize=\"12px\">\n                <Trans>\n                  {quoteCurrency.symbol} per {baseCurrency.symbol}\n                </Trans>\n              </ThemedText.DeprecatedMain>\n              <ThemedText.DeprecatedSmall textAlign=\"center\" color={theme.neutral3} style={{ marginTop: '4px' }}>\n                <Trans>Your position will be 100% composed of {baseCurrency?.symbol} at this price</Trans>\n              </ThemedText.DeprecatedSmall>\n            </AutoColumn>\n          </LightCard>\n\n          <LightCard width=\"48%\" padding=\"8px\">\n            <AutoColumn gap=\"4px\" justify=\"center\">\n              <ThemedText.DeprecatedMain fontSize=\"12px\">\n                <Trans>Max price</Trans>\n              </ThemedText.DeprecatedMain>\n              <ThemedText.DeprecatedMediumHeader textAlign=\"center\">\n                {formatTickPrice({\n                  price: priceUpper,\n                  atLimit: ticksAtLimit,\n                  direction: Bound.UPPER,\n                })}\n              </ThemedText.DeprecatedMediumHeader>\n              <ThemedText.DeprecatedMain textAlign=\"center\" fontSize=\"12px\">\n                <Trans>\n                  {quoteCurrency.symbol} per {baseCurrency.symbol}\n                </Trans>\n              </ThemedText.DeprecatedMain>\n              <ThemedText.DeprecatedSmall textAlign=\"center\" color={theme.neutral3} style={{ marginTop: '4px' }}>\n                <Trans>Your position will be 100% composed of {quoteCurrency?.symbol} at this price</Trans>\n              </ThemedText.DeprecatedSmall>\n            </AutoColumn>\n          </LightCard>\n        </RowBetween>\n        <LightCard padding=\"12px \">\n          <AutoColumn gap=\"4px\" justify=\"center\">\n            <ThemedText.DeprecatedMain fontSize=\"12px\">\n              <Trans>Current price</Trans>\n            </ThemedText.DeprecatedMain>\n            <ThemedText.DeprecatedMediumHeader>{`${formatPrice({\n              price,\n              type: NumberType.TokenTx,\n            })} `}</ThemedText.DeprecatedMediumHeader>\n            <ThemedText.DeprecatedMain textAlign=\"center\" fontSize=\"12px\">\n              <Trans>\n                {quoteCurrency.symbol} per {baseCurrency.symbol}\n              </Trans>\n            </ThemedText.DeprecatedMain>\n          </AutoColumn>\n        </LightCard>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { ButtonOutlined } from 'components/Button'\nimport { AutoRow } from 'components/Row'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nconst Button = styled(ButtonOutlined).attrs(() => ({\n  padding: '6px',\n  $borderRadius: '8px',\n}))`\n  color: ${({ theme }) => theme.neutral1};\n  flex: 1;\n`\n\ninterface PresetsButtonsProps {\n  onSetFullRange: () => void\n}\n\nexport default function PresetsButtons({ onSetFullRange }: PresetsButtonsProps) {\n  return (\n    <AutoRow gap=\"4px\" width=\"auto\">\n      <Button data-testid=\"set-full-range\" onClick={onSetFullRange}>\n        <ThemedText.DeprecatedBody fontSize={12}>\n          <Trans>Full range</Trans>\n        </ThemedText.DeprecatedBody>\n      </Button>\n    </AutoRow>\n  )\n}\n","import { Interface } from '@ethersproject/abi'\nimport { Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { toHex } from '@uniswap/v3-sdk'\nimport { Erc20Interface } from 'wallet/src/abis/types/Erc20'\n\nconst ERC20_INTERFACE = new Interface([\n  {\n    constant: false,\n    inputs: [\n      { name: '_spender', type: 'address' },\n      { name: '_value', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ name: '', type: 'bool' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n]) as Erc20Interface\n\nexport default function approveAmountCalldata(\n  amount: CurrencyAmount<Currency>,\n  spender: string\n): { to: string; data: string; value: '0x0' } {\n  if (!amount.currency.isToken) throw new Error('Must call with an amount of token')\n  const approveData = ERC20_INTERFACE.encodeFunctionData('approve', [spender, toHex(amount.quotient)])\n  return {\n    to: amount.currency.address,\n    data: approveData,\n    value: '0x0',\n  }\n}\n","import { Currency, CurrencyAmount, Price } from '@uniswap/sdk-core'\nimport { Position } from '@uniswap/v3-sdk'\nimport { AutoColumn } from 'components/Column'\nimport { PositionPreview } from 'components/PositionPreview'\nimport styled from 'styled-components'\n\nimport { Bound, Field } from '../../state/mint/v3/actions'\n\nconst Wrapper = styled.div`\n  padding-top: 12px;\n`\n\nexport function Review({\n  position,\n  outOfRange,\n  ticksAtLimit,\n}: {\n  position?: Position\n  existingPosition?: Position\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  priceLower?: Price<Currency, Currency>\n  priceUpper?: Price<Currency, Currency>\n  outOfRange: boolean\n  ticksAtLimit: { [bound in Bound]?: boolean | undefined }\n}) {\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"lg\">\n        {position ? (\n          <PositionPreview\n            position={position}\n            inRange={!outOfRange}\n            ticksAtLimit={ticksAtLimit}\n            title=\"Selected Range\"\n          />\n        ) : null}\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { BrowserEvent, InterfaceElementName, InterfaceEventName, LiquidityEventName } from '@uniswap/analytics-events'\nimport { Currency, CurrencyAmount, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES, Percent } from '@uniswap/sdk-core'\nimport { FeeAmount, NonfungiblePositionManager } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { sendAnalyticsEvent, TraceEvent, useTrace } from 'analytics'\nimport { useToggleAccountDrawer } from 'components/AccountDrawer/MiniPortfolio/hooks'\nimport OwnershipWarning from 'components/addLiquidity/OwnershipWarning'\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\nimport { isSupportedChain } from 'constants/chains'\nimport usePrevious from 'hooks/usePrevious'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { BodyWrapper } from 'pages/AppBody'\nimport { PositionPageUnsupportedContent } from 'pages/Pool/PositionPage'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport {\n  useRangeHopCallbacks,\n  useV3DerivedMintInfo,\n  useV3MintActionHandlers,\n  useV3MintState,\n} from 'state/mint/v3/hooks'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { addressesAreEquivalent } from 'utils/addressesAreEquivalent'\nimport { WrongChainError } from 'utils/errors'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { ButtonError, ButtonLight, ButtonPrimary, ButtonText } from '../../components/Button'\nimport { BlueCard, OutlineCard, YellowCard } from '../../components/Card'\nimport { AutoColumn } from '../../components/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport FeeSelector from '../../components/FeeSelector'\nimport HoverInlineText from '../../components/HoverInlineText'\nimport LiquidityChartRangeInput from '../../components/LiquidityChartRangeInput'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { PositionPreview } from '../../components/PositionPreview'\nimport RangeSelector from '../../components/RangeSelector'\nimport PresetsButtons from '../../components/RangeSelector/PresetsButtons'\nimport RateToggle from '../../components/RateToggle'\nimport Row, { RowBetween, RowFixed } from '../../components/Row'\nimport { SwitchLocaleLink } from '../../components/SwitchLocaleLink'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport { ZERO_PERCENT } from '../../constants/misc'\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport { useArgentWalletContract } from '../../hooks/useArgentWalletContract'\nimport { useV3NFTPositionManagerContract } from '../../hooks/useContract'\nimport { useDerivedPositionInfo } from '../../hooks/useDerivedPositionInfo'\nimport { useIsSwapUnsupported } from '../../hooks/useIsSwapUnsupported'\nimport { useStablecoinValue } from '../../hooks/useStablecoinPrice'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { useV3PositionFromTokenId } from '../../hooks/useV3Positions'\nimport { Bound, Field } from '../../state/mint/v3/actions'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { TransactionInfo, TransactionType } from '../../state/transactions/types'\nimport { useUserSlippageToleranceWithDefault } from '../../state/user/hooks'\nimport approveAmountCalldata from '../../utils/approveAmountCalldata'\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\nimport { currencyId } from '../../utils/currencyId'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { Dots } from '../Pool/styled'\nimport { Review } from './Review'\nimport { DynamicSection, MediumOnly, ResponsiveTwoColumns, ScrollablePage, StyledInput, Wrapper } from './styled'\n\nconst DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE = new Percent(50, 10_000)\n\nconst StyledBodyWrapper = styled(BodyWrapper)<{ $hasExistingPosition: boolean }>`\n  padding: ${({ $hasExistingPosition }) => ($hasExistingPosition ? '10px' : 0)};\n  max-width: 640px;\n`\n\nexport default function AddLiquidityWrapper() {\n  const { chainId } = useWeb3React()\n\n\n  if (isSupportedChain(chainId)) {\n    return <AddLiquidity />\n  } else {\n    return <PositionPageUnsupportedContent />\n  }\n}\n\nfunction AddLiquidity() {\n  const navigate = useNavigate()\n  const {\n    currencyIdA,\n    currencyIdB,\n    feeAmount: feeAmountFromUrl,\n    tokenId,\n  } = useParams<{\n    currencyIdA?: string\n    currencyIdB?: string\n    feeAmount?: string\n    tokenId?: string\n  }>()\n  const { account, chainId, provider } = useWeb3React()\n  const theme = useTheme()\n  const trace = useTrace()\n\n  const toggleWalletDrawer = useToggleAccountDrawer() // toggle wallet when disconnected\n  const addTransaction = useTransactionAdder()\n  const positionManager = useV3NFTPositionManagerContract()\n\n  // check for existing position if tokenId in url\n  const { position: existingPositionDetails, loading: positionLoading } = useV3PositionFromTokenId(\n    tokenId ? BigNumber.from(tokenId) : undefined\n  )\n  const hasExistingPosition = !!existingPositionDetails && !positionLoading\n  const { position: existingPosition } = useDerivedPositionInfo(existingPositionDetails)\n\n  // fee selection from url\n  const feeAmount: FeeAmount | undefined =\n    feeAmountFromUrl && Object.values(FeeAmount).includes(parseFloat(feeAmountFromUrl))\n      ? parseFloat(feeAmountFromUrl)\n      : undefined\n\n  const baseCurrency = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  // prevent an error if they input ETH/WETH\n  const quoteCurrency =\n    baseCurrency && currencyB && baseCurrency.wrapped.equals(currencyB.wrapped) ? undefined : currencyB\n\n  // mint state\n  const { independentField, typedValue, startPriceTypedValue } = useV3MintState()\n\n  const {\n    pool,\n    ticks,\n    dependentField,\n    price,\n    pricesAtTicks,\n    pricesAtLimit,\n    parsedAmounts,\n    currencyBalances,\n    position,\n    noLiquidity,\n    currencies,\n    errorMessage,\n    invalidPool,\n    invalidRange,\n    outOfRange,\n    depositADisabled,\n    depositBDisabled,\n    invertPrice,\n    ticksAtLimit,\n  } = useV3DerivedMintInfo(\n    baseCurrency ?? undefined,\n    quoteCurrency ?? undefined,\n    feeAmount,\n    baseCurrency ?? undefined,\n    existingPosition\n  )\n\n  const { formatPrice } = useFormatter()\n  const formattedPrice = formatPrice({\n    price: invertPrice ? price?.invert() : price,\n    type: NumberType.TokenTx,\n  })\n  const { onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput, onStartPriceInput } =\n    useV3MintActionHandlers(noLiquidity)\n\n  const isValid = !errorMessage && !invalidRange\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const usdcValues = {\n    [Field.CURRENCY_A]: useStablecoinValue(parsedAmounts[Field.CURRENCY_A]),\n    [Field.CURRENCY_B]: useStablecoinValue(parsedAmounts[Field.CURRENCY_B]),\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {}\n  )\n\n  const atMaxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {}\n  )\n\n  const argentWalletContract = useArgentWalletContract()\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(\n    argentWalletContract ? undefined : parsedAmounts[Field.CURRENCY_A],\n    chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined\n  )\n  const [approvalB, approveBCallback] = useApproveCallback(\n    argentWalletContract ? undefined : parsedAmounts[Field.CURRENCY_B],\n    chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined\n  )\n\n  const allowedSlippage = useUserSlippageToleranceWithDefault(\n    outOfRange ? ZERO_PERCENT : DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE\n  )\n\n  async function onAdd() {\n    if (!chainId || !provider || !account) return\n\n    if (!positionManager || !baseCurrency || !quoteCurrency) {\n      return\n    }\n\n    if (position && account && deadline) {\n      const useNative = baseCurrency.isNative ? baseCurrency : quoteCurrency.isNative ? quoteCurrency : undefined\n      const { calldata, value } =\n        hasExistingPosition && tokenId\n          ? NonfungiblePositionManager.addCallParameters(position, {\n              tokenId,\n              slippageTolerance: allowedSlippage,\n              deadline: deadline.toString(),\n              useNative,\n            })\n          : NonfungiblePositionManager.addCallParameters(position, {\n              slippageTolerance: allowedSlippage,\n              recipient: account,\n              deadline: deadline.toString(),\n              useNative,\n              createPool: noLiquidity,\n            })\n\n      let txn: { to: string; data: string; value: string } = {\n        to: NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId],\n        data: calldata,\n        value,\n      }\n\n      if (argentWalletContract) {\n        const amountA = parsedAmounts[Field.CURRENCY_A]\n        const amountB = parsedAmounts[Field.CURRENCY_B]\n        const batch = [\n          ...(amountA && amountA.currency.isToken\n            ? [approveAmountCalldata(amountA, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId])]\n            : []),\n          ...(amountB && amountB.currency.isToken\n            ? [approveAmountCalldata(amountB, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId])]\n            : []),\n          {\n            to: txn.to,\n            data: txn.data,\n            value: txn.value,\n          },\n        ]\n        const data = argentWalletContract.interface.encodeFunctionData('wc_multiCall', [batch])\n        txn = {\n          to: argentWalletContract.address,\n          data,\n          value: '0x0',\n        }\n      }\n\n      const connectedChainId = await provider.getSigner().getChainId()\n      if (chainId !== connectedChainId) throw new WrongChainError()\n\n      setAttemptingTxn(true)\n\n      provider\n        .getSigner()\n        .estimateGas(txn)\n        .then((estimate) => {\n          const newTxn = {\n            ...txn,\n            gasLimit: calculateGasMargin(estimate),\n          }\n\n          return provider\n            .getSigner()\n            .sendTransaction(newTxn)\n            .then((response: TransactionResponse) => {\n              setAttemptingTxn(false)\n              const transactionInfo: TransactionInfo = {\n                type: TransactionType.ADD_LIQUIDITY_V3_POOL,\n                baseCurrencyId: currencyId(baseCurrency),\n                quoteCurrencyId: currencyId(quoteCurrency),\n                createPool: Boolean(noLiquidity),\n                expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient?.toString() ?? '0',\n                expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient?.toString() ?? '0',\n                feeAmount: position.pool.fee,\n              }\n              addTransaction(response, transactionInfo)\n              setTxHash(response.hash)\n              sendAnalyticsEvent(LiquidityEventName.ADD_LIQUIDITY_SUBMITTED, {\n                label: [currencies[Field.CURRENCY_A]?.symbol, currencies[Field.CURRENCY_B]?.symbol].join('/'),\n                ...trace,\n                ...transactionInfo,\n              })\n            })\n        })\n        .catch((error) => {\n          console.error('Failed to send transaction', error)\n          setAttemptingTxn(false)\n          // we only care if the error is something _other_ than the user rejected the tx\n          if (error?.code !== 4001) {\n            console.error(error)\n          }\n        })\n    } else {\n      return\n    }\n  }\n\n  const handleCurrencySelect = useCallback(\n    (currencyNew: Currency, currencyIdOther?: string): (string | undefined)[] => {\n      const currencyIdNew = currencyId(currencyNew)\n\n      if (currencyIdNew === currencyIdOther) {\n        // not ideal, but for now clobber the other if the currency ids are equal\n        return [currencyIdNew, undefined]\n      } else {\n        // prevent weth + eth\n        const isETHOrWETHNew =\n          currencyIdNew === 'smartbch' ||\n          (chainId !== undefined && currencyIdNew === WRAPPED_NATIVE_CURRENCY[chainId]?.address)\n        const isETHOrWETHOther =\n          currencyIdOther !== undefined &&\n          (currencyIdOther === 'smartbch' ||\n            (chainId !== undefined && currencyIdOther === WRAPPED_NATIVE_CURRENCY[chainId]?.address))\n\n        if (isETHOrWETHNew && isETHOrWETHOther) {\n          return [currencyIdNew, undefined]\n        } else {\n          return [currencyIdNew, currencyIdOther]\n        }\n      }\n    },\n    [chainId]\n  )\n\n  const handleCurrencyASelect = useCallback(\n    (currencyANew: Currency) => {\n      const [idA, idB] = handleCurrencySelect(currencyANew, currencyIdB)\n      if (idB === undefined) {\n        navigate(`/add/${idA}`)\n      } else {\n        navigate(`/add/${idA}/${idB}`)\n      }\n    },\n    [handleCurrencySelect, currencyIdB, navigate]\n  )\n\n  const handleCurrencyBSelect = useCallback(\n    (currencyBNew: Currency) => {\n      const [idB, idA] = handleCurrencySelect(currencyBNew, currencyIdA)\n      if (idA === undefined) {\n        navigate(`/add/${idB}`)\n      } else {\n        navigate(`/add/${idA}/${idB}`)\n      }\n    },\n    [handleCurrencySelect, currencyIdA, navigate]\n  )\n\n  const handleFeePoolSelect = useCallback(\n    (newFeeAmount: FeeAmount) => {\n      onLeftRangeInput('')\n      onRightRangeInput('')\n      navigate(`/add/${currencyIdA}/${currencyIdB}/${newFeeAmount}`)\n    },\n    [currencyIdA, currencyIdB, navigate, onLeftRangeInput, onRightRangeInput]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n      // dont jump to pool page if creating\n      navigate('/pools')\n    }\n    setTxHash('')\n  }, [navigate, onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsSwapUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const clearAll = useCallback(() => {\n    onFieldAInput('')\n    onFieldBInput('')\n    onLeftRangeInput('')\n    onRightRangeInput('')\n    navigate(`/add`)\n  }, [navigate, onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput])\n\n  // get value and prices at ticks\n  const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks\n  const { [Bound.LOWER]: priceLower, [Bound.UPPER]: priceUpper } = pricesAtTicks\n\n  const { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper, getSetFullRange } =\n    useRangeHopCallbacks(baseCurrency ?? undefined, quoteCurrency ?? undefined, feeAmount, tickLower, tickUpper, pool)\n\n  // we need an existence check on parsed amounts for single-asset deposits\n  const showApprovalA =\n    !argentWalletContract && approvalA !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_A]\n  const showApprovalB =\n    !argentWalletContract && approvalB !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_B]\n\n  const pendingText = `Supplying ${!depositADisabled ? parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) : ''} ${\n    !depositADisabled ? currencies[Field.CURRENCY_A]?.symbol : ''\n  } ${!outOfRange ? 'and' : ''} ${!depositBDisabled ? parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) : ''} ${\n    !depositBDisabled ? currencies[Field.CURRENCY_B]?.symbol : ''\n  }`\n\n  const [searchParams, setSearchParams] = useSearchParams()\n\n  const handleSetFullRange = useCallback(() => {\n    getSetFullRange()\n    const minPrice = pricesAtLimit[Bound.LOWER]\n\n    if (minPrice) searchParams.set('minPrice', minPrice.toSignificant(5))\n    const maxPrice = pricesAtLimit[Bound.UPPER]\n    if (maxPrice) searchParams.set('maxPrice', maxPrice.toSignificant(5))\n\n    setSearchParams(searchParams)\n  }, [getSetFullRange, pricesAtLimit, searchParams])\n\n  // START: sync values with query string\n  const oldSearchParams = usePrevious(searchParams)\n  // use query string as an input to onInput handlers\n  useEffect(() => {\n    const minPrice = searchParams.get('minPrice')\n    const oldMinPrice = oldSearchParams?.get('minPrice')\n    if (\n      minPrice &&\n      typeof minPrice === 'string' &&\n      !isNaN(minPrice as any) &&\n      (!oldMinPrice || oldMinPrice !== minPrice)\n    ) {\n      onLeftRangeInput(minPrice)\n    }\n    // disable eslint rule because this hook only cares about the url->input state data flow\n    // input state -> url updates are handled in the input handlers\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams])\n\n  useEffect(() => {\n    const maxPrice = searchParams.get('maxPrice')\n    const oldMaxPrice = oldSearchParams?.get('maxPrice')\n    if (\n      maxPrice &&\n      typeof maxPrice === 'string' &&\n      !isNaN(maxPrice as any) &&\n      (!oldMaxPrice || oldMaxPrice !== maxPrice)\n    ) {\n      onRightRangeInput(maxPrice)\n    }\n    // disable eslint rule because this hook only cares about the url->input state data flow\n    // input state -> url updates are handled in the input handlers\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams])\n  // END: sync values with query string\n\n  const Buttons = () =>\n    addIsUnsupported ? (\n      <ButtonPrimary disabled={true} $borderRadius=\"12px\" padding=\"12px\">\n        <ThemedText.DeprecatedMain mb=\"4px\">\n          <Trans>Unsupported Asset</Trans>\n        </ThemedText.DeprecatedMain>\n      </ButtonPrimary>\n    ) : !account ? (\n      <TraceEvent\n        events={[BrowserEvent.onClick]}\n        name={InterfaceEventName.CONNECT_WALLET_BUTTON_CLICKED}\n        properties={{ received_swap_quote: false }}\n        element={InterfaceElementName.CONNECT_WALLET_BUTTON}\n      >\n        <ButtonLight onClick={toggleWalletDrawer} $borderRadius=\"12px\" padding=\"12px\">\n          <Trans>Connect wallet</Trans>\n        </ButtonLight>\n      </TraceEvent>\n    ) : (\n      <AutoColumn gap=\"md\">\n        {(approvalA === ApprovalState.NOT_APPROVED ||\n          approvalA === ApprovalState.PENDING ||\n          approvalB === ApprovalState.NOT_APPROVED ||\n          approvalB === ApprovalState.PENDING) &&\n          isValid && (\n            <RowBetween>\n              {showApprovalA && (\n                <ButtonPrimary\n                  onClick={approveACallback}\n                  disabled={approvalA === ApprovalState.PENDING}\n                  width={showApprovalB ? '48%' : '100%'}\n                >\n                  {approvalA === ApprovalState.PENDING ? (\n                    <Dots>\n                      <Trans>Approving {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                    </Dots>\n                  ) : (\n                    <Trans>Approve {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                  )}\n                </ButtonPrimary>\n              )}\n              {showApprovalB && (\n                <ButtonPrimary\n                  onClick={approveBCallback}\n                  disabled={approvalB === ApprovalState.PENDING}\n                  width={showApprovalA ? '48%' : '100%'}\n                >\n                  {approvalB === ApprovalState.PENDING ? (\n                    <Dots>\n                      <Trans>Approving {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                    </Dots>\n                  ) : (\n                    <Trans>Approve {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                  )}\n                </ButtonPrimary>\n              )}\n            </RowBetween>\n          )}\n        <ButtonError\n          onClick={() => {\n            setShowConfirm(true)\n          }}\n          disabled={\n            !isValid ||\n            (!argentWalletContract && approvalA !== ApprovalState.APPROVED && !depositADisabled) ||\n            (!argentWalletContract && approvalB !== ApprovalState.APPROVED && !depositBDisabled)\n          }\n          error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n        >\n          <Text fontWeight={535}>{errorMessage ? errorMessage : <Trans>Preview</Trans>}</Text>\n        </ButtonError>\n      </AutoColumn>\n    )\n\n  const usdcValueCurrencyA = usdcValues[Field.CURRENCY_A]\n  const usdcValueCurrencyB = usdcValues[Field.CURRENCY_B]\n  const currencyAFiat = useMemo(\n    () => ({\n      data: usdcValueCurrencyA ? parseFloat(usdcValueCurrencyA.toSignificant()) : undefined,\n      isLoading: false,\n    }),\n    [usdcValueCurrencyA]\n  )\n  const currencyBFiat = useMemo(\n    () => ({\n      data: usdcValueCurrencyB ? parseFloat(usdcValueCurrencyB.toSignificant()) : undefined,\n      isLoading: false,\n    }),\n    [usdcValueCurrencyB]\n  )\n\n  const owner = useSingleCallResult(tokenId ? positionManager : null, 'ownerOf', [tokenId]).result?.[0]\n  const ownsNFT =\n    addressesAreEquivalent(owner, account) || addressesAreEquivalent(existingPositionDetails?.operator, account)\n  const showOwnershipWarning = Boolean(hasExistingPosition && account && !ownsNFT)\n\n\n  console.log(noLiquidity, \"<====noLiquidity\")\n  return (\n    <>\n      <ScrollablePage>\n        <TransactionConfirmationModal\n          isOpen={showConfirm}\n          onDismiss={handleDismissConfirmation}\n          attemptingTxn={attemptingTxn}\n          hash={txHash}\n          reviewContent={() => (\n            <ConfirmationModalContent\n              title={<Trans>Add Liquidity</Trans>}\n              onDismiss={handleDismissConfirmation}\n              topContent={() => (\n                <Review\n                  parsedAmounts={parsedAmounts}\n                  position={position}\n                  existingPosition={existingPosition}\n                  priceLower={priceLower}\n                  priceUpper={priceUpper}\n                  outOfRange={outOfRange}\n                  ticksAtLimit={ticksAtLimit}\n                />\n              )}\n              bottomContent={() => (\n                <ButtonPrimary style={{ marginTop: '1rem' }} onClick={onAdd}>\n                  <Text fontWeight={535} fontSize={20}>\n                    <Trans>Add</Trans>\n                  </Text>\n                </ButtonPrimary>\n              )}\n            />\n          )}\n          pendingText={pendingText}\n        />\n        <StyledBodyWrapper $hasExistingPosition={hasExistingPosition}>\n          <AddRemoveTabs\n            creating={false}\n            adding={true}\n            positionID={tokenId}\n            autoSlippage={DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE}\n            showBackLink={!hasExistingPosition}\n          >\n            {!hasExistingPosition && (\n              <Row justify=\"flex-end\" style={{ width: 'fit-content', minWidth: 'fit-content' }}>\n                <MediumOnly>\n                  <ButtonText onClick={clearAll}>\n                    <ThemedText.DeprecatedBlue fontSize=\"12px\">\n                      <Trans>Clear all</Trans>\n                    </ThemedText.DeprecatedBlue>\n                  </ButtonText>\n                </MediumOnly>\n              </Row>\n            )}\n          </AddRemoveTabs>\n          <Wrapper>\n            <ResponsiveTwoColumns wide={!hasExistingPosition}>\n              <AutoColumn gap=\"lg\">\n                {!hasExistingPosition && (\n                  <>\n                    <AutoColumn gap=\"md\">\n                      <RowBetween paddingBottom=\"20px\">\n                        <ThemedText.DeprecatedLabel>\n                          <Trans>Select pair</Trans>\n                        </ThemedText.DeprecatedLabel>\n                      </RowBetween>\n                      <RowBetween gap=\"md\">\n                        <CurrencyInputPanel\n                          value={formattedAmounts[Field.CURRENCY_A]}\n                          onUserInput={onFieldAInput}\n                          hideInput\n                          onMax={() => {\n                            onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                          }}\n                          onCurrencySelect={handleCurrencyASelect}\n                          showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                          currency={currencies[Field.CURRENCY_A] ?? null}\n                          id=\"add-liquidity-input-tokena\"\n                          showCommonBases\n                        />\n\n                        <CurrencyInputPanel\n                          value={formattedAmounts[Field.CURRENCY_B]}\n                          hideInput\n                          onUserInput={onFieldBInput}\n                          onCurrencySelect={handleCurrencyBSelect}\n                          onMax={() => {\n                            onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                          }}\n                          showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                          currency={currencies[Field.CURRENCY_B] ?? null}\n                          id=\"add-liquidity-input-tokenb\"\n                          showCommonBases\n                        />\n                      </RowBetween>\n\n                      <FeeSelector\n                        disabled={!quoteCurrency || !baseCurrency}\n                        feeAmount={feeAmount}\n                        handleFeePoolSelect={handleFeePoolSelect}\n                        currencyA={baseCurrency ?? undefined}\n                        currencyB={quoteCurrency ?? undefined}\n                      />\n                    </AutoColumn>{' '}\n                  </>\n                )}\n                {hasExistingPosition && existingPosition && (\n                  <PositionPreview\n                    position={existingPosition}\n                    title={<Trans>Selected range</Trans>}\n                    inRange={!outOfRange}\n                    ticksAtLimit={ticksAtLimit}\n                  />\n                )}\n              </AutoColumn>\n\n              {!hasExistingPosition && (\n                <>\n\n                  <DynamicSection gap=\"md\" disabled={!feeAmount || invalidPool}>\n                    <RowBetween>\n                      <ThemedText.DeprecatedLabel>\n                        <Trans>Set price range</Trans>\n                      </ThemedText.DeprecatedLabel>\n\n                      {Boolean(baseCurrency && quoteCurrency) && (\n                        <RowFixed gap=\"8px\">\n                          <PresetsButtons onSetFullRange={handleSetFullRange} />\n                          <RateToggle\n                            currencyA={baseCurrency as Currency}\n                            currencyB={quoteCurrency as Currency}\n                            handleRateToggle={() => {\n                              if (!ticksAtLimit[Bound.LOWER] && !ticksAtLimit[Bound.UPPER]) {\n                                onLeftRangeInput(\n                                  (invertPrice ? priceLower : priceUpper?.invert())?.toSignificant(6) ?? ''\n                                )\n                                onRightRangeInput(\n                                  (invertPrice ? priceUpper : priceLower?.invert())?.toSignificant(6) ?? ''\n                                )\n                                onFieldAInput(formattedAmounts[Field.CURRENCY_B] ?? '')\n                              }\n                              navigate(\n                                `/add/${currencyIdB as string}/${currencyIdA as string}${\n                                  feeAmount ? '/' + feeAmount : ''\n                                }`\n                              )\n                            }}\n                          />\n                        </RowFixed>\n                      )}\n                    </RowBetween>\n\n                    <RangeSelector\n                      priceLower={priceLower}\n                      priceUpper={priceUpper}\n                      getDecrementLower={getDecrementLower}\n                      getIncrementLower={getIncrementLower}\n                      getDecrementUpper={getDecrementUpper}\n                      getIncrementUpper={getIncrementUpper}\n                      onLeftRangeInput={onLeftRangeInput}\n                      onRightRangeInput={onRightRangeInput}\n                      currencyA={baseCurrency}\n                      currencyB={quoteCurrency}\n                      feeAmount={feeAmount}\n                      ticksAtLimit={ticksAtLimit}\n                    />\n\n                    {outOfRange && (\n                      <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\n                        <RowBetween>\n                          <AlertTriangle stroke={theme.deprecated_yellow3} size=\"16px\" />\n                          <ThemedText.DeprecatedYellow ml=\"12px\" fontSize=\"12px\">\n                            <Trans>\n                              Your position will not earn fees or be used in trades until the market price moves into\n                              your range.\n                            </Trans>\n                          </ThemedText.DeprecatedYellow>\n                        </RowBetween>\n                      </YellowCard>\n                    )}\n\n                    {invalidRange && (\n                      <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\n                        <RowBetween>\n                          <AlertTriangle stroke={theme.deprecated_yellow3} size=\"16px\" />\n                          <ThemedText.DeprecatedYellow ml=\"12px\" fontSize=\"12px\">\n                            <Trans>Invalid range selected. The min price must be lower than the max price.</Trans>\n                          </ThemedText.DeprecatedYellow>\n                        </RowBetween>\n                      </YellowCard>\n                    )}\n                  </DynamicSection>\n\n                  <DynamicSection gap=\"md\" disabled={!feeAmount || invalidPool}>\n                    {!noLiquidity ? (\n                      <>\n\n\n                      <h1>sdfsfsdfdf</h1>\n                        {Boolean(price && baseCurrency && quoteCurrency && !noLiquidity) && (\n                          <AutoColumn gap=\"2px\" style={{ marginTop: '0.5rem' }}>\n                            <Trans>\n                              <ThemedText.DeprecatedMain fontWeight={535} fontSize={12} color=\"text1\">\n                                Current price:\n                              </ThemedText.DeprecatedMain>\n                              <ThemedText.DeprecatedBody fontWeight={535} fontSize={20} color=\"text1\">\n                                {price && <HoverInlineText maxCharacters={20} text={formattedPrice} />}\n                              </ThemedText.DeprecatedBody>\n                              {baseCurrency && (\n                                <ThemedText.DeprecatedBody color=\"text2\" fontSize={12}>\n                                  {quoteCurrency?.symbol} per {baseCurrency.symbol}\n                                </ThemedText.DeprecatedBody>\n                              )}\n                            </Trans>\n                          </AutoColumn>\n                        )}\n                        <LiquidityChartRangeInput\n                          currencyA={baseCurrency ?? undefined}\n                          currencyB={quoteCurrency ?? undefined}\n                          feeAmount={feeAmount}\n                          ticksAtLimit={ticksAtLimit}\n                          price={\n                            price ? parseFloat((invertPrice ? price.invert() : price).toSignificant(8)) : undefined\n                          }\n                          priceLower={priceLower}\n                          priceUpper={priceUpper}\n                          onLeftRangeInput={onLeftRangeInput}\n                          onRightRangeInput={onRightRangeInput}\n                          interactive={!hasExistingPosition}\n                        />\n                      </>\n                    ) : (\n                      <AutoColumn gap=\"md\">\n\n\n                        {noLiquidity && (\n                          <BlueCard\n                            style={{\n                              display: 'flex',\n                              flexDirection: 'row',\n                              alignItems: 'center',\n                              padding: '1rem 1rem',\n                            }}\n                          >\n                            <ThemedText.DeprecatedBody\n                              fontSize={14}\n                              style={{ fontWeight: 535 }}\n                              textAlign=\"left\"\n                              color={theme.accent1}\n                            >\n                              <Trans>\n                                This pool must be initialized before you can add liquidity. To initialize, select a\n                                starting price for the pool. Then, enter your liquidity price range and deposit amount.\n                                Gas fees will be higher than usual due to the initialization transaction.\n                              </Trans>\n                            </ThemedText.DeprecatedBody>\n                          </BlueCard>\n                        )}\n                        <OutlineCard padding=\"12px\">\n                          <StyledInput\n                            className=\"start-price-input\"\n                            value={startPriceTypedValue}\n                            onUserInput={onStartPriceInput}\n                          />\n                        </OutlineCard>\n                        <RowBetween\n                          style={{\n                            backgroundColor: theme.surface1,\n                            padding: '12px',\n                            borderRadius: '12px',\n                          }}\n                        >\n                          <ThemedText.DeprecatedMain>\n                            <Trans>Starting {baseCurrency?.symbol} Price:</Trans>\n                          </ThemedText.DeprecatedMain>\n                          <ThemedText.DeprecatedMain>\n                            {price ? (\n                              <ThemedText.DeprecatedMain>\n                                <RowFixed>\n                                  <HoverInlineText\n                                    maxCharacters={20}\n                                    text={invertPrice ? price?.invert()?.toSignificant(8) : price?.toSignificant(8)}\n                                  />{' '}\n                                  <span style={{ marginLeft: '4px' }}>\n                                    {quoteCurrency?.symbol} per {baseCurrency?.symbol}\n                                  </span>\n                                </RowFixed>\n                              </ThemedText.DeprecatedMain>\n                            ) : (\n                              '-'\n                            )}\n                          </ThemedText.DeprecatedMain>\n                        </RowBetween>\n                      </AutoColumn>\n                    )}\n                  </DynamicSection>\n\n                </>\n              )}\n              <div>\n                <DynamicSection disabled={invalidPool || invalidRange || (noLiquidity && !startPriceTypedValue)}>\n                  <AutoColumn gap=\"md\">\n                    <ThemedText.DeprecatedLabel>\n                      {hasExistingPosition ? <Trans>Add more liquidity</Trans> : <Trans>Deposit amounts</Trans>}\n                    </ThemedText.DeprecatedLabel>\n\n                    <CurrencyInputPanel\n                      value={formattedAmounts[Field.CURRENCY_A]}\n                      onUserInput={onFieldAInput}\n                      onMax={() => {\n                        onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                      }}\n                      showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                      currency={currencies[Field.CURRENCY_A] ?? null}\n                      id=\"add-liquidity-input-tokena\"\n                      fiatValue={currencyAFiat}\n                      showCommonBases\n                      locked={depositADisabled}\n                    />\n\n                    <CurrencyInputPanel\n                      value={formattedAmounts[Field.CURRENCY_B]}\n                      onUserInput={onFieldBInput}\n                      onMax={() => {\n                        onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                      }}\n                      showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                      fiatValue={currencyBFiat}\n                      currency={currencies[Field.CURRENCY_B] ?? null}\n                      id=\"add-liquidity-input-tokenb\"\n                      showCommonBases\n                      locked={depositBDisabled}\n                    />\n                  </AutoColumn>\n                </DynamicSection>\n              </div>\n              <Buttons />\n            </ResponsiveTwoColumns>\n          </Wrapper>\n        </StyledBodyWrapper>\n        {showOwnershipWarning && <OwnershipWarning ownerAddress={owner} />}\n        {addIsUnsupported && (\n          <UnsupportedCurrencyFooter\n            show={addIsUnsupported}\n            currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]}\n          />\n        )}\n      </ScrollablePage>\n      <SwitchLocaleLink />\n    </>\n  )\n}\n","import { Pool, Position } from '@uniswap/v3-sdk'\nimport { usePool } from 'hooks/usePools'\nimport { PositionDetails } from 'types/position'\n\nimport { useCurrency } from './Tokens'\n\nexport function useDerivedPositionInfo(positionDetails: PositionDetails | undefined): {\n  position?: Position\n  pool?: Pool\n} {\n  const currency0 = useCurrency(positionDetails?.token0)\n  const currency1 = useCurrency(positionDetails?.token1)\n\n  // construct pool data\n  const [, pool] = usePool(currency0 ?? undefined, currency1 ?? undefined, positionDetails?.fee)\n\n  let position = undefined\n  if (pool && positionDetails) {\n    position = new Position({\n      pool,\n      liquidity: positionDetails.liquidity.toString(),\n      tickLower: positionDetails.tickLower,\n      tickUpper: positionDetails.tickUpper,\n    })\n  }\n\n  return {\n    position,\n    pool: pool ?? undefined,\n  }\n}\n","import { useWeb3React } from '@web3-react/core'\nimport ArgentWalletContractABI from 'wallet/src/abis/argent-wallet-contract.json'\nimport { ArgentWalletContract } from 'wallet/src/abis/types'\n\nimport { useContract } from './useContract'\nimport useIsArgentWallet from './useIsArgentWallet'\n\nexport function useArgentWalletContract(): ArgentWalletContract | null {\n  const { account } = useWeb3React()\n  const isArgentWallet = useIsArgentWallet()\n  return useContract(\n    isArgentWallet ? account ?? undefined : undefined,\n    ArgentWalletContractABI,\n    true\n  ) as ArgentWalletContract\n}\n","import { useWeb3React } from '@web3-react/core'\nimport { Navigate, useParams } from 'react-router-dom'\n\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport AddLiquidity from './index'\n\nexport default function AddLiquidityWithTokenRedirects() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string; feeAmount?: string }>()\n\n  const { chainId } = useWeb3React();\n\n\n\n  // prevent weth + eth\n  const isETHOrWETHA =\n    currencyIdA === 'smartbch' || (chainId !== undefined && currencyIdA === WRAPPED_NATIVE_CURRENCY[chainId]?.address)\n  const isETHOrWETHB =\n    currencyIdB === 'smartbch' || (chainId !== undefined && currencyIdB === WRAPPED_NATIVE_CURRENCY[chainId]?.address)\n\n\n    \n  if (\n    currencyIdA &&\n    currencyIdB &&\n    (currencyIdA.toLowerCase() === currencyIdB.toLowerCase() || (isETHOrWETHA && isETHOrWETHB))\n  ) {\n    return <Navigate to={`/add/${currencyIdA}`} replace />\n  }\n  return <AddLiquidity />\n}\n","export function addressesAreEquivalent(a: string | null | undefined, b: string | null | undefined) {\n  if (!a || !b) return false\n  return a === b || a.toLowerCase() === b.toLowerCase()\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport { asSupportedChain } from 'constants/chains'\n\nimport { nativeOnChain, WRAPPED_NATIVE_CURRENCY } from '../constants/tokens'\n\nexport function unwrappedToken(currency: Currency): Currency {\n  if (currency.isNative) return currency\n  const formattedChainId = asSupportedChain(currency.chainId)\n  if (formattedChainId && WRAPPED_NATIVE_CURRENCY[formattedChainId]?.equals(currency))\n    return nativeOnChain(currency.chainId)\n  return currency\n}\n"],"names":["_extends","InputPanel","styled","div","flexColumnNoWrap","hideInput","theme","surface2","Container","surface3","disabled","CurrencySelect","ButtonGray","selected","surface1","accent1","deprecated_shallowShadow","neutral1","darken","visible","pointerEvents","InputRow","flexRowNoWrap","LabelRow","neutral2","FiatRow","Aligner","span","StyledDropDown","DropDown","white","StyledTokenName","active","BREAKPOINTS","sm","StyledBalanceMax","button","accent2","StyledNumericalInput","NumericalInput","loadingOpacityMixin","StyledPrefetchBalancesWrapper","PrefetchBalancesWrapper","$fullWidth","CurrencyInputPanel","value","onUserInput","onMax","showMaxButton","onCurrencySelect","currency","otherCurrency","id","showCommonBases","showCurrencyAmount","disableNonToken","renderBalance","fiatValue","hideBalance","pair","locked","loading","rest","modalOpen","setModalOpen","useState","account","chainId","useWeb3React","selectedCurrencyBalance","useCurrencyBalance","undefined","useTheme","formatCurrencyAmount","useFormatter","handleDismissSearch","useCallback","chainAllowed","isSupportedChain","style","padding","borderRadius","className","$loading","shouldFetchOnAccountUpdate","onClick","RowFixed","marginRight","DoubleCurrencyLogo","currency0","token0","currency1","token1","size","margin","CurrencyLogo","symbol","Boolean","length","slice","RowBetween","LoadingOpacityContainer","FiatValue","height","ThemedText","DeprecatedBody","color","neutral3","fontWeight","fontSize","display","cursor","amount","type","NumberType","TokenNonTx","TraceEvent","events","BrowserEvent","name","SwapEventName","SWAP_MAX_TOKEN_AMOUNT_SELECTED","element","InterfaceElementName","MAX_TOKEN_AMOUNT_BUTTON","CurrencySearchModal","isOpen","onDismiss","selectedCurrency","otherSelectedCurrency","Tabs","StyledLink","Link","flex","deprecated_mediaWidth","deprecated_upToMedium","FindPoolTabsText","H1Small","StyledArrowLeft","ArrowLeft","FindPoolTabs","origin","position","to","AddRemoveTitleText","$center","AddRemoveTabs","adding","creating","autoSlippage","positionID","children","dispatch","useAppDispatch","poolLink","useLocation","pathname","includes","toString","align","resetMintState","resetMintV3State","stroke","Box","SettingsTab","hideRoutingSettings","DataCard","AutoColumn","CardBGImage","uImage","desaturate","CardBGImageSmaller","xlUnicorn","CardNoise","noise","CardSection","Break","DetailsFooter","Z_INDEX","deprecated_zero","show","StyledButtonEmpty","ButtonEmpty","AddressText","DeprecatedBlue","deprecated_upToSmall","UnsupportedCurrencyFooter","currencies","showDetails","setShowDetails","tokens","map","wrapped","unsupportedTokens","useUnsupportedTokens","Modal","Card","gap","DeprecatedMediumHeader","CloseIcon","data-testid","token","Object","keys","address","OutlineCard","AutoRow","ExternalLink","href","getExplorerLink","ExplorerDataType","ADDRESS","concat","ExplainerText","TitleRow","deprecated_accentWarning","Wrapper","deprecated_accentWarningSoft","ownerAddress","AlertTriangle","SubHeader","Path","path","fill","Area","series","xScale","yScale","xValue","yValue","useMemo","d","area","curve","curveStepAfter","x","y1","y0","filter","window","innerWidth","StyledGroup","g","Axis","axisGenerator","ref","axis","select","call","remove","AxisBottom","innerHeight","offset","transform","axisBottom","ticks","brushHandlePath","join","brushHandleAccentPath","OffScreenHandle","polygon","points","strokeWidth","strokeLinejoin","Handle","HandleAccent","opacity","hover","LabelGroup","TooltipBackground","rect","Tooltip","text","compare","a","b","aNorm","toFixed","bNorm","every","v","i","Brush","interactive","brushLabelValue","brushExtent","setBrushExtent","westHandleColor","eastHandleColor","brushRef","useRef","brushBehavior","localBrushExtent","setLocalBrushExtent","showLabels","setShowLabels","hovering","setHovering","previousBrushExtent","usePrevious","brushed","event","selection","mode","scaled","invert","useEffect","current","brushX","extent","Math","max","handleSize","on","transition","move","selectAll","attr","timeout","setTimeout","clearTimeout","flipWestHandle","flipEastHandle","showWestArrow","showEastArrow","westHandleInView","eastHandleInView","defs","linearGradient","x1","x2","y2","stop","stopColor","clipPath","y","width","onMouseEnter","onMouseLeave","rx","dominantBaseline","StyledLine","line","Line","count","Button","ZoomOverlay","Zoom","svg","setZoom","resetBrush","showResetButton","zoomLevels","zoomBehavior","zoomIn","zoomOut","zoomInitial","zoomReset","scaleBy","scaleTo","zoomIdentity","translate","scale","zoom","scaleExtent","min","RefreshCcw","ZoomIn","ZoomOut","xAccessor","price0","yAccessor","activeLiquidity","Chart","data","ticksAtLimit","styles","dimensions","margins","brushDomain","brushLabels","onBrushDomainChange","zoomRef","top","bottom","left","right","scales","scaleLinear","domain","initialMin","initialMax","range","newXscale","rescaleX","Bound","LOWER","UPPER","viewBox","overflow","mask","brush","handle","west","east","PRICE_FIXED_DIGITS","computeSurroundingTicks","activeTickProcessed","sortedTickData","pivot","ascending","previousTickProcessed","processedTicks","tick","Number","currentTickProcessed","liquidityActive","liquidityNet","JSBI","tickToPrice","push","reverse","getActiveTick","tickCurrent","feeAmount","floor","TICK_SPACINGS","MAX_THE_GRAPH_TICK_FETCH_VALUE","useAllV3Ticks","currencyA","currencyB","skipNumber","setSkipNumber","subgraphTickData","setSubgraphTickData","error","isLoading","skip","poolAddress","Pool","getAddress","V3_CORE_FACTORY_ADDRESSES","useAllV3TicksQuery","variables","toLowerCase","pollInterval","ms","client","apolloClient","useTicksFromSubgraph","tickData","useDensityChartData","pool","usePool","activeTick","PoolState","EXISTS","LOADING","findIndex","console","liquidity","subsequentTicks","ticksProcessed","usePoolActiveLiquidity","formatData","newData","t","chartEntry","parseFloat","formattedData","ZOOM_LEVELS","FeeAmount","LOWEST","LOW","MEDIUM","HIGH","ChartWrapper","InfoBox","message","icon","ColumnCenter","justifyContent","marginTop","textAlign","LiquidityChartRangeInput","price","priceLower","priceUpper","onLeftRangeInput","onRightRangeInput","tokenAColor","useColor","tokenBColor","isSorted","sortsBefore","onBrushDomainChangeEnded","leftRangeValue","rightRangeValue","batch","leftPrice","rightPrice","toSignificant","formatDelta","percent","sign","isUninitialized","minHeight","Inbox","Loader","CloudOff","saturate","critical","BarChart2","React","PositionPreview","title","inRange","baseCurrencyDefault","formatPrice","formatTickPrice","unwrappedToken","baseCurrency","setBaseCurrency","sorted","quoteCurrency","priceOf","token0PriceLower","token0PriceUpper","handleRateChange","removed","marginBottom","DeprecatedLabel","ml","RangeBadge","LightCard","mr","amount0","amount1","fee","BIPS_BASE","DeprecatedMain","RateToggle","handleRateToggle","justify","atLimit","direction","DeprecatedSmall","TokenTx","ButtonOutlined","attrs","$borderRadius","PresetsButtons","onSetFullRange","ERC20_INTERFACE","Interface","constant","inputs","outputs","payable","stateMutability","approveAmountCalldata","spender","isToken","Error","approveData","encodeFunctionData","toHex","quotient","Review","outOfRange","DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE","Percent","StyledBodyWrapper","BodyWrapper","$hasExistingPosition","AddLiquidityWrapper","AddLiquidity","PositionPageUnsupportedContent","navigate","useNavigate","currencyIdA","currencyIdB","feeAmountFromUrl","tokenId","useParams","provider","trace","useTrace","toggleWalletDrawer","useToggleAccountDrawer","addTransaction","useTransactionAdder","positionManager","useV3NFTPositionManagerContract","existingPositionDetails","positionLoading","useV3PositionFromTokenId","BigNumber","from","hasExistingPosition","existingPosition","positionDetails","useCurrency","Position","tickLower","tickUpper","useDerivedPositionInfo","values","equals","independentField","typedValue","startPriceTypedValue","useV3MintState","dependentField","pricesAtTicks","pricesAtLimit","parsedAmounts","currencyBalances","noLiquidity","errorMessage","invalidPool","invalidRange","depositADisabled","depositBDisabled","invertPrice","useV3DerivedMintInfo","formattedPrice","onFieldAInput","onFieldBInput","onStartPriceInput","useV3MintActionHandlers","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","deadline","useTransactionDeadline","txHash","setTxHash","formattedAmounts","usdcValues","Field","CURRENCY_A","useStablecoinValue","CURRENCY_B","maxAmounts","reduce","accumulator","field","maxAmountSpend","atMaxAmounts","equalTo","argentWalletContract","isArgentWallet","useIsArgentWallet","useContract","ArgentWalletContractABI","useArgentWalletContract","approvalA","approveACallback","useApproveCallback","NONFUNGIBLE_POSITION_MANAGER_ADDRESSES","approvalB","approveBCallback","allowedSlippage","useUserSlippageToleranceWithDefault","ZERO_PERCENT","async","onAdd","useNative","isNative","calldata","NonfungiblePositionManager","addCallParameters","slippageTolerance","recipient","createPool","txn","amountA","amountB","interface","connectedChainId","getSigner","getChainId","WrongChainError","estimateGas","then","estimate","newTxn","gasLimit","calculateGasMargin","sendTransaction","response","transactionInfo","TransactionType","ADD_LIQUIDITY_V3_POOL","baseCurrencyId","currencyId","quoteCurrencyId","expectedAmountBaseRaw","expectedAmountQuoteRaw","hash","sendAnalyticsEvent","LiquidityEventName","ADD_LIQUIDITY_SUBMITTED","label","catch","code","handleCurrencySelect","currencyNew","currencyIdOther","currencyIdNew","isETHOrWETHNew","WRAPPED_NATIVE_CURRENCY","isETHOrWETHOther","handleCurrencyASelect","currencyANew","idA","idB","handleCurrencyBSelect","currencyBNew","handleFeePoolSelect","newFeeAmount","handleDismissConfirmation","addIsUnsupported","useIsSwapUnsupported","clearAll","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","getSetFullRange","useRangeHopCallbacks","showApprovalA","ApprovalState","APPROVED","showApprovalB","pendingText","searchParams","setSearchParams","useSearchParams","handleSetFullRange","minPrice","set","maxPrice","oldSearchParams","get","oldMinPrice","isNaN","oldMaxPrice","Buttons","ButtonPrimary","mb","NOT_APPROVED","PENDING","Dots","ButtonError","Text","InterfaceEventName","CONNECT_WALLET_BUTTON_CLICKED","properties","received_swap_quote","CONNECT_WALLET_BUTTON","ButtonLight","usdcValueCurrencyA","usdcValueCurrencyB","currencyAFiat","currencyBFiat","owner","useSingleCallResult","result","ownsNFT","addressesAreEquivalent","operator","showOwnershipWarning","log","ScrollablePage","TransactionConfirmationModal","reviewContent","ConfirmationModalContent","topContent","bottomContent","showBackLink","Row","minWidth","MediumOnly","ButtonText","ResponsiveTwoColumns","wide","paddingBottom","toExact","FeeSelector","DynamicSection","RangeSelector","YellowCard","deprecated_yellow3","DeprecatedYellow","BlueCard","flexDirection","alignItems","StyledInput","backgroundColor","HoverInlineText","maxCharacters","marginLeft","h1","OwnershipWarning","SwitchLocaleLink","AddLiquidityWithTokenRedirects","isETHOrWETHA","isETHOrWETHB","Navigate","replace","formattedChainId","asSupportedChain","nativeOnChain"],"sourceRoot":""}