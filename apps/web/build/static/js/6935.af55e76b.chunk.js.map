{"version":3,"file":"static/js/6935.af55e76b.chunk.js","mappings":"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","sources":["components/Charts/PriceChart/index.tsx","components/Icons/Etherscan.tsx","components/Toggle/PillMultiToggle.tsx","components/Tokens/TokenDetails/About.tsx","components/Charts/AnimatedInLineChart.tsx","components/Charts/FadeInLineChart.tsx","components/Charts/PriceChart/OldChartModel.ts","components/Charts/PriceChart/format.ts","components/Charts/PriceChart/OldPriceChart.tsx","components/Tokens/TokenDetails/ChartSection.tsx","assets/svg/candlestick-chart-icon.svg","assets/svg/line-chart-icon.svg","components/Tokens/TokenDetails/ChartTypeSelectors/AdvancedPriceChartToggle.tsx","components/Tokens/TokenDetails/Resource.tsx","components/swap/SwapSkeleton.tsx","components/Tokens/TokenDetails/Skeleton.tsx","components/Tokens/TokenDetails/StatsSection.tsx","components/Tokens/TokenDetails/shared.ts"],"sourcesContent":["import { ChartHeader } from 'components/Charts/ChartHeader'\nimport { Chart, ChartModel, ChartModelParams } from 'components/Charts/ChartModel'\nimport { getCandlestickPriceBounds } from 'components/Charts/PriceChart/utils'\nimport { PriceChartType } from 'components/Charts/utils'\nimport { calculateDelta, DeltaArrow } from 'components/Tokens/TokenDetails/Delta'\nimport { PricePoint } from 'graphql/data/util'\nimport {\n  AreaData,\n  CandlestickData,\n  IPriceLine,\n  ISeriesApi,\n  LineStyle,\n  LineType,\n  PriceLineOptions,\n  UTCTimestamp,\n} from 'lightweight-charts'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { opacify } from 'theme/utils'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\ntype PriceChartData = CandlestickData<UTCTimestamp> & AreaData<UTCTimestamp>\n\ninterface PriceChartModelParams extends ChartModelParams<PriceChartData> {\n  type: PriceChartType\n}\n\nexport class PriceChartModel extends ChartModel<PriceChartData> {\n  protected series: ISeriesApi<'Area' | 'Candlestick'>\n  private type: PriceChartType\n  private minPriceLine: IPriceLine\n  private maxPriceLine: IPriceLine\n\n  constructor(chartDiv: HTMLDivElement, params: PriceChartModelParams) {\n    super(chartDiv, params)\n\n    this.type = params.type\n    this.series = this.type === PriceChartType.LINE ? this.api.addAreaSeries() : this.api.addCandlestickSeries()\n    this.series.setData(this.data)\n    this.minPriceLine = this.series.createPriceLine({ price: 0 })\n    this.maxPriceLine = this.series.createPriceLine({ price: 0 })\n    this.updateOptions(params)\n    this.fitContent()\n  }\n\n  updateOptions(params: PriceChartModelParams) {\n    super.updateOptions(params) // applies default options for all charts\n    const { data, theme, type } = params\n\n    // Handles changing between line/candlestick view\n    if (this.type !== type) {\n      this.type = params.type\n      this.api.removeSeries(this.series)\n      this.series = this.type === PriceChartType.LINE ? this.api.addAreaSeries() : this.api.addCandlestickSeries()\n      this.series.setData(data)\n\n      // Removing the series removes pricelines as well; new ones are initialized here and configured further below\n      this.minPriceLine = this.series.createPriceLine({ price: 0 })\n      this.maxPriceLine = this.series.createPriceLine({ price: 0 })\n    }\n\n    // Handles changes in data, e.g. time period selection\n    if (this.data !== data) {\n      this.data = data\n      this.series.setData(data)\n      this.fitContent()\n    }\n\n    const { min, max } = getCandlestickPriceBounds(data)\n\n    this.series.applyOptions({\n      priceLineVisible: false,\n      lastValueVisible: false,\n\n      // Line-specific options:\n      lineType: data.length < 20 ? LineType.WithSteps : LineType.Curved, // Stepped line is visually preferred for smaller datasets\n      lineWidth: 2,\n      lineColor: theme.accent1,\n      topColor: opacify(12, theme.accent1),\n      bottomColor: opacify(12, theme.accent1),\n      crosshairMarkerRadius: 5,\n      crosshairMarkerBorderColor: opacify(30, theme.accent1),\n      crosshairMarkerBorderWidth: 3,\n\n      // Candlestick-specific options:\n      upColor: theme.success,\n      wickUpColor: theme.success,\n      downColor: theme.critical,\n      wickDownColor: theme.critical,\n      borderVisible: false,\n    })\n\n    const priceLineOptions: Partial<PriceLineOptions> = {\n      color: theme.surface3,\n      lineWidth: 2,\n      lineStyle: LineStyle.Dashed,\n      axisLabelColor: theme.neutral3,\n      axisLabelTextColor: theme.neutral2,\n    }\n\n    this.minPriceLine.applyOptions({ price: min, ...priceLineOptions })\n    this.maxPriceLine.applyOptions({ price: max, ...priceLineOptions })\n  }\n}\n\nconst DeltaContainer = styled.div`\n  height: 16px;\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.neutral2};\n  gap: 4px;\n`\n\nexport const mockCandlestickData = (prices: PricePoint[] | undefined): PriceChartData[] => {\n  if (!prices) return []\n\n  let minIndex = 0\n  let maxIndex = 0\n\n  const mockedData = prices.map((pricePoint, index) => {\n    const open = index > 0 ? prices[index - 1].value : pricePoint.value * 0.9992\n    const close = pricePoint.value\n    const high = pricePoint.value + Math.abs(open - close) * 0.5\n    const low = pricePoint.value - Math.abs(close - open) * 0.5\n\n    if (prices[minIndex].value > pricePoint.value) {\n      minIndex = index\n    }\n    if (prices[maxIndex].value < pricePoint.value) {\n      maxIndex = index\n    }\n\n    return { value: pricePoint.value, time: pricePoint.timestamp as UTCTimestamp, open, close, high, low }\n  })\n\n  // Fixes extrema on line charts to match the low/high price lines\n  mockedData[minIndex].value = mockedData[minIndex].low\n  mockedData[maxIndex].value = mockedData[maxIndex].high\n\n  return mockedData\n}\n\ninterface PriceChartDeltaProps {\n  startingPrice: PriceChartData\n  endingPrice: PriceChartData\n  noColor?: boolean\n}\n\nexport function PriceChartDelta({ startingPrice, endingPrice, noColor }: PriceChartDeltaProps) {\n  const delta = calculateDelta(startingPrice.close ?? startingPrice.value, endingPrice.close ?? endingPrice.value)\n  const { formatDelta } = useFormatter()\n\n  return (\n    <DeltaContainer>\n      <DeltaArrow delta={delta} noColor={noColor} />\n      {formatDelta(delta)}\n    </DeltaContainer>\n  )\n}\n\ninterface PriceChartProps {\n  type: PriceChartType\n  height: number\n  prices?: PricePoint[]\n}\n\nexport function PriceChart({ height, prices, type }: PriceChartProps) {\n  const mockedPrices = useMemo(() => mockCandlestickData(prices), [prices]) // TODO(info) - update to use real candlestick data\n  const params = useMemo(() => ({ data: mockedPrices, type }), [mockedPrices, type])\n\n  // TODO(WEB-3430): Add error state for lack of data\n  if (!mockedPrices.length) return null\n\n  const lastPrice = mockedPrices[mockedPrices.length - 1]\n  return (\n    <Chart Model={PriceChartModel} params={params} height={height}>\n      {(crosshairData) => (\n        <ChartHeader\n          value={(crosshairData ?? lastPrice).value ?? (crosshairData ?? lastPrice).close}\n          additionalFields={\n            <PriceChartDelta startingPrice={mockedPrices[0]} endingPrice={crosshairData ?? lastPrice} />\n          }\n          valueFormatterType={NumberType.FiatTokenPrice}\n          time={crosshairData?.time}\n        />\n      )}\n    </Chart>\n  )\n}\n","import { ComponentProps } from 'react'\n\nexport const EtherscanLogo = (props: ComponentProps<'svg'>) => (\n  <svg\n    width=\"18\"\n    height=\"18\"\n    viewBox=\"0 0 18 18\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    stroke=\"transparent\"\n    {...props}\n  >\n    <path\n      d=\"M5.08042 8.66148C5.08043 8.58693 5.09517 8.51313 5.12378 8.44429C5.1524 8.37546 5.19432 8.31297 5.24716 8.26038C5.30001 8.2078 5.3627 8.16617 5.43167 8.13788C5.50064 8.1096 5.57452 8.09522 5.64907 8.09557L6.59187 8.09865C6.74218 8.09865 6.88635 8.15836 6.99263 8.26465C7.09893 8.37094 7.15865 8.5151 7.15865 8.66543V12.2303C7.26478 12.1988 7.4011 12.1652 7.55026 12.1301C7.65387 12.1058 7.74621 12.0471 7.8123 11.9637C7.87839 11.8803 7.91434 11.777 7.91432 11.6705V7.24848C7.91432 7.09814 7.97403 6.95397 8.08032 6.84766C8.1866 6.74135 8.33077 6.68162 8.4811 6.68158H9.42577C9.57609 6.68162 9.72026 6.74135 9.82655 6.84766C9.93284 6.95397 9.99255 7.09814 9.99255 7.24848V11.3526C9.99255 11.3526 10.2291 11.2569 10.4595 11.1596C10.545 11.1234 10.6181 11.0629 10.6694 10.9854C10.7208 10.908 10.7482 10.8172 10.7483 10.7242V5.83152C10.7483 5.68122 10.808 5.53707 10.9143 5.43078C11.0206 5.32449 11.1647 5.26478 11.315 5.26474H12.2597C12.41 5.26474 12.5542 5.32445 12.6604 5.43075C12.7667 5.53704 12.8265 5.6812 12.8265 5.83152V9.86056C13.6455 9.267 14.4754 8.55315 15.1341 7.69474C15.2297 7.57015 15.2929 7.42383 15.3181 7.26887C15.3434 7.1139 15.3299 6.95509 15.2788 6.8066C14.9739 5.9294 14.4894 5.12551 13.856 4.44636C13.2226 3.76722 12.4544 3.22777 11.6005 2.86256C10.7467 2.49734 9.82602 2.31439 8.89742 2.32542C7.96882 2.33645 7.05275 2.54121 6.20783 2.9266C5.36291 3.31199 4.60774 3.86952 3.99066 4.56352C3.37358 5.25751 2.90817 6.07269 2.62422 6.95689C2.34027 7.84107 2.24403 8.7748 2.34166 9.69832C2.43929 10.6218 2.72863 11.5148 3.19118 12.3201C3.27176 12.459 3.39031 12.572 3.53289 12.6459C3.67548 12.7198 3.83618 12.7514 3.99614 12.7372C4.17482 12.7215 4.3973 12.6992 4.66181 12.6681C4.77695 12.655 4.88326 12.6001 4.96048 12.5137C5.0377 12.4273 5.08043 12.3155 5.08053 12.1996L5.08042 8.66148Z\"\n      fill={props.fill ?? '#607BEE'}\n    />\n    <path\n      d=\"M5.05957 14.3792C6.05531 15.1036 7.23206 15.5384 8.45961 15.6356C9.68716 15.7326 10.9176 15.4883 12.0149 14.9294C13.1122 14.3705 14.0334 13.519 14.6768 12.4691C15.3201 11.4191 15.6605 10.2116 15.6601 8.98024C15.6601 8.82658 15.653 8.67457 15.6428 8.52344C13.2041 12.1605 8.70139 13.8609 5.05978 14.3786\"\n      fill={props.fill ?? '#607BEE'}\n    />\n  </svg>\n)\n","import { Trans } from '@lingui/macro'\nimport { createRef, useLayoutEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\n\nconst togglePadding = 4\n\nconst OptionsSelector = styled.div`\n  display: flex;\n  position: relative;\n  justify-content: flex-end;\n  gap: 12px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  border-radius: 20px;\n  height: 40px;\n  padding: ${togglePadding}px;\n  width: fit-content;\n`\n\ninterface ActivePillStyle {\n  left?: string\n  width?: string\n  transition?: string\n}\n\nconst ActivePill = styled.div`\n  position: absolute;\n  height: 30px;\n  background-color: ${({ theme }) => theme.surface3};\n  border-radius: 15px;\n  transition: left 0.3s ease, width 0.3s ease;\n`\nconst OptionButton = styled.button<{ active: boolean }>`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: transparent;\n  font-weight: 535;\n  font-size: 16px;\n  padding: 8px 12px;\n  border-radius: 15px;\n  line-height: 20px;\n  border: none;\n  cursor: pointer;\n  color: ${({ theme, active }) => (active ? theme.neutral1 : theme.neutral2)};\n  transition-duration: ${({ theme }) => theme.transition.duration.fast};\n  :hover {\n    ${({ active, theme }) => !active && `opacity: ${theme.opacity.hover};`}\n  }\n`\n\ninterface PillMultiToggleOption {\n  value: string // Value to be selected/stored, used as default display value\n  display?: JSX.Element // Optional custom display element\n}\n\nfunction getPillMultiToggleOption(option: PillMultiToggleOption | string): PillMultiToggleOption {\n  if (typeof option === 'string') {\n    return { value: option }\n  }\n  return option\n}\n\nexport default function PillMultiToggle({\n  options,\n  currentSelected,\n  onSelectOption,\n}: {\n  options: readonly (PillMultiToggleOption | string)[]\n  currentSelected: string\n  onSelectOption: (option: string) => void\n}) {\n  const buttonRefs = useMemo(() => options.map(() => createRef<HTMLButtonElement>()), [options])\n  const [buttonSizing, setButtonSizing] = useState<{ [option: string]: ActivePillStyle }>({})\n\n  // Do active pill width/left calculations\n  useLayoutEffect(() => {\n    const sizeMap = buttonRefs.reduce((acc, ref, index) => {\n      const current = ref.current\n      const { value } = getPillMultiToggleOption(options[index])\n\n      acc[value] = { width: (current?.offsetWidth ?? 0) + 'px', left: (current?.offsetLeft ?? 0) + 'px' }\n      return acc\n    }, {} as { [option: string]: ActivePillStyle })\n    setButtonSizing(sizeMap)\n  }, [options, buttonRefs])\n\n  return (\n    <OptionsSelector>\n      <ActivePill style={buttonSizing[currentSelected]} />\n      {options.map((option, i) => {\n        const { value, display } = getPillMultiToggleOption(option)\n        const ref = buttonRefs[i]\n        return (\n          <OptionButton ref={ref} key={value} active={currentSelected === value} onClick={() => onSelectOption(value)}>\n            {display ?? <Trans>{value}</Trans>}\n          </OptionButton>\n        )\n      })}\n    </OptionsSelector>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { ChainId } from '@uniswap/sdk-core'\nimport { getChainInfo } from 'constants/chainInfo'\nimport { useState } from 'react'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { textFadeIn } from 'theme/styles'\n\nimport Resource from './Resource'\nimport { NoInfoAvailable, TRUNCATE_CHARACTER_COUNT, truncateDescription, TruncateDescriptionButton } from './shared'\n\nconst TokenDescriptionContainer = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n  max-height: fit-content;\n  line-height: 24px;\n  white-space: pre-wrap;\n`\n\nexport const AboutContainer = styled.div`\n  gap: 16px;\n  padding: 24px 0px;\n  ${textFadeIn}\n`\nexport const AboutHeader = styled(ThemedText.MediumHeader)`\n  font-size: 28px !important;\n`\n\nconst ResourcesContainer = styled.div`\n  display: flex;\n  padding-top: 12px;\n  gap: 14px;\n`\n\ntype AboutSectionProps = {\n  address: string\n  chainId: ChainId\n  description?: string | null\n  homepageUrl?: string | null\n  twitterName?: string | null\n}\n\nexport function AboutSection({ address, chainId, description, homepageUrl, twitterName }: AboutSectionProps) {\n  const [isDescriptionTruncated, setIsDescriptionTruncated] = useState(true)\n  const shouldTruncate = !!description && description.length > TRUNCATE_CHARACTER_COUNT\n\n  const tokenDescription = shouldTruncate && isDescriptionTruncated ? truncateDescription(description) : description\n\n  const { explorer, infoLink } = getChainInfo(chainId)\n\n  return (\n    <AboutContainer data-testid=\"token-details-about-section\">\n      <AboutHeader>\n        <Trans>About</Trans>\n      </AboutHeader>\n      <TokenDescriptionContainer>\n        {!description && (\n          <NoInfoAvailable>\n            <Trans>No token information available</Trans>\n          </NoInfoAvailable>\n        )}\n        <p>{tokenDescription}</p>\n        {shouldTruncate && (\n          <TruncateDescriptionButton onClick={() => setIsDescriptionTruncated(!isDescriptionTruncated)}>\n            {isDescriptionTruncated ? <Trans>Show more</Trans> : <Trans>Hide</Trans>}\n          </TruncateDescriptionButton>\n        )}\n      </TokenDescriptionContainer>\n      <br />\n      <ThemedText.SubHeaderSmall>\n        <Trans>Links</Trans>\n      </ThemedText.SubHeaderSmall>\n      <ResourcesContainer data-cy=\"resources-container\">\n        <Resource\n          name={chainId === ChainId.MAINNET ? 'Etherscan' : 'Block Explorer'}\n          link={`${explorer}${address === 'NATIVE' ? '' : 'address/' + address}`}\n        />\n        <Resource name=\"More analytics\" link={`${infoLink}tokens/${address}`} />\n        {homepageUrl && <Resource name=\"Website\" link={homepageUrl} />}\n        {twitterName && <Resource name=\"Twitter\" link={`https://twitter.com/${twitterName}`} />}\n      </ResourcesContainer>\n    </AboutContainer>\n  )\n}\n","import { Group } from '@visx/group'\nimport { LinePath } from '@visx/shape'\nimport { easeSinOut } from 'd3'\nimport ms from 'ms'\nimport React from 'react'\nimport { useEffect, useRef, useState } from 'react'\nimport { animated, useSpring } from 'react-spring'\nimport { useTheme } from 'styled-components'\n\nimport { LineChartProps } from './LineChart'\n\ntype AnimatedInLineChartProps<T> = Omit<LineChartProps<T>, 'height' | 'width' | 'children'>\n\nconst config = {\n  duration: ms(`0.8s`),\n  easing: easeSinOut,\n}\n\n// code reference: https://airbnb.io/visx/lineradial\n\nfunction AnimatedInLineChart<T>({\n  data,\n  getX,\n  getY,\n  marginTop,\n  curve,\n  color,\n  strokeWidth,\n}: AnimatedInLineChartProps<T>) {\n  const lineRef = useRef<SVGPathElement>(null)\n  const [lineLength, setLineLength] = useState(0)\n  const [shouldAnimate, setShouldAnimate] = useState(false)\n  const [hasAnimatedIn, setHasAnimatedIn] = useState(false)\n\n  const spring = useSpring({\n    frame: shouldAnimate ? 0 : 1,\n    config,\n    onRest: () => {\n      setShouldAnimate(false)\n      setHasAnimatedIn(true)\n    },\n  })\n\n  // We need to check to see after the \"invisble\" line has been drawn\n  // what the length is to be able to animate in the line for the first time\n  // This will run on each render to see if there is a new line length\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    if (lineRef.current) {\n      const length = lineRef.current.getTotalLength()\n      if (length !== lineLength) {\n        setLineLength(length)\n      }\n      if (length > 0 && !shouldAnimate && !hasAnimatedIn) {\n        setShouldAnimate(true)\n      }\n    }\n  })\n  const theme = useTheme()\n  const lineColor = color ?? theme.accent1\n\n  return (\n    <Group top={marginTop}>\n      <LinePath curve={curve} x={getX} y={getY}>\n        {({ path }) => {\n          const d = path(data) || ''\n          return (\n            <>\n              <animated.path\n                d={d}\n                ref={lineRef}\n                strokeWidth={strokeWidth}\n                strokeOpacity={hasAnimatedIn ? 1 : 0}\n                fill=\"none\"\n                stroke={lineColor}\n              />\n              {shouldAnimate && lineLength !== 0 && (\n                <animated.path\n                  d={d}\n                  strokeWidth={strokeWidth}\n                  fill=\"none\"\n                  stroke={lineColor}\n                  strokeDashoffset={spring.frame.to((v) => v * lineLength)}\n                  strokeDasharray={lineLength}\n                />\n              )}\n            </>\n          )\n        }}\n      </LinePath>\n    </Group>\n  )\n}\n\nexport default React.memo(AnimatedInLineChart) as typeof AnimatedInLineChart\n","import { Group } from '@visx/group'\nimport { LinePath } from '@visx/shape'\nimport { easeCubicInOut } from 'd3'\nimport React from 'react'\nimport { useEffect, useRef, useState } from 'react'\nimport { animated, useSpring } from 'react-spring'\nimport { useTheme } from 'styled-components'\n\nimport { LineChartProps } from './LineChart'\n\ntype FadedInLineChartProps<T> = Omit<LineChartProps<T>, 'height' | 'width' | 'children'> & { dashed?: boolean }\n\nconst config = {\n  duration: 3000,\n  easing: easeCubicInOut,\n}\n\n// code reference: https://airbnb.io/visx/lineradial\n\nfunction FadedInLineChart<T>({\n  data,\n  getX,\n  getY,\n  marginTop,\n  curve,\n  color,\n  strokeWidth,\n  dashed,\n}: FadedInLineChartProps<T>) {\n  const lineRef = useRef<SVGPathElement>(null)\n  const [lineLength, setLineLength] = useState(0)\n  const [shouldAnimate, setShouldAnimate] = useState(false)\n  const [hasAnimatedIn, setHasAnimatedIn] = useState(false)\n\n  const spring = useSpring({\n    frame: shouldAnimate ? 0 : 1,\n    config,\n    onRest: () => {\n      setShouldAnimate(false)\n      setHasAnimatedIn(true)\n    },\n  })\n\n  // We need to check to see after the \"invisble\" line has been drawn\n  // what the length is to be able to animate in the line for the first time\n  // This will run on each render to see if there is a new line length\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    if (lineRef.current) {\n      const length = lineRef.current.getTotalLength()\n      if (length !== lineLength) {\n        setLineLength(length)\n      }\n      if (length > 0 && !shouldAnimate && !hasAnimatedIn) {\n        setShouldAnimate(true)\n      }\n    }\n  })\n  const theme = useTheme()\n  const lineColor = color ?? theme.accent1\n\n  return (\n    <Group top={marginTop}>\n      <LinePath curve={curve} x={getX} y={getY}>\n        {({ path }) => {\n          const d = path(data) || ''\n          return (\n            <>\n              <animated.path\n                d={d}\n                ref={lineRef}\n                strokeWidth={strokeWidth}\n                strokeOpacity={hasAnimatedIn ? 1 : spring.frame.to((v) => 1 - v)}\n                fill=\"none\"\n                stroke={lineColor}\n                strokeDasharray={dashed ? '4,4' : undefined}\n              />\n            </>\n          )\n        }}\n      </LinePath>\n    </Group>\n  )\n}\n\nexport default React.memo(FadedInLineChart) as typeof FadedInLineChart\n","import { ScaleLinear, scaleLinear } from 'd3'\nimport { PricePoint } from 'graphql/data/util'\n\nimport { cleanPricePoints, getPriceBounds } from './utils'\n\nexport enum ChartErrorType {\n  NO_DATA_AVAILABLE,\n  NO_RECENT_VOLUME,\n  INVALID_CHART,\n}\n\ntype ChartDimensions = {\n  width: number\n  height: number\n  marginTop: number\n  marginBottom: number\n}\n\nexport type ErroredChartModel = { error: ChartErrorType; dimensions: ChartDimensions }\n\nexport type ChartModel = {\n  prices: PricePoint[]\n  startingPrice: PricePoint\n  endingPrice: PricePoint\n  lastValidPrice: PricePoint\n  blanks: PricePoint[][]\n  timeScale: ScaleLinear<number, number>\n  priceScale: ScaleLinear<number, number>\n  dimensions: ChartDimensions\n  error: undefined\n}\n\ntype ChartModelArgs = { prices?: PricePoint[]; dimensions: ChartDimensions }\nexport function buildChartModel({ dimensions, prices }: ChartModelArgs): ChartModel | ErroredChartModel {\n  if (!prices) {\n    return { error: ChartErrorType.NO_DATA_AVAILABLE, dimensions }\n  }\n\n  const innerHeight = dimensions.height - dimensions.marginTop - dimensions.marginBottom\n  if (innerHeight < 0) {\n    return { error: ChartErrorType.INVALID_CHART, dimensions }\n  }\n\n  const { prices: fixedPrices, blanks, lastValidPrice } = cleanPricePoints(prices)\n  if (fixedPrices.length < 2 || !lastValidPrice) {\n    return { error: ChartErrorType.NO_RECENT_VOLUME, dimensions }\n  }\n\n  const startingPrice = prices[0]\n  const endingPrice = prices[prices.length - 1]\n  const { min, max } = getPriceBounds(prices)\n\n  // x-axis scale\n  const timeScale = scaleLinear().domain([startingPrice.timestamp, endingPrice.timestamp]).range([0, dimensions.width])\n\n  // y-axis scale\n  const priceScale = scaleLinear().domain([min, max]).range([innerHeight, 0])\n\n  return {\n    prices: fixedPrices,\n    startingPrice,\n    endingPrice,\n    lastValidPrice,\n    blanks,\n    timeScale,\n    priceScale,\n    dimensions,\n    error: undefined,\n  }\n}\n","import { NumberValue } from 'd3'\nimport { TimePeriod } from 'graphql/data/util'\n\nconst HOUR_OPTIONS = { hour: 'numeric', minute: 'numeric', hour12: true } as const // e.g. '12:00 PM'\nconst DAY_HOUR_OPTIONS = { month: 'short', day: 'numeric', hour: 'numeric', minute: '2-digit', hour12: true } as const // e.g. 'Jul 4, 12:00 PM'\nconst MONTH_DAY_OPTIONS = { month: 'long', day: 'numeric' } as const // e.g. 'July 4'\nconst MONTH_YEAR_DAY_OPTIONS = { month: 'short', year: 'numeric', day: 'numeric' } as const // e.g. 'Jul 4, 2021'\nconst MONTH_OPTIONS = { month: 'long' } as const // e.g. 'July'\nconst WEEK_OPTIONS = { weekday: 'long' } as const // e.g. 'Sunday'\n\n// Timestamps are formatted differently based on their location/usage in charts\nexport enum TimestampFormatterType {\n  TICK = 'tick',\n  CROSSHAIR = 'crosshair',\n}\n\nconst TIME_PERIOD_TO_FORMAT_OPTIONS: Record<TimePeriod, Record<TimestampFormatterType, Intl.DateTimeFormatOptions>> = {\n  [TimePeriod.HOUR]: {\n    [TimestampFormatterType.TICK]: HOUR_OPTIONS,\n    [TimestampFormatterType.CROSSHAIR]: DAY_HOUR_OPTIONS,\n  },\n  [TimePeriod.DAY]: {\n    [TimestampFormatterType.TICK]: HOUR_OPTIONS,\n    [TimestampFormatterType.CROSSHAIR]: DAY_HOUR_OPTIONS,\n  },\n  [TimePeriod.WEEK]: {\n    [TimestampFormatterType.TICK]: WEEK_OPTIONS,\n    [TimestampFormatterType.CROSSHAIR]: DAY_HOUR_OPTIONS,\n  },\n  [TimePeriod.MONTH]: {\n    [TimestampFormatterType.TICK]: MONTH_DAY_OPTIONS,\n    [TimestampFormatterType.CROSSHAIR]: DAY_HOUR_OPTIONS,\n  },\n  [TimePeriod.YEAR]: {\n    [TimestampFormatterType.TICK]: MONTH_OPTIONS,\n    [TimestampFormatterType.CROSSHAIR]: MONTH_YEAR_DAY_OPTIONS,\n  },\n}\n\n/**\n * Returns a function to format timestamps, specialized by timePeriod and type to display ('tick' or 'crosshair'),\n * localized for the given locale.\n */\n// TODO(WEB-2986): remove d3-specific util once PriceChart is moved to lightweight-charts\nexport function getTimestampFormatter(\n  timePeriod: TimePeriod,\n  locale: string,\n  formatterType: TimestampFormatterType\n): (n: NumberValue) => string {\n  // Choose appropriate formatting options based on type and timePeriod\n  const options = TIME_PERIOD_TO_FORMAT_OPTIONS[timePeriod][formatterType]\n  const dateTimeFormatter = new Intl.DateTimeFormat(locale, options)\n\n  return (timestamp: NumberValue): string => {\n    const epochTimeInMilliseconds = timestamp.valueOf() * 1000\n    return dateTimeFormatter.format(epochTimeInMilliseconds)\n  }\n}\n","import { Trans } from '@lingui/macro'\nimport { AxisBottom } from '@visx/axis'\nimport { localPoint } from '@visx/event'\nimport { EventType } from '@visx/event/lib/types'\nimport { GlyphCircle } from '@visx/glyph'\nimport { Line } from '@visx/shape'\nimport AnimatedInLineChart from 'components/Charts/AnimatedInLineChart'\nimport FadedInLineChart from 'components/Charts/FadeInLineChart'\nimport {\n  buildChartModel,\n  ChartErrorType,\n  ChartModel,\n  ErroredChartModel,\n} from 'components/Charts/PriceChart/OldChartModel'\nimport { getNearestPricePoint, getTicks } from 'components/Charts/PriceChart/utils'\nimport { MouseoverTooltip } from 'components/Tooltip'\nimport { curveCardinal } from 'd3'\nimport { PricePoint, TimePeriod } from 'graphql/data/util'\nimport { useActiveLocale } from 'hooks/useActiveLocale'\nimport { ReactNode, useCallback, useEffect, useMemo, useState } from 'react'\nimport { Info } from 'react-feather'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { textFadeIn } from 'theme/styles'\nimport { useFormatter } from 'utils/formatNumbers'\n\nimport { calculateDelta, DeltaArrow } from '../../Tokens/TokenDetails/Delta'\nimport { getTimestampFormatter, TimestampFormatterType } from './format'\n\nconst CHART_MARGIN = { top: 100, bottom: 48, crosshair: 72 }\n\nconst ChartHeaderWrapper = styled.div<{ stale?: boolean }>`\n  position: absolute;\n  ${textFadeIn};\n  animation-duration: ${({ theme }) => theme.transition.duration.medium};\n  ${({ theme, stale }) => stale && `color: ${theme.neutral2}`};\n`\nconst PriceContainer = styled.div`\n  display: flex;\n  gap: 6px;\n  font-size: 24px;\n  line-height: 44px;\n`\nconst DeltaContainer = styled.div`\n  height: 16px;\n  display: flex;\n  align-items: center;\n  margin-top: 4px;\n  color: ${({ theme }) => theme.neutral2};\n`\n\ninterface ChartDeltaProps {\n  startingPrice: PricePoint\n  endingPrice: PricePoint\n  noColor?: boolean\n}\n\nfunction ChartDelta({ startingPrice, endingPrice, noColor }: ChartDeltaProps) {\n  const delta = calculateDelta(startingPrice.value, endingPrice.value)\n  const { formatDelta } = useFormatter()\n\n  return (\n    <DeltaContainer>\n      {formatDelta(delta)}\n      <DeltaArrow delta={delta} noColor={noColor} />\n    </DeltaContainer>\n  )\n}\n\ninterface ChartHeaderProps {\n  crosshairPrice?: PricePoint\n  chart: ChartModel\n}\n\nfunction ChartHeader({ crosshairPrice, chart }: ChartHeaderProps) {\n  const { formatFiatPrice } = useFormatter()\n\n  const { startingPrice, endingPrice, lastValidPrice } = chart\n\n  const priceOutdated = lastValidPrice !== endingPrice\n  const displayPrice = crosshairPrice ?? (priceOutdated ? lastValidPrice : endingPrice)\n\n  const displayIsStale = priceOutdated && !crosshairPrice\n  return (\n    <ChartHeaderWrapper data-cy=\"chart-header\" stale={displayIsStale}>\n      <PriceContainer>\n        <ThemedText.HeadlineLarge color=\"inherit\">\n          {formatFiatPrice({ price: displayPrice.value })}\n        </ThemedText.HeadlineLarge>\n        {displayIsStale && (\n          <MouseoverTooltip text={<Trans>This price may not be up-to-date due to low trading volume.</Trans>}>\n            <Info size={16} data-testid=\"chart-stale-icon\" />\n          </MouseoverTooltip>\n        )}\n      </PriceContainer>\n      <ChartDelta startingPrice={startingPrice} endingPrice={displayPrice} noColor={priceOutdated} />\n    </ChartHeaderWrapper>\n  )\n}\n\nfunction ChartBody({ chart, timePeriod }: { chart: ChartModel; timePeriod: TimePeriod }) {\n  const locale = useActiveLocale()\n\n  const { prices, blanks, timeScale, priceScale, dimensions } = chart\n\n  const { ticks, tickTimestampFormatter, crosshairTimestampFormatter } = useMemo(() => {\n    // Limits the number of ticks based on graph width\n    const maxTicks = Math.floor(dimensions.width / 100)\n\n    const ticks = getTicks(chart.startingPrice.timestamp, chart.endingPrice.timestamp, timePeriod, maxTicks)\n    const tickTimestampFormatter = getTimestampFormatter(timePeriod, locale, TimestampFormatterType.TICK)\n    const crosshairTimestampFormatter = getTimestampFormatter(timePeriod, locale, TimestampFormatterType.CROSSHAIR)\n\n    return { ticks, tickTimestampFormatter, crosshairTimestampFormatter }\n  }, [dimensions.width, chart.startingPrice.timestamp, chart.endingPrice.timestamp, timePeriod, locale])\n\n  const theme = useTheme()\n  const [crosshair, setCrosshair] = useState<{ x: number; y: number; price: PricePoint }>()\n  const resetCrosshair = useCallback(() => setCrosshair(undefined), [setCrosshair])\n\n  const setCrosshairOnHover = useCallback(\n    (event: Element | EventType) => {\n      const { x } = localPoint(event) || { x: 0 }\n      const price = getNearestPricePoint(x, prices, timeScale)\n\n      if (price) {\n        const x = timeScale(price.timestamp)\n        const y = priceScale(price.value)\n        setCrosshair({ x, y, price })\n      }\n    },\n    [priceScale, timeScale, prices]\n  )\n\n  // Resets the crosshair when the time period is changed, to avoid stale UI\n  useEffect(() => resetCrosshair(), [resetCrosshair, timePeriod])\n\n  const crosshairEdgeMax = dimensions.width * 0.85\n  const crosshairAtEdge = !!crosshair && crosshair.x > crosshairEdgeMax\n\n  // Default curve doesn't look good for the HOUR chart.\n  // Higher values make the curve more rigid, lower values smooth the curve but make it less \"sticky\" to real data points,\n  // making it unacceptable for shorter durations / smaller variances.\n  const curveTension = timePeriod === TimePeriod.HOUR ? 1 : 0.9\n\n  const getX = useCallback((p: PricePoint) => timeScale(p.timestamp), [timeScale])\n  const getY = useCallback((p: PricePoint) => priceScale(p.value), [priceScale])\n  const curve = useMemo(() => curveCardinal.tension(curveTension), [curveTension])\n\n  return (\n    <>\n      <ChartHeader chart={chart} crosshairPrice={crosshair?.price} />\n      <svg data-cy=\"price-chart\" width={dimensions.width} height={dimensions.height} style={{ minWidth: '100%' }}>\n        <AnimatedInLineChart\n          data={prices}\n          getX={getX}\n          getY={getY}\n          marginTop={dimensions.marginTop}\n          curve={curve}\n          strokeWidth={2}\n        />\n        {blanks.map((blank, index) => (\n          <FadedInLineChart\n            key={index}\n            data={blank}\n            getX={getX}\n            getY={getY}\n            marginTop={dimensions.marginTop}\n            curve={curve}\n            strokeWidth={2}\n            color={theme.neutral3}\n            dashed\n          />\n        ))}\n        {crosshair !== undefined ? (\n          <g>\n            <AxisBottom\n              top={dimensions.height - 1}\n              scale={timeScale}\n              stroke={theme.surface3}\n              hideTicks={true}\n              tickValues={ticks}\n              tickFormat={tickTimestampFormatter}\n              tickLabelProps={() => ({\n                fill: theme.neutral2,\n                fontSize: 12,\n                textAnchor: 'middle',\n                transform: 'translate(0 -29)',\n              })}\n            />\n            <text\n              x={crosshair.x + (crosshairAtEdge ? -4 : 4)}\n              y={CHART_MARGIN.crosshair + 10}\n              textAnchor={crosshairAtEdge ? 'end' : 'start'}\n              fontSize={12}\n              fill={theme.neutral2}\n            >\n              {crosshairTimestampFormatter(crosshair.price.timestamp)}\n            </text>\n            <Line\n              from={{ x: crosshair.x, y: CHART_MARGIN.crosshair }}\n              to={{ x: crosshair.x, y: dimensions.height }}\n              stroke={theme.surface3}\n              strokeWidth={1}\n              pointerEvents=\"none\"\n              strokeDasharray=\"4,4\"\n            />\n            <GlyphCircle\n              left={crosshair.x}\n              top={crosshair.y + dimensions.marginTop}\n              size={50}\n              fill={theme.accent1}\n              stroke={theme.surface3}\n              strokeWidth={0.5}\n            />\n          </g>\n        ) : (\n          <AxisBottom\n            hideAxisLine={true}\n            scale={timeScale}\n            stroke={theme.surface3}\n            top={dimensions.height - 1}\n            hideTicks\n          />\n        )}\n        {!dimensions.width && (\n          // Ensures an axis is drawn even if the width is not yet initialized.\n          <line\n            x1={0}\n            y1={dimensions.height - 1}\n            x2=\"100%\"\n            y2={dimensions.height - 1}\n            fill=\"transparent\"\n            shapeRendering=\"crispEdges\"\n            stroke={theme.surface3}\n            strokeWidth={1}\n          />\n        )}\n        <rect\n          x={0}\n          y={0}\n          width={dimensions.width}\n          height={dimensions.height}\n          fill=\"transparent\"\n          onTouchStart={setCrosshairOnHover}\n          onTouchMove={setCrosshairOnHover}\n          onMouseMove={setCrosshairOnHover}\n          onMouseLeave={resetCrosshair}\n        />\n      </svg>\n    </>\n  )\n}\n\nconst CHART_ERROR_MESSAGES: Record<ChartErrorType, ReactNode> = {\n  [ChartErrorType.NO_DATA_AVAILABLE]: <Trans>Missing chart data</Trans>,\n  [ChartErrorType.NO_RECENT_VOLUME]: <Trans>Missing price data due to recently low trading volume on Uniswap v3</Trans>,\n  [ChartErrorType.INVALID_CHART]: <Trans>Invalid chart</Trans>,\n}\n\nfunction MissingPriceChart({ chart }: { chart: ErroredChartModel }) {\n  const theme = useTheme()\n  const midPoint = chart.dimensions.height / 2 + 45\n\n  return (\n    <>\n      <ChartHeaderWrapper data-cy=\"chart-header\">\n        <ThemedText.HeadlineLarge fontSize={24} color=\"neutral3\">\n          Price unavailable\n        </ThemedText.HeadlineLarge>\n        <ThemedText.BodySmall color=\"neutral3\">{CHART_ERROR_MESSAGES[chart.error]}</ThemedText.BodySmall>\n      </ChartHeaderWrapper>\n      <svg\n        data-cy=\"missing-chart\"\n        width={chart.dimensions.width}\n        height={chart.dimensions.height}\n        style={{ minWidth: '100%' }}\n      >\n        <path\n          d={`M 0 ${midPoint} Q 104 ${midPoint - 70}, 208 ${midPoint} T 416 ${midPoint}\n          M 416 ${midPoint} Q 520 ${midPoint - 70}, 624 ${midPoint} T 832 ${midPoint}`}\n          stroke={theme.surface3}\n          fill=\"transparent\"\n          strokeWidth=\"2\"\n        />\n      </svg>\n    </>\n  )\n}\n\ninterface PriceChartProps {\n  width: number\n  height: number\n  prices?: PricePoint[]\n  timePeriod: TimePeriod\n}\n\nexport function PriceChart({ width, height, prices, timePeriod }: PriceChartProps) {\n  const chart = useMemo(\n    () =>\n      buildChartModel({\n        dimensions: { width, height, marginBottom: CHART_MARGIN.bottom, marginTop: CHART_MARGIN.top },\n        prices,\n      }),\n    [width, height, prices]\n  )\n\n  if (chart.error !== undefined) {\n    return <MissingPriceChart chart={chart} />\n  }\n\n  return <ChartBody chart={chart} timePeriod={timePeriod} />\n}\n","import { ParentSize } from '@visx/responsive'\nimport { PriceChart } from 'components/Charts/PriceChart'\nimport { StackedLineChart } from 'components/Charts/StackedLineChart'\nimport TimePeriodSelector from 'components/Charts/TimeSelector'\nimport { ChartType, PriceChartType } from 'components/Charts/utils'\nimport { VolumeChart } from 'components/Charts/VolumeChart'\nimport { LoadingChart } from 'components/Tokens/TokenDetails/Skeleton'\nimport { useInfoTDPEnabled } from 'featureFlags/flags/infoTDP'\nimport { TokenPriceQuery } from 'graphql/data/TokenPrice'\nimport { isPricePoint, PricePoint, TimePeriod } from 'graphql/data/util'\nimport { Suspense, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Z_INDEX } from 'theme/zIndex'\n\nimport { PriceChart as OldPriceChart } from '../../Charts/PriceChart/OldPriceChart'\n\nconst TDP_CHART_HEIGHT_PX = 380\n\nexport const ChartContainer = styled.div<{ isInfoTDPEnabled: boolean }>`\n  display: flex;\n  flex-direction: column;\n  ${({ isInfoTDPEnabled }) => !isInfoTDPEnabled && 'height: 436px;'}\n  ${({ isInfoTDPEnabled }) => !isInfoTDPEnabled && 'margin-bottom: : 24px;'}\n  align-items: flex-start;\n  width: 100%;\n  position: relative;\n`\n\nconst TimePeriodSelectorContainer = styled.div`\n  position: absolute;\n  top: 4px;\n  right: 72px;\n  z-index: ${Z_INDEX.active};\n\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoint.lg}px) {\n    position: static;\n    margin-top: 4px;\n  }\n\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoint.xs}px) {\n    width: 100%;\n  }\n`\n\nexport function usePriceHistory(tokenPriceData: TokenPriceQuery | undefined): PricePoint[] | undefined {\n  // Appends the current price to the end of the priceHistory array\n  const priceHistory = useMemo(() => {\n    const market = tokenPriceData?.token?.market\n    const priceHistory = market?.priceHistory?.filter(isPricePoint)\n    const currentPrice = market?.price?.value\n    if (Array.isArray(priceHistory) && currentPrice !== undefined) {\n      const timestamp = Date.now() / 1000\n      return [...priceHistory, { timestamp, value: currentPrice }]\n    }\n    return priceHistory\n  }, [tokenPriceData])\n\n  return priceHistory\n}\n\nexport default function ChartSection({\n  chartType,\n  priceChartType,\n  timePeriod,\n  onChangeTimePeriod,\n  tokenPriceQuery,\n  extractedColor,\n}: {\n  chartType: ChartType\n  priceChartType: PriceChartType\n  timePeriod: TimePeriod\n  onChangeTimePeriod: (t: TimePeriod) => void\n  tokenPriceQuery?: TokenPriceQuery\n  extractedColor: string\n}) {\n  const isInfoTDPEnabled = useInfoTDPEnabled()\n\n  if (!tokenPriceQuery) {\n    return <LoadingChart />\n  }\n\n  return (\n    <Suspense fallback={<LoadingChart />}>\n      <ChartContainer isInfoTDPEnabled={isInfoTDPEnabled} data-testid=\"chart-container\">\n        <Chart\n          chartType={chartType}\n          priceChartType={priceChartType}\n          timePeriod={timePeriod}\n          tokenPriceQuery={tokenPriceQuery}\n          extractedColor={extractedColor}\n        />\n        {isInfoTDPEnabled ? (\n          <TimePeriodSelectorContainer>\n            <TimePeriodSelector timePeriod={timePeriod} onChangeTimePeriod={onChangeTimePeriod} />\n          </TimePeriodSelectorContainer>\n        ) : (\n          <TimePeriodSelector timePeriod={timePeriod} onChangeTimePeriod={onChangeTimePeriod} />\n        )}\n      </ChartContainer>\n    </Suspense>\n  )\n}\n\nfunction Chart({\n  chartType,\n  priceChartType,\n  timePeriod,\n  tokenPriceQuery,\n  extractedColor,\n}: {\n  chartType: ChartType\n  priceChartType: PriceChartType\n  timePeriod: TimePeriod\n  tokenPriceQuery: TokenPriceQuery\n  extractedColor: string\n}) {\n  const prices = usePriceHistory(tokenPriceQuery)\n\n  const isInfoTDPEnabled = useInfoTDPEnabled()\n  if (!isInfoTDPEnabled) {\n    return (\n      <ParentSize>\n        {({ width }) => (\n          <OldPriceChart prices={prices} width={width} height={TDP_CHART_HEIGHT_PX} timePeriod={timePeriod} />\n        )}\n      </ParentSize>\n    )\n  }\n\n  switch (chartType) {\n    case ChartType.PRICE:\n      return <PriceChart prices={prices} height={TDP_CHART_HEIGHT_PX} type={priceChartType} />\n    case ChartType.VOLUME:\n      return (\n        <VolumeChart volumes={prices} height={TDP_CHART_HEIGHT_PX} color={extractedColor} timePeriod={timePeriod} />\n      )\n    case ChartType.TVL:\n      return <StackedLineChart height={TDP_CHART_HEIGHT_PX} />\n    default:\n      return null\n  }\n}\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCandlestickChartIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.41667 15.5H7.58333C6.75 15.5 6.33333 15.0833 6.33333 14.25V1.75C6.33333 0.916667 6.75 0.5 7.58333 0.5H8.41667C9.25 0.5 9.66667 0.916667 9.66667 1.75V14.25C9.66667 15.0833 9.25 15.5 8.41667 15.5ZM15.5 8.83333V3.83333C15.5 3 15.0833 2.58333 14.25 2.58333H13.4167C12.5833 2.58333 12.1667 3 12.1667 3.83333V8.83333C12.1667 9.66667 12.5833 10.0833 13.4167 10.0833H14.25C15.0833 10.0833 15.5 9.66667 15.5 8.83333ZM3.83333 10.9167V7.58333C3.83333 6.75 3.41667 6.33333 2.58333 6.33333H1.75C0.916667 6.33333 0.5 6.75 0.5 7.58333V10.9167C0.5 11.75 0.916667 12.1667 1.75 12.1667H2.58333C3.41667 12.1667 3.83333 11.75 3.83333 10.9167Z\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCandlestickChartIcon);\nexport default __webpack_public_path__ + \"static/media/candlestick-chart-icon.7a641d46c17b62acbd75955585a586b8.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLineChartIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.02 9C23.02 10.104 22.124 11 21.02 11C20.738 11 20.47 10.94 20.226 10.835L16.855 14.2061C16.96 14.4501 17.021 14.717 17.021 15C17.021 16.104 16.125 17 15.021 17C13.917 17 13.016 16.104 13.016 15C13.016 14.727 13.071 14.467 13.17 14.229L9.787 10.8459C9.551 10.9439 9.292 10.999 9.021 10.999C8.739 10.999 8.471 10.939 8.22701 10.834L4.856 14.2051C4.961 14.4491 5.022 14.716 5.022 14.999C5.022 16.103 4.126 16.999 3.022 16.999C1.918 16.999 1.017 16.103 1.017 14.999C1.017 13.895 1.90699 12.999 3.01199 12.999H3.022C3.294 12.999 3.55199 13.0541 3.78799 13.1521L7.172 9.76807C7.073 9.53107 7.017 9.27102 7.017 8.99902C7.017 7.89502 7.90699 6.99902 9.01199 6.99902H9.022C10.126 6.99902 11.022 7.89502 11.022 8.99902C11.022 9.28102 10.962 9.54897 10.856 9.79297L14.224 13.1609C14.465 13.0569 14.731 12.999 15.011 12.999H15.021C15.293 12.999 15.551 13.0541 15.787 13.1521L19.171 9.76807C19.072 9.53107 19.016 9.27102 19.016 8.99902C19.016 7.89502 19.906 6.99902 21.011 6.99902H21.021C22.125 7.00002 23.02 7.896 23.02 9Z\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLineChartIcon);\nexport default __webpack_public_path__ + \"static/media/line-chart-icon.4459e03ec7bf02cdc1e94ea9a57d144e.svg\";\nexport { ForwardRef as ReactComponent };","import { ReactComponent as CandlestickChartIcon } from 'assets/svg/candlestick-chart-icon.svg'\nimport { ReactComponent as LineChartIcon } from 'assets/svg/line-chart-icon.svg'\nimport { PriceChartType } from 'components/Charts/utils'\nimport PillMultiToggle from 'components/Toggle/PillMultiToggle'\nimport { useTheme } from 'styled-components'\nimport { FadePresence } from 'theme/components/FadePresence'\n\nconst ADVANCED_PRICE_CHART_OPTIONS = [\n  { value: PriceChartType.LINE, display: <LineChartIcon /> },\n  { value: PriceChartType.CANDLESTICK, display: <CandlestickChartIcon /> },\n]\n\nexport const AdvancedPriceChartToggle = ({\n  currentChartType,\n  onChartTypeChange,\n}: {\n  currentChartType: PriceChartType\n  onChartTypeChange: (c: PriceChartType) => void\n}) => {\n  const theme = useTheme()\n  return (\n    <FadePresence $transitionDuration={theme.transition.duration.fast}>\n      <PillMultiToggle\n        options={ADVANCED_PRICE_CHART_OPTIONS}\n        currentSelected={currentChartType}\n        onSelectOption={onChartTypeChange as (c: string) => void}\n      />\n    </FadePresence>\n  )\n}\n","import { darken } from 'polished'\nimport styled from 'styled-components'\nimport { ExternalLink } from 'theme/components'\n\nconst ResourceLink = styled(ExternalLink)`\n  display: flex;\n  color: ${({ theme }) => theme.accent1};\n  font-weight: 535;\n  font-size: 14px;\n  line-height: 20px;\n  gap: 4px;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => darken(0.1, theme.accent1)};\n    text-decoration: none;\n  }\n`\nexport default function Resource({ name, link }: { name: string; link: string }) {\n  return (\n    <ResourceLink href={link}>\n      {name}\n      <sup>↗</sup>\n    </ResourceLink>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { ArrowDown } from 'react-feather'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nimport { ArrowContainer, ArrowWrapper } from './styled'\n\nconst StyledArrowWrapper = styled(ArrowWrapper)`\n  position: absolute;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin: 0;\n`\n\nconst LoadingWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  justify-content: space-between;\n\n  padding: 8px;\n  border: ${({ theme }) => `1px solid ${theme.surface3}`};\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.surface1};\n`\n\nconst Blob = styled.div<{ width?: number; radius?: number }>`\n  background-color: ${({ theme }) => theme.surface2};\n  border-radius: ${({ radius }) => (radius ?? 4) + 'px'};\n  height: 56px;\n  width: ${({ width }) => (width ? width + 'px' : '100%')};\n`\n\nconst ModuleBlob = styled(Blob)`\n  background-color: ${({ theme }) => theme.surface3};\n  height: 36px;\n`\n\nconst TitleColumn = styled.div`\n  padding: 8px;\n`\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst InputColumn = styled.div`\n  display: flex;\n  flex-flow: column;\n  background-color: ${({ theme }) => theme.surface2};\n  border-radius: 16px;\n  display: flex;\n  gap: 30px;\n  padding: 48px 12px;\n`\n\nconst OutputWrapper = styled.div`\n  position: relative;\n`\n\nfunction Title() {\n  return (\n    <TitleColumn>\n      <ThemedText.SubHeader>\n        <Trans>Swap</Trans>\n      </ThemedText.SubHeader>\n    </TitleColumn>\n  )\n}\n\nfunction FloatingInput() {\n  return (\n    <Row>\n      <ModuleBlob width={60} />\n      <ModuleBlob width={100} radius={16} />\n    </Row>\n  )\n}\n\nfunction FloatingButton() {\n  return <Blob radius={16} />\n}\n\nexport function SwapSkeleton() {\n  const theme = useTheme()\n\n  return (\n    <LoadingWrapper>\n      <Title />\n      <InputColumn>\n        <FloatingInput />\n      </InputColumn>\n      <OutputWrapper>\n        <StyledArrowWrapper clickable={false}>\n          <ArrowContainer>\n            <ArrowDown size=\"16\" color={theme.neutral3} />\n          </ArrowContainer>\n        </StyledArrowWrapper>\n        <InputColumn>\n          <FloatingInput />\n        </InputColumn>\n      </OutputWrapper>\n      <FloatingButton />\n    </LoadingWrapper>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { BreadcrumbNavContainer, BreadcrumbNavLink } from 'components/BreadcrumbNav'\nimport Row from 'components/Row'\nimport { SwapSkeleton } from 'components/swap/SwapSkeleton'\nimport { useInfoExplorePageEnabled } from 'featureFlags/flags/infoExplore'\nimport { useInfoTDPEnabled } from 'featureFlags/flags/infoTDP'\nimport { supportedChainIdFromGQLChain, validateUrlChainParam } from 'graphql/data/util'\nimport { useCurrency } from 'hooks/Tokens'\nimport { ReactNode } from 'react'\nimport { ArrowLeft, ChevronRight } from 'react-feather'\nimport { useParams } from 'react-router-dom'\nimport styled, { css, useTheme } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ClickableStyle, ThemedText } from 'theme/components'\nimport { textFadeIn } from 'theme/styles'\nimport { capitalize } from 'tsafe'\nimport { ExplorerDataType, getExplorerLink } from 'utils/getExplorerLink'\n\nimport { LoadingBubble } from '../loading'\nimport { AboutContainer, AboutHeader } from './About'\nimport { ChartContainer } from './ChartSection'\nimport { Hr } from './shared'\nimport { StatPair, StatsWrapper, StatWrapper } from './StatsSection'\n\nconst SWAP_COMPONENT_WIDTH = 360\n\nexport const TokenDetailsLayout = styled.div`\n  display: flex;\n  padding: 0 16px 52px;\n  justify-content: center;\n  width: 100%;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    gap: 16px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.md}px) {\n    gap: 40px;\n    padding: 48px 20px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.xl}px) {\n    gap: 60px;\n  }\n`\nexport const LeftPanel = styled.div`\n  flex: 1;\n  max-width: 780px;\n  overflow: hidden;\n`\nexport const RightPanel = styled.div<{ isInfoTDPEnabled?: boolean }>`\n  display: none;\n  flex-direction: column;\n  gap: ${({ isInfoTDPEnabled }) => (isInfoTDPEnabled ? 40 : 20)}px;\n  width: ${SWAP_COMPONENT_WIDTH}px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.lg}px) {\n    display: flex;\n  }\n`\nconst LoadingChartContainer = styled.div<{ isInfoTDPEnabled?: boolean }>`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  height: 100%;\n  padding-bottom: 66px;\n  overflow: hidden;\n  margin-bottom: ${({ isInfoTDPEnabled }) => (isInfoTDPEnabled ? '14' : '44')}px;\n`\nexport const TokenInfoContainer = styled.div<{ isInfoTDPEnabled?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: ${({ isInfoTDPEnabled }) => (isInfoTDPEnabled ? 'flex-start' : 'center')};\n  margin-bottom: ${({ isInfoTDPEnabled }) => (isInfoTDPEnabled ? '12' : '4')}px;\n  gap: 20px;\n  ${textFadeIn};\n  animation-duration: ${({ theme }) => theme.transition.duration.medium};\n`\nexport const TokenNameCell = styled.div<{ isInfoTDPEnabled?: boolean }>`\n  display: flex;\n  gap: 8px;\n  font-size: 20px;\n  line-height: 28px;\n  align-items: center;\n\n  ${({ isInfoTDPEnabled }) =>\n    isInfoTDPEnabled &&\n    css`\n      padding-top: 4px;\n      min-width: 32px;\n      @media screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n        flex-direction: column;\n        align-items: flex-start;\n      }\n    `}\n`\n/* Loading state bubbles */\nconst DetailBubble = styled(LoadingBubble)`\n  height: 16px;\n  width: 180px;\n`\nconst SquaredBubble = styled(DetailBubble)`\n  height: 32px;\n  border-radius: 8px;\n`\nconst NavBubble = styled(DetailBubble)`\n  width: 169px;\n`\nconst TokenLogoBubble = styled(DetailBubble)`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`\nconst TitleBubble = styled(DetailBubble)`\n  width: 136px;\n`\nconst PriceBubble = styled(SquaredBubble)`\n  margin-top: 4px;\n  height: 40px;\n`\n\nconst SectionBubble = styled(SquaredBubble)`\n  width: 120px;\n`\nconst StatTitleBubble = styled(DetailBubble)`\n  width: 80px;\n  margin-bottom: 4px;\n`\nconst StatBubble = styled(SquaredBubble)`\n  width: 116px;\n`\nconst WideBubble = styled(DetailBubble)`\n  margin-bottom: 6px;\n  width: 100%;\n`\n\nconst ThinTitleBubble = styled(WideBubble)`\n  width: 120px;\n`\n\nconst HalfWideBubble = styled(WideBubble)`\n  width: 50%;\n`\n\nconst StatsLoadingContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n`\n\nconst ExtraDetailsContainer = styled.div`\n  padding-top: 24px;\n`\n\nconst ChartAnimation = styled.div`\n  animation: wave 8s cubic-bezier(0.36, 0.45, 0.63, 0.53) infinite;\n  display: flex;\n  overflow: hidden;\n  margin-top: 90px;\n\n  @keyframes wave {\n    0% {\n      margin-left: 0;\n    }\n    100% {\n      margin-left: -800px;\n    }\n  }\n`\nconst Space = styled.div<{ heightSize: number }>`\n  height: ${({ heightSize }) => `${heightSize}px`};\n`\n\nconst loadingFooterTextCss = css`\n  color: ${({ theme }) => theme.neutral3};\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 16px;\n  text-decoration: none;\n`\n\nconst LoadingFooterHeaderContainer = styled(Row)`\n  align-items: center;\n  ${loadingFooterTextCss}\n\n  @media screen and (min-width: ${BREAKPOINTS.md}px) {\n    padding: 16px 90px 8px 0;\n    position: fixed;\n    bottom: 0;\n    right: 0;\n    justify-content: flex-end;\n  }\n`\n\nconst LoadingFooterHeader = styled.h1`\n  ${loadingFooterTextCss}\n`\n\nconst LoadingFooterLink = styled.a`\n  ${loadingFooterTextCss}\n  ${ClickableStyle}\n`\n\n// exported for testing\nexport function getLoadingTitle(\n  token: Currency | undefined,\n  tokenAddress: string,\n  chainId: number,\n  chainName: string | undefined\n): ReactNode {\n  let tokenName = ''\n  if (token?.name && token?.symbol) {\n    tokenName = `${token?.name} (${token?.symbol})`\n  } else if (token?.name) {\n    tokenName = token?.name\n  } else if (token?.symbol) {\n    tokenName = token?.symbol\n  } else {\n    tokenName = tokenAddress || ''\n  }\n  const chainSuffix = chainName ? ` on ${capitalize(chainName)}` : ''\n  const tokenLink = token?.isNative ? (\n    tokenName\n  ) : (\n    <LoadingFooterLink\n      href={getExplorerLink(chainId, tokenAddress, ExplorerDataType.TOKEN)}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {tokenName}\n    </LoadingFooterLink>\n  )\n  return (\n    <Trans>\n      token data for {tokenLink}\n      {chainSuffix}\n    </Trans>\n  )\n}\n\nfunction Wave() {\n  const theme = useTheme()\n  return (\n    <svg width=\"416\" height=\"160\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M 0 80 Q 104 10, 208 80 T 416 80\" stroke={theme.surface3} fill=\"transparent\" strokeWidth=\"2\" />\n    </svg>\n  )\n}\n\nexport function LoadingChart() {\n  const isInfoTDPEnabled = useInfoTDPEnabled()\n  return (\n    <ChartContainer isInfoTDPEnabled={isInfoTDPEnabled}>\n      <ThemedText.HeadlineLarge>\n        <PriceBubble />\n      </ThemedText.HeadlineLarge>\n      <Space heightSize={6} />\n      <LoadingChartContainer isInfoTDPEnabled={isInfoTDPEnabled}>\n        <div>\n          <ChartAnimation>\n            <Wave />\n            <Wave />\n            <Wave />\n            <Wave />\n            <Wave />\n          </ChartAnimation>\n        </div>\n      </LoadingChartContainer>\n    </ChartContainer>\n  )\n}\n\nfunction LoadingStats() {\n  return (\n    <StatsWrapper>\n      <SectionBubble />\n      <StatsLoadingContainer>\n        <StatPair>\n          <StatWrapper>\n            <StatTitleBubble />\n            <StatBubble />\n          </StatWrapper>\n          <StatWrapper>\n            <StatTitleBubble />\n            <StatBubble />\n          </StatWrapper>\n        </StatPair>\n        <StatPair>\n          <StatWrapper>\n            <StatTitleBubble />\n            <StatBubble />\n          </StatWrapper>\n          <StatWrapper>\n            <StatTitleBubble />\n            <StatBubble />\n          </StatWrapper>\n        </StatPair>\n      </StatsLoadingContainer>\n    </StatsWrapper>\n  )\n}\n\n/* Loading State: row component with loading bubbles */\nexport default function TokenDetailsSkeleton() {\n  const { chainName, tokenAddress } = useParams<{ chainName?: string; tokenAddress?: string }>()\n  const isInfoExplorePageEnabled = useInfoExplorePageEnabled()\n  const isInfoTDPEnabled = useInfoTDPEnabled()\n  const chainId = supportedChainIdFromGQLChain(validateUrlChainParam(chainName))\n  const token = useCurrency(tokenAddress === 'NATIVE' ? 'ETH' : tokenAddress, chainId)\n\n  return (\n    <LeftPanel>\n      {isInfoTDPEnabled ? (\n        <BreadcrumbNavContainer isInfoTDPEnabled aria-label=\"breadcrumb-nav\">\n          <BreadcrumbNavLink to={`/explore/${chainName}`}>\n            <Trans>Explore</Trans> <ChevronRight size={14} />\n          </BreadcrumbNavLink>\n          <BreadcrumbNavLink to={`/explore/tokens/${chainName}`}>\n            <Trans>Tokens</Trans> <ChevronRight size={14} />\n          </BreadcrumbNavLink>\n          <NavBubble />\n        </BreadcrumbNavContainer>\n      ) : (\n        <BreadcrumbNavContainer>\n          <BreadcrumbNavLink\n            to={(isInfoExplorePageEnabled ? '/explore' : '') + (chainName ? `/tokens/${chainName}` : `/tokens`)}\n          >\n            <ArrowLeft size={14} /> Tokens\n          </BreadcrumbNavLink>\n        </BreadcrumbNavContainer>\n      )}\n      <TokenInfoContainer>\n        <TokenNameCell>\n          <TokenLogoBubble />\n          <TitleBubble />\n        </TokenNameCell>\n      </TokenInfoContainer>\n      <LoadingChart />\n\n      <Space heightSize={4} />\n      <LoadingStats />\n      <Hr />\n      <AboutContainer>\n        <AboutHeader>\n          <SectionBubble />\n        </AboutHeader>\n      </AboutContainer>\n      <WideBubble />\n      <WideBubble />\n      <HalfWideBubble style={{ marginBottom: '24px' }} />\n      <ExtraDetailsContainer>\n        <ThinTitleBubble />\n        <HalfWideBubble />\n      </ExtraDetailsContainer>\n      <ExtraDetailsContainer>\n        <ThinTitleBubble />\n        <HalfWideBubble />\n      </ExtraDetailsContainer>\n      {tokenAddress && (\n        <LoadingFooterHeaderContainer gap=\"xs\">\n          <Trans>Loading</Trans>\n          <LoadingFooterHeader>{getLoadingTitle(token, tokenAddress, chainId, chainName)}</LoadingFooterHeader>\n        </LoadingFooterHeaderContainer>\n      )}\n    </LeftPanel>\n  )\n}\n\nexport function TokenDetailsPageSkeleton() {\n  return (\n    <TokenDetailsLayout>\n      <TokenDetailsSkeleton />\n      <RightPanel>\n        <SwapSkeleton />\n      </RightPanel>\n    </TokenDetailsLayout>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { ChainId } from '@uniswap/sdk-core'\nimport { MouseoverTooltip } from 'components/Tooltip'\nimport { getChainInfo } from 'constants/chainInfo'\nimport { useInfoTDPEnabled } from 'featureFlags/flags/infoTDP'\nimport { TokenQueryData } from 'graphql/data/Token'\nimport { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { ExternalLink, ThemedText } from 'theme/components'\nimport { textFadeIn } from 'theme/styles'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { UNSUPPORTED_METADATA_CHAINS } from '../constants'\nimport { TokenSortMethod } from '../state'\nimport { HEADER_DESCRIPTIONS } from '../TokenTable/TokenRow'\n\nexport const StatWrapper = styled.div<{ isInfoTDPEnabled?: boolean }>`\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 14px;\n  min-width: 121px;\n  flex: 1;\n  padding-top: 24px;\n  padding-bottom: ${({ isInfoTDPEnabled }) => (isInfoTDPEnabled ? '0px' : '24px')};\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    min-width: 168px;\n  }\n`\nconst TokenStatsSection = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\nexport const StatPair = styled.div`\n  display: flex;\n  flex: 1;\n  flex-wrap: wrap;\n`\n\nconst Header = styled(ThemedText.MediumHeader)<{ isInfoTDPEnabled?: boolean }>`\n  font-size: 28px !important;\n  padding-top: ${({ isInfoTDPEnabled }) => (isInfoTDPEnabled ? '40' : '24')}px;\n`\n\nconst StatPrice = styled.div`\n  margin-top: 4px;\n  font-size: 28px;\n  color: ${({ theme }) => theme.neutral1};\n`\nconst NoData = styled.div<{ isInfoTDPEnabled?: boolean }>`\n  color: ${({ theme }) => theme.neutral3};\n  ${({ isInfoTDPEnabled }) => isInfoTDPEnabled && 'padding-top: 40px;'}\n`\nexport const StatsWrapper = styled.div`\n  gap: 16px;\n  ${textFadeIn}\n`\n\ntype NumericStat = number | undefined | null\n\nfunction Stat({\n  dataCy,\n  value,\n  title,\n  description,\n}: {\n  dataCy: string\n  value: NumericStat\n  title: ReactNode\n  description?: ReactNode\n}) {\n  const { formatNumber } = useFormatter()\n  const isInfoTDPEnabled = useInfoTDPEnabled()\n\n  return (\n    <StatWrapper data-cy={`${dataCy}`} isInfoTDPEnabled={isInfoTDPEnabled}>\n      <MouseoverTooltip text={description}>{title}</MouseoverTooltip>\n      <StatPrice>\n        {formatNumber({\n          input: value,\n          type: NumberType.FiatTokenStats,\n        })}\n      </StatPrice>\n    </StatWrapper>\n  )\n}\n\ntype StatsSectionProps = {\n  chainId: ChainId\n  address: string\n  tokenQueryData: TokenQueryData\n}\nexport default function StatsSection(props: StatsSectionProps) {\n  const { chainId, address, tokenQueryData } = props\n  const { label, infoLink } = getChainInfo(chainId)\n  const isInfoTDPEnabled = useInfoTDPEnabled()\n\n  const tokenMarketInfo = tokenQueryData?.market\n  const tokenProjectMarketInfo = tokenQueryData?.project?.markets?.[0] // aggregated market price from CoinGecko\n\n  const FDV = tokenProjectMarketInfo?.fullyDilutedValuation?.value\n  const marketCap = tokenProjectMarketInfo?.marketCap?.value\n  const TVL = tokenMarketInfo?.totalValueLocked?.value\n  const volume24H = tokenMarketInfo?.volume24H?.value\n  const priceHigh52W = tokenMarketInfo?.priceHigh52W?.value\n  const priceLow52W = tokenMarketInfo?.priceLow52W?.value\n\n  const hasStats = isInfoTDPEnabled\n    ? TVL || FDV || marketCap || volume24H\n    : TVL || volume24H || priceLow52W || priceHigh52W\n\n  if (hasStats) {\n    return (\n      <StatsWrapper data-testid=\"token-details-stats\">\n        <Header isInfoTDPEnabled={isInfoTDPEnabled}>\n          <Trans>Stats</Trans>\n        </Header>\n        <TokenStatsSection>\n          {isInfoTDPEnabled ? (\n            <>\n              <StatPair>\n                <Stat\n                  dataCy=\"tvl\"\n                  value={TVL}\n                  description={HEADER_DESCRIPTIONS[TokenSortMethod.TOTAL_VALUE_LOCKED]}\n                  title={<Trans>TVL</Trans>}\n                />\n                <Stat\n                  dataCy=\"market-cap\"\n                  value={marketCap}\n                  description={\n                    <Trans>\n                      Market capitalization is the total market value of an asset&apos;s circulating supply.\n                    </Trans>\n                  }\n                  title={<Trans>Market cap</Trans>}\n                />\n              </StatPair>\n              <StatPair>\n                <Stat\n                  dataCy=\"fdv\"\n                  value={FDV}\n                  description={HEADER_DESCRIPTIONS[TokenSortMethod.FULLY_DILUTED_VALUATION]}\n                  title={<Trans>FDV</Trans>}\n                />\n                <Stat\n                  dataCy=\"volume-24h\"\n                  value={volume24H}\n                  description={\n                    <Trans>\n                      1 day volume is the amount of the asset that has been traded on Uniswap v3 during the past 24\n                      hours.\n                    </Trans>\n                  }\n                  title={<Trans>1 day volume</Trans>}\n                />\n              </StatPair>\n            </>\n          ) : (\n            <>\n              <StatPair>\n                <Stat\n                  dataCy=\"tvl\"\n                  value={TVL}\n                  description={HEADER_DESCRIPTIONS[TokenSortMethod.TOTAL_VALUE_LOCKED]}\n                  title={<Trans>TVL</Trans>}\n                />\n                <Stat\n                  dataCy=\"volume-24h\"\n                  value={volume24H}\n                  description={\n                    <Trans>\n                      24H volume is the amount of the asset that has been traded on Uniswap v3 during the past 24 hours.\n                    </Trans>\n                  }\n                  title={<Trans>24H volume</Trans>}\n                />\n              </StatPair>\n              <StatPair>\n                <Stat dataCy=\"52w-low\" value={priceLow52W} title={<Trans>52W low</Trans>} />\n                <Stat dataCy=\"52w-high\" value={priceHigh52W} title={<Trans>52W high</Trans>} />\n              </StatPair>\n            </>\n          )}\n        </TokenStatsSection>\n      </StatsWrapper>\n    )\n  } else {\n    return UNSUPPORTED_METADATA_CHAINS.includes(chainId) ? (\n      <>\n        <Header isInfoTDPEnabled={isInfoTDPEnabled}>\n          <Trans>Stats</Trans>\n        </Header>\n        <ThemedText.BodySecondary paddingTop=\"12px\">\n          <Trans>\n            Token stats and charts for {label} are available on{' '}\n            <ExternalLink color=\"currentColor\" href={`${infoLink}tokens/${address}`}>\n              info.uniswap.org\n            </ExternalLink>\n          </Trans>\n        </ThemedText.BodySecondary>\n      </>\n    ) : (\n      <NoData isInfoTDPEnabled={isInfoTDPEnabled}>No stats available</NoData>\n    )\n  }\n}\n","import { darken } from 'polished'\nimport styled from 'styled-components'\n\nexport const Hr = styled.hr`\n  background-color: ${({ theme }) => theme.surface3};\n  border: none;\n  height: 0.5px;\n`\n\nexport const NoInfoAvailable = styled.p`\n  color: ${({ theme }) => theme.neutral3};\n  font-weight: 485;\n  font-size: 16px;\n`\n\nexport const TruncateDescriptionButton = styled.div`\n  color: ${({ theme }) => theme.neutral2};\n  font-weight: 485;\n  font-size: 0.85em;\n  padding-top: 0.5em;\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => darken(0.1, theme.neutral2)};\n    cursor: pointer;\n  }\n`\n\nexport const truncateDescription = (desc: string, maxCharacterCount = TRUNCATE_CHARACTER_COUNT) => {\n  //trim the string to the maximum length\n  let tokenDescriptionTruncated = desc.slice(0, maxCharacterCount)\n  //re-trim if we are in the middle of a word\n  tokenDescriptionTruncated = `${tokenDescriptionTruncated.slice(\n    0,\n    Math.min(tokenDescriptionTruncated.length, tokenDescriptionTruncated.lastIndexOf(' '))\n  )}...`\n  return tokenDescriptionTruncated\n}\n\nexport const TRUNCATE_CHARACTER_COUNT = 400\n"],"names":["PriceChartModel","ChartModel","updateOptions","params","super","data","theme","type","this","api","removeSeries","series","PriceChartType","LINE","addAreaSeries","addCandlestickSeries","setData","minPriceLine","createPriceLine","price","maxPriceLine","fitContent","min","max","getCandlestickPriceBounds","applyOptions","priceLineVisible","lastValueVisible","lineType","length","LineType","WithSteps","Curved","lineWidth","lineColor","accent1","topColor","opacify","bottomColor","crosshairMarkerRadius","crosshairMarkerBorderColor","crosshairMarkerBorderWidth","upColor","success","wickUpColor","downColor","critical","wickDownColor","borderVisible","priceLineOptions","color","surface3","lineStyle","LineStyle","Dashed","axisLabelColor","neutral3","axisLabelTextColor","neutral2","constructor","chartDiv","DeltaContainer","styled","div","mockCandlestickData","prices","minIndex","maxIndex","mockedData","map","pricePoint","index","open","value","close","high","Math","abs","low","time","timestamp","PriceChartDelta","startingPrice","endingPrice","noColor","delta","calculateDelta","formatDelta","useFormatter","DeltaArrow","PriceChart","height","mockedPrices","useMemo","lastPrice","Chart","Model","crosshairData","ChartHeader","additionalFields","valueFormatterType","NumberType","FiatTokenPrice","EtherscanLogo","props","svg","width","viewBox","fill","xmlns","stroke","path","d","OptionsSelector","ActivePill","OptionButton","button","active","neutral1","transition","duration","fast","opacity","hover","getPillMultiToggleOption","option","PillMultiToggle","options","currentSelected","onSelectOption","buttonRefs","createRef","buttonSizing","setButtonSizing","useState","useLayoutEffect","sizeMap","reduce","acc","ref","current","offsetWidth","left","offsetLeft","style","i","display","onClick","TokenDescriptionContainer","AboutContainer","textFadeIn","AboutHeader","ThemedText","MediumHeader","ResourcesContainer","AboutSection","address","chainId","description","homepageUrl","twitterName","isDescriptionTruncated","setIsDescriptionTruncated","shouldTruncate","TRUNCATE_CHARACTER_COUNT","tokenDescription","truncateDescription","explorer","infoLink","getChainInfo","data-testid","NoInfoAvailable","p","TruncateDescriptionButton","br","SubHeaderSmall","data-cy","Resource","name","ChainId","MAINNET","link","config","ms","easing","easeSinOut","AnimatedInLineChart","getX","getY","marginTop","curve","strokeWidth","lineRef","useRef","lineLength","setLineLength","shouldAnimate","setShouldAnimate","hasAnimatedIn","setHasAnimatedIn","spring","useSpring","frame","onRest","useEffect","getTotalLength","useTheme","Group","top","LinePath","x","y","animated","strokeOpacity","strokeDashoffset","to","v","strokeDasharray","React","easeCubicInOut","FadedInLineChart","dashed","undefined","ChartErrorType","NO_DATA_AVAILABLE","NO_RECENT_VOLUME","INVALID_CHART","HOUR_OPTIONS","hour","minute","hour12","DAY_HOUR_OPTIONS","month","day","TimestampFormatterType","TICK","CROSSHAIR","TIME_PERIOD_TO_FORMAT_OPTIONS","TimePeriod","HOUR","DAY","WEEK","weekday","MONTH","YEAR","year","getTimestampFormatter","timePeriod","locale","formatterType","dateTimeFormatter","Intl","DateTimeFormat","epochTimeInMilliseconds","valueOf","format","CHART_MARGIN","bottom","crosshair","ChartHeaderWrapper","medium","stale","PriceContainer","ChartDelta","crosshairPrice","chart","formatFiatPrice","lastValidPrice","priceOutdated","displayPrice","displayIsStale","HeadlineLarge","MouseoverTooltip","text","Info","size","ChartBody","useActiveLocale","blanks","timeScale","priceScale","dimensions","ticks","tickTimestampFormatter","crosshairTimestampFormatter","maxTicks","floor","getTicks","setCrosshair","resetCrosshair","useCallback","setCrosshairOnHover","event","localPoint","getNearestPricePoint","crosshairEdgeMax","crosshairAtEdge","curveTension","curveCardinal","tension","minWidth","blank","g","AxisBottom","scale","hideTicks","tickValues","tickFormat","tickLabelProps","fontSize","textAnchor","transform","Line","from","pointerEvents","GlyphCircle","hideAxisLine","line","x1","y1","x2","y2","shapeRendering","rect","onTouchStart","onTouchMove","onMouseMove","onMouseLeave","CHART_ERROR_MESSAGES","MissingPriceChart","midPoint","BodySmall","error","innerHeight","marginBottom","fixedPrices","cleanPricePoints","getPriceBounds","scaleLinear","domain","range","buildChartModel","TDP_CHART_HEIGHT_PX","ChartContainer","isInfoTDPEnabled","TimePeriodSelectorContainer","Z_INDEX","breakpoint","lg","xs","usePriceHistory","tokenPriceData","market","token","priceHistory","filter","isPricePoint","currentPrice","Array","isArray","Date","now","ChartSection","chartType","priceChartType","onChangeTimePeriod","tokenPriceQuery","extractedColor","useInfoTDPEnabled","Suspense","fallback","LoadingChart","TimePeriodSelector","ParentSize","OldPriceChart","ChartType","PRICE","VOLUME","VolumeChart","volumes","TVL","StackedLineChart","_path","_extends","Object","assign","bind","target","arguments","source","key","prototype","hasOwnProperty","call","apply","SvgCandlestickChartIcon","_ref","svgRef","title","titleId","id","ForwardRef","SvgLineChartIcon","ADVANCED_PRICE_CHART_OPTIONS","LineChartIcon","CANDLESTICK","CandlestickChartIcon","AdvancedPriceChartToggle","currentChartType","onChartTypeChange","FadePresence","$transitionDuration","ResourceLink","ExternalLink","darken","href","sup","StyledArrowWrapper","ArrowWrapper","LoadingWrapper","surface1","Blob","surface2","radius","ModuleBlob","TitleColumn","Row","InputColumn","OutputWrapper","Title","SubHeader","FloatingInput","FloatingButton","SwapSkeleton","clickable","ArrowContainer","ArrowDown","TokenDetailsLayout","sm","md","xl","LeftPanel","RightPanel","LoadingChartContainer","TokenInfoContainer","TokenNameCell","css","DetailBubble","LoadingBubble","SquaredBubble","NavBubble","TokenLogoBubble","TitleBubble","PriceBubble","SectionBubble","StatTitleBubble","StatBubble","WideBubble","ThinTitleBubble","HalfWideBubble","StatsLoadingContainer","ExtraDetailsContainer","ChartAnimation","Space","heightSize","loadingFooterTextCss","LoadingFooterHeaderContainer","BREAKPOINTS","LoadingFooterHeader","h1","LoadingFooterLink","a","ClickableStyle","getLoadingTitle","tokenAddress","chainName","tokenName","symbol","chainSuffix","capitalize","tokenLink","isNative","getExplorerLink","ExplorerDataType","TOKEN","rel","Wave","LoadingStats","StatsWrapper","StatPair","StatWrapper","TokenDetailsSkeleton","useParams","isInfoExplorePageEnabled","useInfoExplorePageEnabled","supportedChainIdFromGQLChain","validateUrlChainParam","useCurrency","BreadcrumbNavContainer","aria-label","BreadcrumbNavLink","ChevronRight","ArrowLeft","Hr","gap","TokenDetailsPageSkeleton","TokenStatsSection","Header","StatPrice","NoData","Stat","dataCy","formatNumber","input","FiatTokenStats","StatsSection","tokenQueryData","label","tokenMarketInfo","tokenProjectMarketInfo","project","markets","FDV","fullyDilutedValuation","marketCap","totalValueLocked","volume24H","priceHigh52W","priceLow52W","HEADER_DESCRIPTIONS","TokenSortMethod","TOTAL_VALUE_LOCKED","FULLY_DILUTED_VALUATION","UNSUPPORTED_METADATA_CHAINS","includes","BodySecondary","paddingTop","hr","desc","maxCharacterCount","tokenDescriptionTruncated","slice","lastIndexOf"],"sourceRoot":""}